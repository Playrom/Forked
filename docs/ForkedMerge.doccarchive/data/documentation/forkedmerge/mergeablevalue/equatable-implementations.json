{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations"},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"anchor":"Operators","title":"Operators","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)"]}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"ForkedMerge"}],"title":"Equatable Implementations","role":"collectionGroup"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations"]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"]]},"sections":[],"kind":"article","references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"type":"topic","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N PreguiÃ§a, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","kind":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"}],"title":"MergeableValue"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/!=(_:_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)","url":"\/documentation\/forkedmerge\/mergeablevalue\/!=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","title":"!=(_:_:)","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}]},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","title":"ForkedMerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]}}}