{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"kind":"symbol","abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"type":"text","text":" "},{"type":"text","text":"The result is different to merging where the elements are not mergeable."},{"type":"text","text":" "},{"text":"This call will recurse the merge.","type":"text"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"ForkedMerge"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"], "},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"role":"symbol","externalID":"s:11ForkedMerge25ArrayOfIdentifiableMergerVAA0A09MergeableRzrlE5merge_15withSubordinate14commonAncestorSayxGAI_A2ItKF","extendedModule":"ForkedMerge","title":"merge(_:withSubordinate:commonAncestor:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Mergeable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", and "},{"code":"Identifiable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"method"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/merge(_:withSubordinate:commonAncestor:)-1pmm2":{"title":"merge(_:withSubordinate:commonAncestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"type":"text","text":" "},{"text":"The result is different to merging where the elements are not mergeable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This call will recurse the merge."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":", "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Identifiable","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"role":"symbol","title":"ArrayOfIdentifiableMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","title":"ForkedMerge","type":"topic","role":"collection","url":"\/documentation\/forkedmerge"}}}