{"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/arraymerger"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","modules":[{"name":"ForkedMerge"}],"symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayMerger","kind":"identifier"}],"externalID":"s:11ForkedMerge11ArrayMergerV","title":"ArrayMerger"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()"],"generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger"},"abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayMerger"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","url":"\/documentation\/forkedmerge\/arraymerger","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayMerger"}],"title":"ArrayMerger","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArrayMerger","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"title":"Merger","url":"\/documentation\/forkedmerge\/merger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"type":"text","text":" "},{"text":"diffing against a common ancestor.","type":"text"}],"navigatorTitle":[{"text":"Merger","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Merger"}]},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger/merge(_:withSubordinate:commonAncestor:)":{"role":"symbol","title":"merge(_:withSubordinate:commonAncestor:)","url":"\/documentation\/forkedmerge\/arraymerger\/merge(_:withsubordinate:commonancestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"(["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","title":"ForkedMerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger/init()":{"type":"topic","url":"\/documentation\/forkedmerge\/arraymerger\/init()","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()"}}}