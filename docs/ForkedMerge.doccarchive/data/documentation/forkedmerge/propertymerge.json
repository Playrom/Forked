{"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"sections":[],"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"code":"Mergeable","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"text":".","type":"text"}],"topicSections":[{"title":"Enumeration Cases","anchor":"Enumeration-Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"generated":true},{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"generated":true,"anchor":"Initializers"},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}],"platforms":["macOS"]}],"kind":"declarations"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"title":"Conforms To"}],"metadata":{"roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PropertyMerge","kind":"identifier"}],"role":"symbol","modules":[{"name":"ForkedMerge"}],"title":"PropertyMerge","symbolKind":"enum","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"externalID":"s:11ForkedMerge08PropertyB0O"},"kind":"symbol","references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","title":"ForkedMerge","type":"topic","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","abstract":[{"text":"Applies the ","type":"text"},{"type":"codeVoice","code":"array"},{"type":"text","text":" merge algorithm to the characters in a string."},{"type":"text","text":" "},{"type":"text","text":"This is suitable for any type of shared text, which may"},{"type":"text","text":" "},{"text":"have conflicting edits, like a collaborative editor.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The variable must be a "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","title":"PropertyMerge.textMerge","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"textMerge","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","type":"topic","abstract":[],"title":"init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/SY":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SY","title":"Swift.RawRepresentable"},"doc://ForkedMerge/SQ":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SQ","title":"Swift.Equatable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","kind":"article","type":"topic","title":"RawRepresentable Implementations","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","title":"Equatable Implementations","kind":"article","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mergeableProtocol"}],"abstract":[{"text":"The property must be a ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" type, and will be merged accordingly"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"code":"Mergeable","type":"codeVoice"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"text":"This is the default algorithm if ","type":"text"},{"type":"codeVoice","code":"@Merged"},{"type":"text","text":" has been applied with no"},{"type":"text","text":" "},{"type":"text","text":"algorithm stated."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","kind":"symbol","type":"topic","title":"PropertyMerge.mergeableProtocol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"dictionaryMerge"}],"abstract":[{"type":"text","text":"Merges dictionaries. When there is a conflict, it will merge using"},{"type":"text","text":" "},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"text":" ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":", the dictionary will be merged recursing into the values."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","kind":"symbol","type":"topic","title":"PropertyMerge.dictionaryMerge","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PropertyMerge","kind":"identifier"}],"abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"code":"Merger","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"kind":"symbol","type":"topic","title":"PropertyMerge","url":"\/documentation\/forkedmerge\/propertymerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"setMerge"}],"abstract":[{"text":"Will merge sets of values. When there is a conflict, it will handle","type":"text"},{"text":" ","type":"text"},{"text":"it using a MergeableSet for each set of changes.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","kind":"symbol","type":"topic","title":"PropertyMerge.setMerge","url":"\/documentation\/forkedmerge\/propertymerge\/setmerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"type":"topic","title":"PropertyMerge.arrayMerge","abstract":[{"text":"Will merge as an array of values. Elements must be Equatable.","type":"text"},{"text":" ","type":"text"},{"text":"When there is a conflict, it will","type":"text"},{"type":"text","text":" "},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"text":"Does not guarantee uniqueness of elements after merge:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"there can be duplicates created, so it is more suitable to value types"},{"type":"text","text":" "},{"text":"like characters in a string. than it is to identifiable types.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arrayMerge"}],"url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","role":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"arrayOfIdentifiableMerge"}],"title":"PropertyMerge.arrayOfIdentifiableMerge","kind":"symbol","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"text":" ","type":"text"},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"text":" ","type":"text"},{"type":"text","text":"a merge. When there is a conflict, it will"},{"type":"text","text":" "},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"text":" ","type":"text"},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"type":"text","text":" "},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"text":" ","type":"text"},{"text":"property.","type":"text"}]},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SH"}}}