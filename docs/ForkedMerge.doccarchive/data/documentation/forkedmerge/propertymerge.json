{"kind":"symbol","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"type":"text","text":" "},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"code":"Merger","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"role":"symbol","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}],"navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"symbolKind":"enum","externalID":"s:11ForkedMerge08PropertyB0O","modules":[{"name":"ForkedMerge"}],"title":"PropertyMerge"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}]}]}],"topicSections":[{"title":"Enumeration Cases","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"anchor":"Enumeration-Cases"},{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"]},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"]}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"abstract":[{"text":"Applies the ","type":"text"},{"type":"codeVoice","code":"array"},{"text":" merge algorithm to the characters in a string.","type":"text"},{"text":" ","type":"text"},{"text":"This is suitable for any type of shared text, which may","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"have conflicting edits, like a collaborative editor."},{"text":" ","type":"text"},{"type":"text","text":"The variable must be a "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","title":"PropertyMerge.textMerge","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"textMerge","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","abstract":[],"title":"RawRepresentable Implementations","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","type":"topic","title":"PropertyMerge.arrayOfIdentifiableMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arrayOfIdentifiableMerge"}],"abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"text":" ","type":"text"},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"text":" ","type":"text"},{"text":"a merge. When there is a conflict, it will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"type":"text","text":" "},{"text":"enforce uniqueness of identifiers through updates made directly to the","type":"text"},{"text":" ","type":"text"},{"text":"property.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","title":"Equatable Implementations","abstract":[],"kind":"article"},"doc://ForkedMerge/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","type":"topic","title":"PropertyMerge.mergeableProtocol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mergeableProtocol"}],"abstract":[{"text":"The property must be a ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":" type, and will be merged accordingly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"codeVoice","code":"Mergeable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is the default algorithm if "},{"code":"@Merged","type":"codeVoice"},{"text":" has been applied with no","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"algorithm stated."}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","title":"PropertyMerge","kind":"symbol","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"code":"Merger","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}],"url":"\/documentation\/forkedmerge\/propertymerge","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","title":"init(rawValue:)","abstract":[],"type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","kind":"symbol"},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","kind":"symbol","role":"symbol","title":"PropertyMerge.setMerge","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"setMerge","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/propertymerge\/setmerge","abstract":[{"type":"text","text":"Will merge sets of values. When there is a conflict, it will handle"},{"text":" ","type":"text"},{"type":"text","text":"it using a MergeableSet for each set of changes."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dictionaryMerge","kind":"identifier"}],"role":"symbol","title":"PropertyMerge.dictionaryMerge","abstract":[{"text":"Merges dictionaries. When there is a conflict, it will merge using","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}],"type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"arrayMerge","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"type":"text","text":" "},{"type":"text","text":"When there is a conflict, it will"},{"type":"text","text":" "},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"text":" ","type":"text"},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"type":"text","text":" "},{"text":"there can be duplicates created, so it is more suitable to value types","type":"text"},{"type":"text","text":" "},{"type":"text","text":"like characters in a string. than it is to identifiable types."}],"title":"PropertyMerge.arrayMerge","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","kind":"symbol"},"doc://ForkedMerge/SY":{"identifier":"doc:\/\/ForkedMerge\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}]}}}