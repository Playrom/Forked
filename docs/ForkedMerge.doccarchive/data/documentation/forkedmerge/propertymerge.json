{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"modules":[{"name":"ForkedMerge"}],"symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PropertyMerge","kind":"identifier"}],"role":"symbol","roleHeading":"Enumeration","title":"PropertyMerge","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"externalID":"s:11ForkedMerge08PropertyB0O"},"topicSections":[{"title":"Enumeration Cases","anchor":"Enumeration-Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"kind":"relationships"}],"kind":"symbol","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","interfaceLanguage":"swift"},"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"code":"Merger","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"textMerge","kind":"identifier"}],"abstract":[{"text":"Applies the ","type":"text"},{"type":"codeVoice","code":"array"},{"type":"text","text":" merge algorithm to the characters in a string."},{"text":" ","type":"text"},{"text":"This is suitable for any type of shared text, which may","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"have conflicting edits, like a collaborative editor."},{"text":" ","type":"text"},{"type":"text","text":"The variable must be a "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"title":"PropertyMerge.textMerge","role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"kind":"article","title":"RawRepresentable Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"url":"\/documentation\/forkedmerge\/propertymerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"type":"codeVoice","code":"Merger"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"title":"PropertyMerge","role":"symbol"},"doc://ForkedMerge/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SY"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arrayMerge"}],"role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","title":"PropertyMerge.arrayMerge","kind":"symbol","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"text":" ","type":"text"},{"text":"When there is a conflict, it will","type":"text"},{"type":"text","text":" "},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"text":" ","type":"text"},{"text":"Does not guarantee uniqueness of elements after merge:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"there can be duplicates created, so it is more suitable to value types"},{"type":"text","text":" "},{"type":"text","text":"like characters in a string. than it is to identifiable types."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"dictionaryMerge","kind":"identifier"}],"title":"PropertyMerge.dictionaryMerge","abstract":[{"type":"text","text":"Merges dictionaries. When there is a conflict, it will merge using"},{"type":"text","text":" "},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"type":"text","text":" "},{"code":"Mergeable","type":"codeVoice"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","title":"init(rawValue:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"},"doc://ForkedMerge/SH":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SH","title":"Swift.Hashable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"setMerge"}],"role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/setmerge","title":"PropertyMerge.setMerge","kind":"symbol","abstract":[{"type":"text","text":"Will merge sets of values. When there is a conflict, it will handle"},{"type":"text","text":" "},{"type":"text","text":"it using a MergeableSet for each set of changes."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"kind":"symbol","abstract":[{"text":"The property must be a ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":" type, and will be merged accordingly","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is the default algorithm if "},{"code":"@Merged","type":"codeVoice"},{"type":"text","text":" has been applied with no"},{"type":"text","text":" "},{"text":"algorithm stated.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","title":"PropertyMerge.mergeableProtocol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mergeableProtocol","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"type":"text","text":" "},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"type":"text","text":" "},{"type":"text","text":"a merge. When there is a conflict, it will"},{"type":"text","text":" "},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"text":" ","type":"text"},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"text":" ","type":"text"},{"text":"enforce uniqueness of identifiers through updates made directly to the","type":"text"},{"text":" ","type":"text"},{"text":"property.","type":"text"}],"role":"symbol","title":"PropertyMerge.arrayOfIdentifiableMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations"},"doc://ForkedMerge/SQ":{"identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ForkedMerge/documentation/ForkedMerge":{"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge"}}}