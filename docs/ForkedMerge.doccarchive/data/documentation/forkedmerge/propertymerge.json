{"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"kind":"relationships","type":"conformsTo"}],"metadata":{"title":"PropertyMerge","symbolKind":"enum","roleHeading":"Enumeration","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"externalID":"s:11ForkedMerge08PropertyB0O","role":"symbol","modules":[{"name":"ForkedMerge"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}]},"kind":"symbol","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"topicSections":[{"anchor":"Enumeration-Cases","generated":true,"title":"Enumeration Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"]},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"]},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","role":"symbol","title":"PropertyMerge.arrayMerge","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"arrayMerge","kind":"identifier"}],"abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"text":" ","type":"text"},{"type":"text","text":"When there is a conflict, it will"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"text":" ","type":"text"},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"type":"text","text":" "},{"text":"Does not guarantee uniqueness of elements after merge:","type":"text"},{"text":" ","type":"text"},{"text":"there can be duplicates created, so it is more suitable to value types","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"like characters in a string. than it is to identifiable types."}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}],"title":"PropertyMerge.arrayOfIdentifiableMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","abstract":[{"text":"Will merge as an array of values. Elements must be Equatable and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"type":"text","text":" "},{"type":"text","text":"a merge. When there is a conflict, it will"},{"type":"text","text":" "},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"type":"text","text":" "},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"text":" ","type":"text"},{"type":"text","text":"property."}],"type":"topic","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","kind":"symbol"},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mergeableProtocol"}],"title":"PropertyMerge.mergeableProtocol","abstract":[{"type":"text","text":"The property must be a "},{"type":"codeVoice","code":"Mergeable"},{"text":" type, and will be merged accordingly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This is the default algorithm if "},{"type":"codeVoice","code":"@Merged"},{"text":" has been applied with no","type":"text"},{"type":"text","text":" "},{"type":"text","text":"algorithm stated."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol"},"doc://ForkedMerge/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","title":"Equatable Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","title":"ForkedMerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"dictionaryMerge","kind":"identifier"}],"title":"PropertyMerge.dictionaryMerge","kind":"symbol","abstract":[{"type":"text","text":"Merges dictionaries. When there is a conflict, it will merge using"},{"type":"text","text":" "},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"type":"text","text":" "},{"type":"codeVoice","code":"Mergeable"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"textMerge","kind":"identifier"}],"title":"PropertyMerge.textMerge","abstract":[{"type":"text","text":"Applies the "},{"type":"codeVoice","code":"array"},{"text":" merge algorithm to the characters in a string.","type":"text"},{"type":"text","text":" "},{"text":"This is suitable for any type of shared text, which may","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"have conflicting edits, like a collaborative editor."},{"type":"text","text":" "},{"text":"The variable must be a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"},"doc://ForkedMerge/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/ForkedMerge\/SY"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"url":"\/documentation\/forkedmerge\/propertymerge\/setmerge","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Will merge sets of values. When there is a conflict, it will handle"},{"text":" ","type":"text"},{"text":"it using a MergeableSet for each set of changes.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"setMerge"}],"title":"PropertyMerge.setMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"kind":"article","type":"topic","title":"RawRepresentable Implementations","role":"collectionGroup","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","kind":"symbol","abstract":[],"type":"topic","title":"init(rawValue:)"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"title":"PropertyMerge","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"code":"Merger","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}]}}}