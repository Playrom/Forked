{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":", ","kind":"text"},{"text":"Comparator","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"comparators"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10Foundation14SortComparatorP","kind":"typeIdentifier","text":"SortComparator"},{"kind":"text","text":", "},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Compared","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"comparators","content":[{"type":"paragraph","inlineContent":[{"text":"An array of comparators used to compare elements. The","type":"text"},{"type":"text","text":" "},{"text":"first comparator specifies the primary comparator to be used in","type":"text"},{"text":" ","type":"text"},{"text":"sorting the sequence’s elements. Any subsequent comparators are used","type":"text"},{"text":" ","type":"text"},{"text":"to further refine the order of elements with equal values.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"An array of the elements sorted using ","type":"text"},{"code":"comparators","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","platforms":[{"introducedAt":"15.0","unavailable":false,"beta":false,"deprecated":false,"name":"iOS"},{"beta":false,"name":"macOS","deprecated":false,"introducedAt":"12.0","unavailable":false},{"unavailable":false,"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"15.0"},{"beta":false,"introducedAt":"8.0","name":"watchOS","deprecated":false,"unavailable":false}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Comparator"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"sorted(using:)","externalID":"s:ST10FoundationE6sorted5usingSay7ElementQzGqd___tSTRd__AA14SortComparatorRd_0_ADQyd__Rsd_0_8ComparedQyd_0_AERSr0_lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","extendedModule":"Swift","symbolKind":"method","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}]},"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-4ox5r"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"]]},"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given array of"},{"type":"text","text":" "},{"code":"SortComparator","type":"codeVoice"},{"text":"s to compare elements.","type":"text"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","title":"ForkedMerge","type":"topic","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted(using:)-4ox5r":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Comparator"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"kind":"symbol","role":"symbol","title":"sorted(using:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","abstract":[{"text":"Returns the elements of the sequence, sorted using the given array of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SortComparator"},{"type":"text","text":"s to compare elements."}],"type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-4ox5r"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"type":"topic","title":"MergeableArray","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"text":" ","type":"text"},{"text":"The stress here is on values, because this array does not guarantee that uniqueness of","type":"text"},{"type":"text","text":" "},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice — the value is","type":"text"},{"type":"text","text":" "},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"text":" ","type":"text"},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"text":" ","type":"text"},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Sequence-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations","role":"collectionGroup","title":"Sequence Implementations","url":"\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations","type":"topic"}}}