{"sections":[],"abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is ordered before "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" in the ordering described by the given"},{"text":" ","type":"text"},{"text":"sequence of ","type":"text"},{"code":"SortComparator","type":"codeVoice"},{"type":"text","text":"s"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","interfaceLanguage":"swift"},"metadata":{"platforms":[{"beta":false,"unavailable":false,"name":"iOS","deprecated":false,"introducedAt":"15.0"},{"introducedAt":"12.0","unavailable":false,"beta":false,"name":"macOS","deprecated":false},{"introducedAt":"15.0","unavailable":false,"beta":false,"deprecated":false,"name":"tvOS"},{"beta":false,"unavailable":false,"deprecated":false,"name":"watchOS","introducedAt":"8.0"}],"roleHeading":"Instance Method","role":"symbol","title":"compare(_:_:)","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"externalID":"s:ST10FoundationE7compareySo18NSComparisonResultV8ComparedQyd___AFtAA14SortComparatorRd__7ElementQzRsd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compare","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Compared","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Compared","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"text":") -> ","kind":"text"},{"text":"ComparisonResult","preciseIdentifier":"c:@E@NSComparisonResult","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"compare","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Compared","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@E@NSComparisonResult","text":"ComparisonResult","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP","text":"SortComparator"},{"kind":"text","text":", "},{"text":"Comparator","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The first element of the sequence of comparators specifies the primary"},{"text":" ","type":"text"},{"text":"comparator to be used in sorting the sequence’s elements. Any subsequent","type":"text"},{"type":"text","text":" "},{"text":"comparators are used to further refine the order of elements with equal","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"values."}],"type":"paragraph"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Sequence-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations","title":"Sequence Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/compare(_:_:)":{"title":"compare(_:_:)","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"lhs"},{"text":" is ordered before ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" in the ordering described by the given"},{"type":"text","text":" "},{"type":"text","text":"sequence of "},{"type":"codeVoice","code":"SortComparator"},{"type":"text","text":"s"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compare","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Compared","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@E@NSComparisonResult","text":"ComparisonResult","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","url":"\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"title":"MergeableArray","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableArray"}],"abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"text":" ","type":"text"},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"text":" ","type":"text"},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"text":" ","type":"text"},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"type":"text","text":" "},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"text":" ","type":"text"},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"text":" ","type":"text"},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","title":"ForkedMerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]}}}