{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"metadata":{"modules":[{"name":"ForkedMerge"}],"title":"Collection Implementations","roleHeading":"API Collection","role":"collectionGroup"},"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/collection-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/endIndex","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/isEmpty","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/startIndex","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/underestimatedCount"],"anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/drop(while:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropFirst(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-8xuqu","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:limitedBy:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(after:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(after:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/makeIterator()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-4ccaf","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(through:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(upTo:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(while:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement(using:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/ranges(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(separator:maxSplits:omittingEmptySubsequences:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(from:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(while:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"generated":true,"anchor":"Subscripts","title":"Subscripts","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/subscript(_:)"]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/trimmingPrefix(while:)":{"title":"trimmingPrefix(while:)","type":"topic","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(while:)","url":"\/documentation\/forkedmerge\/mergeablearray\/trimmingprefix(while:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmingPrefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/prefix(through:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/prefix(through:)","type":"topic","kind":"symbol","title":"prefix(through:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"through"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection through the"},{"type":"text","text":" "},{"text":"specified position.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(through:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/drop(while:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/drop(while:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"abstract":[{"text":"Returns a subsequence by skipping elements while ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" returns"},{"text":" ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" and returning the remaining elements."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/drop(while:)","type":"topic","kind":"symbol","title":"drop(while:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/randomElement()":{"url":"\/documentation\/forkedmerge\/mergeablearray\/randomelement()","type":"topic","kind":"symbol","title":"randomElement()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"randomElement","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a random element of the collection."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement()","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formIndex(_:offsetBy:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/formindex(_:offsetby:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formIndex","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Offsets the given index by the specified distance."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:)","type":"topic","kind":"symbol","title":"formIndex(_:offsetBy:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/map(_:)-4ccaf":{"url":"\/documentation\/forkedmerge\/mergeablearray\/map(_:)-4ccaf","type":"topic","kind":"symbol","title":"map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns an array containing the results of mapping the given closure"},{"type":"text","text":" "},{"type":"text","text":"over the sequence’s elements."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-4ccaf","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/prefix(_:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/prefix(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"abstract":[{"type":"text","text":"Returns a subsequence, up to the specified maximum length, containing"},{"type":"text","text":" "},{"type":"text","text":"the initial elements of the collection."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(_:)","type":"topic","kind":"symbol","title":"prefix(_:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/isEmpty":{"url":"\/documentation\/forkedmerge\/mergeablearray\/isempty","type":"topic","kind":"symbol","title":"isEmpty","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A Boolean value indicating whether the collection is empty."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/isEmpty","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/firstIndex(of:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/firstindex(of:)","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the first index where the specified value appears in the"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(of:)","type":"topic","kind":"symbol","title":"firstIndex(of:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"title":"MergeableArray","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableArray"}],"abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"text":" ","type":"text"},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"text":" ","type":"text"},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"text":" ","type":"text"},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"type":"text","text":" "},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"text":" ","type":"text"},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"text":" ","type":"text"},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/subscript(_:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/subscript(_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"type":"topic","kind":"symbol","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"}],"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/subscript(_:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formIndex(after:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/formindex(after:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formIndex","kind":"identifier"},{"kind":"text","text":"("},{"text":"after","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Replaces the given index with its successor."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(after:)","type":"topic","kind":"symbol","title":"formIndex(after:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/split(maxSplits:omittingEmptySubsequences:whereSeparator:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","type":"topic","kind":"symbol","title":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"split","kind":"identifier"},{"kind":"text","text":"("},{"text":"maxSplits","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"whereSeparator","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Returns the longest possible subsequences of the collection, in order,"},{"text":" ","type":"text"},{"type":"text","text":"that don’t contain elements satisfying the given predicate."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/underestimatedCount":{"url":"\/documentation\/forkedmerge\/mergeablearray\/underestimatedcount","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"underestimatedCount","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"A value less than or equal to the number of elements in the collection."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/underestimatedCount","type":"topic","kind":"symbol","title":"underestimatedCount"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/prefix(while:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/prefix(while:)","type":"topic","kind":"symbol","title":"prefix(while:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"abstract":[{"type":"text","text":"Returns a subsequence containing the initial elements until "},{"code":"predicate","type":"codeVoice"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" and skipping the remaining elements.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(while:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/dropFirst(_:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/dropfirst(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropFirst"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"abstract":[{"text":"Returns a subsequence containing all but the given number of initial","type":"text"},{"type":"text","text":" "},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropFirst(_:)","type":"topic","kind":"symbol","title":"dropFirst(_:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/removingSubranges(_:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)","type":"topic","kind":"symbol","title":"removingSubranges(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removingSubranges"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s8RangeSetV","text":"RangeSet","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":">) -> ","kind":"text"},{"text":"DiscontiguousSlice","kind":"typeIdentifier","preciseIdentifier":"s:s18DiscontiguousSliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"text":"Returns a collection of the elements in this collection that are not","type":"text"},{"type":"text","text":" "},{"text":"represented by the given range set.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/suffix(from:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/suffix(from:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a subsequence from the specified position to the end of the","type":"text"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(from:)","type":"topic","kind":"symbol","title":"suffix(from:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/split(separator:maxSplits:omittingEmptySubsequences:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/split(separator:maxsplits:omittingemptysubsequences:)","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"split(separator:maxSplits:omittingEmptySubsequences:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxSplits"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"},{"kind":"text","text":"]"}],"abstract":[{"text":"Returns the longest possible subsequences of the collection, in order,","type":"text"},{"type":"text","text":" "},{"text":"around elements equal to the given element.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(separator:maxSplits:omittingEmptySubsequences:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/firstIndex(where:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/firstindex(where:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstIndex","kind":"identifier"},{"kind":"text","text":"("},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the first index in which an element of the collection satisfies","type":"text"},{"type":"text","text":" "},{"text":"the given predicate.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(where:)","kind":"symbol","type":"topic","title":"firstIndex(where:)"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","title":"ForkedMerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/index(of:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/index(of:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"index(of:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the first index where the specified value appears in the","type":"text"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(of:)","role":"symbol","deprecated":true},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/endIndex":{"url":"\/documentation\/forkedmerge\/mergeablearray\/endindex","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endIndex","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/endIndex","kind":"symbol","type":"topic","title":"endIndex"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/firstRange(of:)-8xuqu":{"url":"\/documentation\/forkedmerge\/mergeablearray\/firstrange(of:)-8xuqu","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":"firstRange(of:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstRange"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":">?","kind":"text"}],"abstract":[{"text":"Finds and returns the range of the first occurrence of a given collection","type":"text"},{"type":"text","text":" "},{"text":"within this collection.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-8xuqu","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/prefix(upTo:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/prefix(upto:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"text":"including, the specified position.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(upTo:)","kind":"symbol","type":"topic","title":"prefix(upTo:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/ranges(of:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/ranges(of:)","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":"ranges(of:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ranges","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":") -> [","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":">]"}],"abstract":[{"text":"Finds and returns the ranges of the all occurrences of a given sequence","type":"text"},{"type":"text","text":" "},{"text":"within the collection.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/ranges(of:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/trimmingPrefix(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmingPrefix","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Prefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Prefix","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/forkedmerge\/mergeablearray\/trimmingprefix(_:)","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(_:)","title":"trimmingPrefix(_:)","role":"symbol","abstract":[{"text":"Returns a new collection of the same type by removing ","type":"text"},{"type":"codeVoice","code":"prefix"},{"type":"text","text":" from the start"},{"type":"text","text":" "},{"type":"text","text":"of the collection."}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/indices(of:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/indices(of:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"indices"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") -> "},{"text":"RangeSet","kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns the indices of all the elements that are equal to the given","type":"text"},{"type":"text","text":" "},{"text":"element.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(of:)","kind":"symbol","type":"topic","title":"indices(of:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/first":{"url":"\/documentation\/forkedmerge\/mergeablearray\/first","type":"topic","title":"first","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"abstract":[{"text":"The first element of the collection.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/makeIterator()":{"url":"\/documentation\/forkedmerge\/mergeablearray\/makeiterator()","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Iterator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"IndexingIterator<Self>","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"text":"() -> ","kind":"text"},{"text":"IndexingIterator","kind":"typeIdentifier","preciseIdentifier":"s:s16IndexingIteratorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns an iterator over the elements of the collection.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/makeIterator()","kind":"symbol","type":"topic","title":"makeIterator()"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/index(after:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/index(after:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"index(after:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"after","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(after:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formIndex(_:offsetBy:limitedBy:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/formindex(_:offsetby:limitedby:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Offsets the given index by the specified distance, or so that it equals"},{"type":"text","text":" "},{"type":"text","text":"the given limiting index."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:limitedBy:)","kind":"symbol","type":"topic","title":"formIndex(_:offsetBy:limitedBy:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/randomElement(using:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/randomelement(using:)","type":"topic","title":"randomElement(using:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomElement","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns a random element of the collection, using the given generator as"},{"type":"text","text":" "},{"type":"text","text":"a source for randomness."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement(using:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/startIndex":{"url":"\/documentation\/forkedmerge\/mergeablearray\/startindex","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"startIndex"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/startIndex","kind":"symbol","type":"topic","title":"startIndex"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/indices(where:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/indices(where:)","type":"topic","title":"indices(where:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"indices"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"RangeSet","kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns the indices of all the elements that match the given predicate."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(where:)","role":"symbol"}}}