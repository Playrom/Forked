{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removingSubranges"},{"text":"(","kind":"text"},{"text":"RangeSet","preciseIdentifier":"s:s8RangeSetV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"DiscontiguousSlice","preciseIdentifier":"s:s18DiscontiguousSliceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"removingSubranges(_:)","platforms":[{"unavailable":false,"name":"iOS","introducedAt":"18.0","beta":false,"deprecated":false},{"beta":false,"name":"macOS","deprecated":false,"introducedAt":"15.0","unavailable":false},{"deprecated":false,"introducedAt":"18.0","unavailable":false,"name":"tvOS","beta":false},{"introducedAt":"2.0","deprecated":false,"name":"visionOS","unavailable":false,"beta":false},{"introducedAt":"11.0","beta":false,"unavailable":false,"deprecated":false,"name":"watchOS"}],"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}],"extendedModule":"Swift","role":"symbol","externalID":"s:SlsE17removingSubrangesys18DiscontiguousSliceVyxGs8RangeSetVy5IndexQzGF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)"},"abstract":[{"text":"Returns a collection of the elements in this collection that are not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represented by the given range set."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removingSubranges","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"subranges","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV","text":"RangeSet"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s18DiscontiguousSliceV","text":"DiscontiguousSlice"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range set representing the indices of the"},{"text":" ","type":"text"},{"type":"text","text":"elements to remove."}]}],"name":"subranges"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A collection of the elements that are not in ","type":"text"},{"type":"codeVoice","code":"subranges"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, this code sample finds the indices of all the vowel"},{"text":" ","type":"text"},{"text":"characters in the string, and then retrieves a collection that omits","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"those characters."}]},{"syntax":null,"type":"codeListing","code":["let str = \"The rain in Spain stays mainly in the plain.\"","let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]","let vowelIndices = str.subranges(where: { vowels.contains($0) })","","let disemvoweled = str.removingSubranges(vowelIndices)","print(String(disemvoweled))","\/\/ Prints \"Th rn n Spn stys mnly n th pln.\""]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the collection.","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"type":"topic","title":"MergeableArray","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"text":" ","type":"text"},{"text":"The stress here is on values, because this array does not guarantee that uniqueness of","type":"text"},{"type":"text","text":" "},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice â€” the value is","type":"text"},{"type":"text","text":" "},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"text":" ","type":"text"},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"text":" ","type":"text"},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Collection-Implementations":{"kind":"article","title":"Collection Implementations","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","role":"collectionGroup","url":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","title":"ForkedMerge","type":"topic","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/removingSubranges(_:)":{"type":"topic","abstract":[{"type":"text","text":"Returns a collection of the elements in this collection that are not"},{"text":" ","type":"text"},{"type":"text","text":"represented by the given range set."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removingSubranges","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RangeSet","kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s18DiscontiguousSliceV","text":"DiscontiguousSlice","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)","title":"removingSubranges(_:)","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)"}}}