{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(before:)"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:SKsE9formIndex6beforey0B0Qzz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formIndex","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"before"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":")"}],"extendedModule":"Swift","title":"formIndex(before:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/formindex(before:)"]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"BidirectionalCollection.formIndex(before:)"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/BidirectionalCollection-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formIndex","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"before"},{"text":" ","kind":"text"},{"text":"i","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","title":"MergeableArray","kind":"symbol","type":"topic","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"text":" ","type":"text"},{"text":"devices at the same time, after the merge, you will have the same word twice â€” the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"text":" ","type":"text"},{"text":"This type is typically useful for strings in collaborative environments, and less useful for","type":"text"},{"type":"text","text":" "},{"text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you should dedupe after every merge."},{"text":" ","type":"text"},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"text":" ","type":"text"},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"text":" ","type":"text"},{"text":"If you need a more compact representation, consider using a merger instead.","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableArray","kind":"identifier"}],"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/BidirectionalCollection-Implementations":{"abstract":[],"title":"BidirectionalCollection Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/forkedmerge\/mergeablearray\/bidirectionalcollection-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/BidirectionalCollection-Implementations","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formIndex(before:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(before:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formIndex","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"before"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/formindex(before:)","title":"formIndex(before:)","abstract":[],"role":"symbol","type":"topic"}}}