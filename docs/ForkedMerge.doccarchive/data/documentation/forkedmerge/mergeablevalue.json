{"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"],"title":"Default Implementations","generated":true}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue"]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH"],"kind":"relationships","type":"conformsTo"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"modules":[{"name":"ForkedMerge"}],"externalID":"s:11ForkedMerge14MergeableValueV","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"}],"title":"MergeableValue","symbolKind":"struct","role":"symbol","roleHeading":"Structure"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","title":"Decodable Implementations","abstract":[],"url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","role":"collectionGroup","type":"topic"},"doc://ForkedMerge/6Forked9MergeableP":{"type":"unresolvable","title":"Forked.Mergeable","identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP"},"doc://ForkedMerge/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ForkedMerge\/Se"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"title":"init(_:)","url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"type":"topic","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","title":"value","url":"\/documentation\/forkedmerge\/mergeablevalue\/value"},"doc://ForkedMerge/s8CopyableP":{"identifier":"doc:\/\/ForkedMerge\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://ForkedMerge/SQ":{"identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"title":"Mergeable Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article"},"doc://ForkedMerge/SE":{"identifier":"doc:\/\/ForkedMerge\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://ForkedMerge/documentation/ForkedMerge":{"role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge"},"doc://ForkedMerge/SH":{"identifier":"doc:\/\/ForkedMerge\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","title":"MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article"}}}