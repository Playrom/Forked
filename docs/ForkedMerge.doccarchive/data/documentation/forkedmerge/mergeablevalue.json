{"metadata":{"modules":[{"name":"ForkedMerge"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","title":"MergeableValue","externalID":"s:11ForkedMerge14MergeableValueV","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}]},"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH"],"type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"kind":"symbol","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"anchor":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablevalue"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ForkedMerge/SQ":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SQ","title":"Swift.Equatable"},"doc://ForkedMerge/SH":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SH","title":"Swift.Hashable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"title":"Mergeable Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","role":"collectionGroup","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","title":"ForkedMerge","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","role":"collection","url":"\/documentation\/forkedmerge","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"abstract":[],"url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","kind":"article","type":"topic","title":"Decodable Implementations","role":"collectionGroup","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"title":"MergeableValue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"text":" ","type":"text"},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablevalue","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"kind":"article","url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","abstract":[],"role":"collectionGroup","title":"Equatable Implementations","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations"},"doc://ForkedMerge/s8CopyableP":{"identifier":"doc:\/\/ForkedMerge\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://ForkedMerge/Se":{"identifier":"doc:\/\/ForkedMerge\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/value","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","type":"topic","abstract":[],"title":"value","kind":"symbol"},"doc://ForkedMerge/SE":{"identifier":"doc:\/\/ForkedMerge\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://ForkedMerge/6Forked9MergeableP":{"identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP","type":"unresolvable","title":"Forked.Mergeable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","kind":"symbol","abstract":[],"title":"init(_:)","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"type":"topic"}}}