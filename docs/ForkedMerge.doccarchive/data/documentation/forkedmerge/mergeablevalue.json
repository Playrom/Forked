{"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"modules":[{"name":"ForkedMerge"}],"externalID":"s:11ForkedMerge14MergeableValueV","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"title":"MergeableValue","symbolKind":"struct","roleHeading":"Structure"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"title":"Initializers"},{"anchor":"Instance-Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"],"generated":true,"title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"text":" ","type":"text"},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">"}],"languages":["swift"]}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"kind":"symbol","title":"init(_:)","url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"abstract":[]},"doc://ForkedMerge/Se":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/Se","title":"Swift.Decodable"},"doc://ForkedMerge/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/s8CopyableP","title":"Swift.Copyable"},"doc://ForkedMerge/6Forked9MergeableP":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP","title":"Forked.Mergeable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"kind":"symbol","title":"value","url":"\/documentation\/forkedmerge\/mergeablevalue\/value","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","title":"ForkedMerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","kind":"article","role":"collectionGroup","title":"Decodable Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"kind":"article","title":"Mergeable Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","role":"collectionGroup","abstract":[]},"doc://ForkedMerge/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SE"},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","role":"collectionGroup","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"type":"topic","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","kind":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"}],"title":"MergeableValue"}}}