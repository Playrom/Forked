{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedModel\/documentation\/ForkedModel","doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable","doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/Equatable-Implementations"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"variants":[{"paths":["\/documentation\/forkedmodel\/forkedequatable\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/!=(_:_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"text":" ","type":"text"},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"type":"text","text":")"},{"type":"text","text":" "},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"type":"paragraph"}]}],"metadata":{"role":"symbol","roleHeading":"Operator","modules":[{"name":"ForkedModel","relatedModules":["Swift"]}],"title":"!=(_:_:)","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"symbolKind":"op","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedModel0A9EquatableV"},"references":{"doc://ForkedModel/documentation/ForkedModel":{"title":"ForkedModel","abstract":[{"type":"text","text":"Model generation and management for forked data structures."}],"role":"collection","url":"\/documentation\/forkedmodel","kind":"symbol","identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel","type":"topic"},"doc://ForkedModel/documentation/ForkedModel/ForkedEquatable/!=(_:_:)":{"kind":"symbol","url":"\/documentation\/forkedmodel\/forkedequatable\/!=(_:_:)","title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"role":"symbol","identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic"},"doc://ForkedModel/documentation/ForkedModel/ForkedEquatable":{"identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable","title":"ForkedEquatable","abstract":[],"role":"symbol","url":"\/documentation\/forkedmodel\/forkedequatable","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForkedEquatable"}],"navigatorTitle":[{"text":"ForkedEquatable","kind":"identifier"}],"kind":"symbol"},"doc://ForkedModel/documentation/ForkedModel/ForkedEquatable/Equatable-Implementations":{"url":"\/documentation\/forkedmodel\/forkedequatable\/equatable-implementations","title":"Equatable Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/Equatable-Implementations"}}}