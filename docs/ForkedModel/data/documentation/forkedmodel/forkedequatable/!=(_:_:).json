{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/forkedmodel\/forkedequatable\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/!=(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedModel\/documentation\/ForkedModel","doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable","doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/Equatable-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"text":"Another value to compare.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]}]}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"metadata":{"title":"!=(_:_:)","role":"symbol","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedModel0A9EquatableV","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"modules":[{"relatedModules":["Swift"],"name":"ForkedModel"}],"roleHeading":"Operator","extendedModule":"Swift"},"references":{"doc://ForkedModel/documentation/ForkedModel/ForkedEquatable":{"identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable","navigatorTitle":[{"text":"ForkedEquatable","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"ForkedEquatable","abstract":[],"url":"\/documentation\/forkedmodel\/forkedequatable","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForkedEquatable"}]},"doc://ForkedModel/documentation/ForkedModel/ForkedEquatable/Equatable-Implementations":{"kind":"article","identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/Equatable-Implementations","role":"collectionGroup","url":"\/documentation\/forkedmodel\/forkedequatable\/equatable-implementations","type":"topic","title":"Equatable Implementations","abstract":[]},"doc://ForkedModel/documentation/ForkedModel/ForkedEquatable/!=(_:_:)":{"identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel\/ForkedEquatable\/!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"kind":"symbol","title":"!=(_:_:)","url":"\/documentation\/forkedmodel\/forkedequatable\/!=(_:_:)","role":"symbol"},"doc://ForkedModel/documentation/ForkedModel":{"abstract":[{"text":"Model generation and management for forked data structures.","type":"text"}],"url":"\/documentation\/forkedmodel","title":"ForkedModel","type":"topic","identifier":"doc:\/\/ForkedModel\/documentation\/ForkedModel","role":"collection","kind":"symbol"}}}