{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/fork\/!=(_:_:)"]}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"extendedModule":"Swift","role":"symbol","roleHeading":"Operator","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked4ForkV","modules":[{"name":"Forked","relatedModules":["Swift"]}],"title":"!=(_:_:)"},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Fork\/!=(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Fork","doc:\/\/Forked\/documentation\/Forked\/Fork\/Equatable-Implementations"]]},"kind":"symbol","sections":[],"references":{"doc://Forked/documentation/Forked/Fork/!=(_:_:)":{"title":"!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"url":"\/documentation\/forked\/fork\/!=(_:_:)","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork\/!=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic"},"doc://Forked/documentation/Forked/Fork/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork\/Equatable-Implementations","abstract":[],"url":"\/documentation\/forked\/fork\/equatable-implementations","kind":"article"},"doc://Forked/documentation/Forked/Fork":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fork"}],"abstract":[{"type":"text","text":"A  type representing a named fork."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","title":"Fork","url":"\/documentation\/forked\/fork","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Fork","kind":"identifier"}]},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"title":"Forked","role":"collection","url":"\/documentation\/forked"}}}