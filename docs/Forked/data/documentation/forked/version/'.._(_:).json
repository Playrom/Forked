{"sections":[],"metadata":{"role":"symbol","extendedModule":"Swift","roleHeading":"Operator","externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","title":"..<(_:)","symbolKind":"op","modules":[{"name":"Forked","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:)"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"kind":"symbol","abstract":[{"text":"Returns a partial range up to, but not including, its upper bound.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"maximum","content":[{"inlineContent":[{"type":"text","text":"The upper bound for the range."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Use the prefix half-open range operator (prefix ","type":"text"},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a"},{"text":" ","type":"text"},{"text":"partial range of any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"text":"This example creates a ","type":"text"},{"type":"codeVoice","code":"PartialRangeUpTo<Double>"},{"text":" instance that includes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any value less than "},{"code":"5.0","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"],"type":"codeListing"},{"inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the start of the collection up to, but not"},{"text":" ","type":"text"},{"type":"text","text":"including, the partial range’s upper bound."}],"type":"paragraph"},{"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing","syntax":null},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"maximum"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}]}],"name":"Precondition","type":"aside"}]}],"variants":[{"paths":["\/documentation\/forked\/version\/'.._(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Forked/documentation/Forked":{"role":"collection","type":"topic","title":"Forked","url":"\/documentation\/forked","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]},"doc://Forked/documentation/Forked/Version/.._(_:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/forked\/version\/'.._(_:)","title":"..<(_:)","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:)"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"title":"Comparable Implementations","type":"topic","url":"\/documentation\/forked\/version\/comparable-implementations","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://Forked/documentation/Forked/Version":{"abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Version"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Version"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","url":"\/documentation\/forked\/version","title":"Version"}}}