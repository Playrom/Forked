{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:_:)"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"minimum","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"minimum","content":[{"inlineContent":[{"text":"The lower bound for the range.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}],"name":"maximum"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use the closed range operator (","type":"text"},{"code":"...","type":"codeVoice"},{"text":") to create a closed range of any type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol. This example creates a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ClosedRange<Character>"},{"text":" from “a” up to, and including, “z”.","type":"text"}]},{"code":["let lowercase = \"a\"...\"z\"","print(lowercase.contains(\"z\"))","\/\/ Prints \"true\""],"syntax":null,"type":"codeListing"},{"name":"Precondition","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum <= maximum"},{"type":"text","text":"."}]}],"style":"note"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"symbolKind":"op","externalID":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","title":"...(_:_:)","modules":[{"relatedModules":["Swift"],"name":"Forked"}],"roleHeading":"Operator","extendedModule":"Swift","role":"symbol"},"variants":[{"paths":["\/documentation\/forked\/version\/'...(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a closed range that contains both of its bounds.","type":"text"}],"references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","kind":"symbol","role":"collection","title":"Forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","abstract":[{"type":"text","text":"A framework for handling forked data structures and merge operations."}]},"doc://Forked/documentation/Forked/Version":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Version","kind":"identifier"}],"url":"\/documentation\/forked\/version","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Version"}],"type":"topic","abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"title":"Version","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/forked\/version\/comparable-implementations","title":"Comparable Implementations"},"doc://Forked/documentation/Forked/Version/...(_:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:_:)","url":"\/documentation\/forked\/version\/'...(_:_:)","kind":"symbol","title":"...(_:_:)","type":"topic","abstract":[{"text":"Returns a closed range that contains both of its bounds.","type":"text"}]}}}