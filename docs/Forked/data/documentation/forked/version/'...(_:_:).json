{"variants":[{"paths":["\/documentation\/forked\/version\/'...(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The lower bound for the range.","type":"text"}]}],"name":"minimum"},{"name":"maximum","content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the closed range operator (","type":"text"},{"code":"...","type":"codeVoice"},{"type":"text","text":") to create a closed range of any type"},{"type":"text","text":" "},{"text":"that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" protocol. This example creates a","type":"text"},{"text":" ","type":"text"},{"code":"ClosedRange<Character>","type":"codeVoice"},{"type":"text","text":" from “a” up to, and including, “z”."}]},{"type":"codeListing","code":["let lowercase = \"a\"...\"z\"","print(lowercase.contains(\"z\"))","\/\/ Prints \"true\""],"syntax":null},{"content":[{"inlineContent":[{"type":"text","text":""},{"code":"minimum <= maximum","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Precondition"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:_:)"},"metadata":{"symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"...(_:_:)","roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Forked"}],"extendedModule":"Swift","externalID":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","role":"symbol"},"abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"references":{"doc://Forked/documentation/Forked":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked","title":"Forked","role":"collection","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]},"doc://Forked/documentation/Forked/Version/...(_:_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:_:)","kind":"symbol","title":"...(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"url":"\/documentation\/forked\/version\/'...(_:_:)"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"url":"\/documentation\/forked\/version\/comparable-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","kind":"article","title":"Comparable Implementations"},"doc://Forked/documentation/Forked/Version":{"navigatorTitle":[{"text":"Version","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Used to chronologically order file versions. It is a standard lamport count."}],"url":"\/documentation\/forked\/version","type":"topic","title":"Version","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Version"}],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version"}}}