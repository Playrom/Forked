{"metadata":{"extendedModule":"Swift","role":"symbol","title":"...(_:)","symbolKind":"op","externalID":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"modules":[{"name":"Forked","relatedModules":["Swift"]}]},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"maximum","content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use the prefix closed range operator (prefix "},{"type":"codeVoice","code":"..."},{"text":") to create a partial","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"range of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This"},{"type":"text","text":" "},{"type":"text","text":"example creates a "},{"type":"codeVoice","code":"PartialRangeThrough<Double>"},{"type":"text","text":" instance that includes"},{"text":" ","type":"text"},{"text":"any value less than or equal to ","type":"text"},{"code":"5.0","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let throughFive = ...5.0","","throughFive.contains(4.0)     \/\/ true","throughFive.contains(5.0)     \/\/ true","throughFive.contains(6.0)     \/\/ false"]},{"inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the start of the collection up to, and"},{"text":" ","type":"text"},{"text":"including, the partial range’s upper bound.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[...3])","\/\/ Prints \"[10, 20, 30, 40]\""],"type":"codeListing"},{"name":"Precondition","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"variants":[{"paths":["\/documentation\/forked\/version\/'...(_:)-1nziq"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq"},"references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","kind":"symbol","role":"collection","title":"Forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","abstract":[{"type":"text","text":"A framework for handling forked data structures and merge operations."}]},"doc://Forked/documentation/Forked/Version":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Version","kind":"identifier"}],"url":"\/documentation\/forked\/version","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Version"}],"type":"topic","abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"title":"Version","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version"},"doc://Forked/documentation/Forked/Version/...(_:)-1nziq":{"url":"\/documentation\/forked\/version\/'...(_:)-1nziq","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","title":"...(_:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}],"type":"topic"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/forked\/version\/comparable-implementations","title":"Comparable Implementations"}}}