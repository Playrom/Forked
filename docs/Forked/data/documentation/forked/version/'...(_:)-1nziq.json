{"abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}],"sections":[],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}],"name":"maximum"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the prefix closed range operator (prefix "},{"code":"...","type":"codeVoice"},{"type":"text","text":") to create a partial"},{"text":" ","type":"text"},{"text":"range of any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This"},{"text":" ","type":"text"},{"type":"text","text":"example creates a "},{"type":"codeVoice","code":"PartialRangeThrough<Double>"},{"type":"text","text":" instance that includes"},{"text":" ","type":"text"},{"type":"text","text":"any value less than or equal to "},{"type":"codeVoice","code":"5.0"},{"text":".","type":"text"}]},{"syntax":null,"code":["let throughFive = ...5.0","","throughFive.contains(4.0)     \/\/ true","throughFive.contains(5.0)     \/\/ true","throughFive.contains(6.0)     \/\/ false"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"type":"text","text":" "},{"type":"text","text":"represent the range from the start of the collection up to, and"},{"text":" ","type":"text"},{"type":"text","text":"including, the partial range’s upper bound."}]},{"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[...3])","\/\/ Prints \"[10, 20, 30, 40]\""],"syntax":null},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}],"type":"paragraph"}],"style":"note","name":"Precondition","type":"aside"}],"kind":"content"}],"metadata":{"symbolKind":"op","title":"...(_:)","externalID":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","modules":[{"relatedModules":["Swift"],"name":"Forked"}],"roleHeading":"Operator","extendedModule":"Swift","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/version\/'...(_:)-1nziq"]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"references":{"doc://Forked/documentation/Forked":{"role":"collection","type":"topic","title":"Forked","url":"\/documentation\/forked","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]},"doc://Forked/documentation/Forked/Version/...(_:)-1nziq":{"abstract":[{"text":"Returns a partial range up to, and including, its upper bound.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","kind":"symbol","title":"...(_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"url":"\/documentation\/forked\/version\/'...(_:)-1nziq","role":"symbol"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"title":"Comparable Implementations","type":"topic","url":"\/documentation\/forked\/version\/comparable-implementations","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://Forked/documentation/Forked/Version":{"abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Version"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Version"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","url":"\/documentation\/forked\/version","title":"Version"}}}