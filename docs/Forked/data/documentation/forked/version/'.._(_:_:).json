{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"symbolKind":"op","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Operator","externalID":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","modules":[{"relatedModules":["Swift"],"name":"Forked"}],"extendedModule":"Swift","title":"..<(_:_:)"},"abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bound."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"minimum"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"minimum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}]},{"name":"maximum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the half-open range operator (","type":"text"},{"code":"..<","type":"codeVoice"},{"text":") to create a range of any type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol. This example creates a","type":"text"},{"type":"text","text":" "},{"code":"Range<Double>","type":"codeVoice"},{"text":" from zero up to, but not including, 5.0.","type":"text"}]},{"type":"codeListing","code":["let lessThanFive = 0.0..<5.0","print(lessThanFive.contains(3.14))  \/\/ Prints \"true\"","print(lessThanFive.contains(5.0))   \/\/ Prints \"false\""],"syntax":null},{"type":"aside","style":"note","name":"Precondition","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum <= maximum"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/version\/'.._(_:_:)"]}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"kind":"symbol","references":{"doc://Forked/documentation/Forked/Version/.._(_:_:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:_:)","type":"topic","url":"\/documentation\/forked\/version\/'.._(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"..<(_:_:)"},"doc://Forked/documentation/Forked/Version":{"url":"\/documentation\/forked\/version","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Version"}],"abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","title":"Version","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Version"}],"type":"topic"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","role":"collection","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}],"title":"Forked","type":"topic","kind":"symbol"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"role":"collectionGroup","title":"Comparable Implementations","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","type":"topic","url":"\/documentation\/forked\/version\/comparable-implementations","abstract":[],"kind":"article"}}}