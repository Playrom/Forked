{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","symbolKind":"op","title":"..<(_:_:)","extendedModule":"Swift","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Forked"}]},"abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"minimum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The lower bound for the range."}],"type":"paragraph"}],"name":"minimum"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The upper bound for the range.","type":"text"}]}],"name":"maximum"}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Use the half-open range operator ("},{"type":"codeVoice","code":"..<"},{"text":") to create a range of any type","type":"text"},{"type":"text","text":" "},{"text":"that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example creates a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Range<Double>"},{"type":"text","text":" from zero up to, but not including, 5.0."}],"type":"paragraph"},{"code":["let lessThanFive = 0.0..<5.0","print(lessThanFive.contains(3.14))  \/\/ Prints \"true\"","print(lessThanFive.contains(5.0))   \/\/ Prints \"false\""],"type":"codeListing","syntax":null},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"minimum <= maximum","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Precondition"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/version\/'.._(_:_:)"]}],"sections":[],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Forked/documentation/Forked/Version/.._(_:_:)":{"abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"type":"text","text":" "},{"text":"bound.","type":"text"}],"url":"\/documentation\/forked\/version\/'.._(_:_:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:_:)","role":"symbol","kind":"symbol","title":"..<(_:_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"type":"topic","abstract":[],"kind":"article","url":"\/documentation\/forked\/version\/comparable-implementations","role":"collectionGroup","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","title":"Comparable Implementations"},"doc://Forked/documentation/Forked/Version":{"title":"Version","type":"topic","abstract":[{"type":"text","text":"Used to chronologically order file versions. It is a standard lamport count."}],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","role":"symbol","navigatorTitle":[{"text":"Version","kind":"identifier"}],"url":"\/documentation\/forked\/version","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Version","kind":"identifier"}]},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","kind":"symbol","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}],"type":"topic","title":"Forked","role":"collection","identifier":"doc:\/\/Forked\/documentation\/Forked"}}}