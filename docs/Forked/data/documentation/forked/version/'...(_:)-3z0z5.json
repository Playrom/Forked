{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}],"name":"minimum"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Use the postfix range operator (postfix ","type":"text"},{"type":"codeVoice","code":"..."},{"type":"text","text":") to create a partial range"},{"text":" ","type":"text"},{"type":"text","text":"of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example"},{"text":" ","type":"text"},{"text":"creates a ","type":"text"},{"type":"codeVoice","code":"PartialRangeFrom<Double>"},{"type":"text","text":" instance that includes any value"},{"type":"text","text":" "},{"text":"greater than or equal to ","type":"text"},{"type":"codeVoice","code":"5.0"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let atLeastFive = 5.0...","","atLeastFive.contains(4.0)     \/\/ false","atLeastFive.contains(5.0)     \/\/ true","atLeastFive.contains(6.0)     \/\/ true"]},{"inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the partial range’s lower bound up to the end"},{"text":" ","type":"text"},{"type":"text","text":"of the collection."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[3...])","\/\/ Prints \"[40, 50, 60, 70]\""]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}],"type":"paragraph"}],"name":"Precondition","type":"aside"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-3z0z5"},"kind":"symbol","sections":[],"metadata":{"roleHeading":"Operator","modules":[{"name":"Forked","relatedModules":["Swift"]}],"title":"...(_:)","extendedModule":"Swift","role":"symbol","externalID":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeFromV","kind":"typeIdentifier","text":"PartialRangeFrom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"op"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/version\/'...(_:)-3z0z5"]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"references":{"doc://Forked/documentation/Forked/Version/...(_:)-3z0z5":{"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-3z0z5","url":"\/documentation\/forked\/version\/'...(_:)-3z0z5","title":"...(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"doc://Forked/documentation/Forked/Version":{"url":"\/documentation\/forked\/version","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","role":"symbol","type":"topic","title":"Version","abstract":[{"type":"text","text":"Used to chronologically order file versions. It is a standard lamport count."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Version"}],"kind":"symbol","navigatorTitle":[{"text":"Version","kind":"identifier"}]},"doc://Forked/documentation/Forked":{"role":"collection","url":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"abstract":[],"url":"\/documentation\/forked\/version\/comparable-implementations","role":"collectionGroup","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","kind":"article","type":"topic","title":"Comparable Implementations"}}}