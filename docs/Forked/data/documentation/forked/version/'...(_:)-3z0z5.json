{"sections":[],"metadata":{"title":"...(_:)","symbolKind":"op","externalID":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","extendedModule":"Swift","modules":[{"name":"Forked","relatedModules":["Swift"]}],"role":"symbol","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"PartialRangeFrom","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"abstract":[{"text":"Returns a partial range extending upward from a lower bound.","type":"text"}],"variants":[{"paths":["\/documentation\/forked\/version\/'...(_:)-3z0z5"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-3z0z5","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The lower bound for the range.","type":"text"}],"type":"paragraph"}],"name":"minimum"}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Use the postfix range operator (postfix "},{"type":"codeVoice","code":"..."},{"text":") to create a partial range","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of any type that conforms to the "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol. This example"},{"text":" ","type":"text"},{"type":"text","text":"creates a "},{"code":"PartialRangeFrom<Double>","type":"codeVoice"},{"type":"text","text":" instance that includes any value"},{"text":" ","type":"text"},{"type":"text","text":"greater than or equal to "},{"code":"5.0","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let atLeastFive = 5.0...","","atLeastFive.contains(4.0)     \/\/ false","atLeastFive.contains(5.0)     \/\/ true","atLeastFive.contains(6.0)     \/\/ true"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"type":"text","text":" "},{"type":"text","text":"represent the range from the partial range’s lower bound up to the end"},{"text":" ","type":"text"},{"type":"text","text":"of the collection."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[3...])","\/\/ Prints \"[40, 50, 60, 70]\""]},{"type":"aside","style":"note","name":"Precondition","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"minimum","type":"codeVoice"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}]}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"references":{"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/forked\/version\/comparable-implementations","title":"Comparable Implementations"},"doc://Forked/documentation/Forked/Version":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Version","kind":"identifier"}],"url":"\/documentation\/forked\/version","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Version"}],"type":"topic","abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"title":"Version","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","kind":"symbol","role":"collection","title":"Forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","abstract":[{"type":"text","text":"A framework for handling forked data structures and merge operations."}]},"doc://Forked/documentation/Forked/Version/...(_:)-3z0z5":{"role":"symbol","url":"\/documentation\/forked\/version\/'...(_:)-3z0z5","abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-3z0z5","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"title":"...(_:)","kind":"symbol"}}}