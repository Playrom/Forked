{"variants":[{"paths":["\/documentation\/forked\/commitcontent\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}],"name":"rhs"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"text":")","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"metadata":{"symbolKind":"op","role":"symbol","title":"!=(_:_:)","modules":[{"name":"Forked","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked13CommitContentO","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"extendedModule":"Swift","roleHeading":"Operator"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/!=(_:_:)"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/CommitContent","doc:\/\/Forked\/documentation\/Forked\/CommitContent\/Equatable-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"references":{"doc://Forked/documentation/Forked/CommitContent/Equatable-Implementations":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/Equatable-Implementations","url":"\/documentation\/forked\/commitcontent\/equatable-implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"Equatable Implementations","type":"topic"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","kind":"symbol","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}],"type":"topic","title":"Forked","role":"collection","identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/CommitContent/!=(_:_:)":{"url":"\/documentation\/forked\/commitcontent\/!=(_:_:)","kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"role":"symbol","type":"topic","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/!=(_:_:)"},"doc://Forked/documentation/Forked/CommitContent":{"navigatorTitle":[{"text":"CommitContent","kind":"identifier"}],"title":"CommitContent","abstract":[{"type":"text","text":"A wrapper to hold the resource. This allows for the resource to be"},{"text":" ","type":"text"},{"type":"text","text":"absent in a fork, similar to using "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/CommitContent","type":"topic","url":"\/documentation\/forked\/commitcontent","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommitContent"}]}}}