{"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"type":"text","text":" "},{"text":"Create an in-memory ForkedResource with the given forks, and initial value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The initial value is optional. If not provided, the main fork will be empty."},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value, which is different to"},{"type":"text","text":" "},{"text":"the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"kind":"symbol","identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Forked","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"externalID":"s:6Forked0A8ResourceC12initialValue5forksACyAA16AtomicRepositoryCyqd__GGqd__Sg_SayAA4ForkVGtcAHRszs8SendableRd__lufc","roleHeading":"Initializer","title":"init(initialValue:forks:)","symbolKind":"init","modules":[{"name":"Forked"}],"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"forks","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"kind":"text","text":"])"}]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"forks"},{"kind":"text","text":": ["},{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","text":"AtomicRepository","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)"]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"references":{"doc://Forked/documentation/Forked/AtomicRepository":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AtomicRepository","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"type":"text","text":" "},{"type":"text","text":"If the "},{"code":"Resource","type":"codeVoice"},{"type":"text","text":" it contains conforms to "},{"code":"Codable","type":"codeVoice"},{"text":", the ","type":"text"},{"code":"AtomicRepository","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"text":", and can be converted to a serialized form and saved as a file.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"text":" ","type":"text"},{"type":"text","text":"file is written to disk."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"title":"AtomicRepository","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","url":"\/documentation\/forked\/atomicrepository","role":"symbol"},"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForkedResource"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","url":"\/documentation\/forked\/forkedresource","kind":"symbol","type":"topic","role":"symbol"},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forks:)":{"role":"symbol","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)","type":"topic","abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Create an in-memory ForkedResource with the given forks, and initial value."},{"type":"text","text":" "},{"text":"The initial value is optional. If not provided, the main fork will be empty.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value, which is different to"},{"text":" ","type":"text"},{"text":"the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"text":" ","type":"text"},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forks"},{"text":": [","kind":"text"},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"title":"init(initialValue:forks:)","kind":"symbol"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","kind":"symbol","role":"collection","title":"Forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","abstract":[{"type":"text","text":"A framework for handling forked data structures and merge operations."}]},"doc://Forked/documentation/Forked/Fork":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fork"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fork"}],"title":"Fork","abstract":[{"text":"A  type representing a named fork.","type":"text"}],"url":"\/documentation\/forked\/fork","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","kind":"symbol"}}}