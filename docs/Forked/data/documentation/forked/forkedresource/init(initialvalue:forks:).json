{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)"]}],"kind":"symbol","metadata":{"symbolKind":"init","role":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"text":"forks","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"kind":"text","text":"])"}],"extendedModule":"Forked","modules":[{"name":"Forked"}],"title":"init(initialValue:forks:)","externalID":"s:6Forked0A8ResourceC12initialValue5forksACyAA16AtomicRepositoryCyqd__GGqd__Sg_SayAA4ForkVGtcAHRszs8SendableRd__lufc","roleHeading":"Initializer","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]}},"sections":[],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"type":"text","text":" "},{"type":"text","text":"Create an in-memory ForkedResource with the given forks, and initial value."},{"text":" ","type":"text"},{"text":"The initial value is optional. If not provided, the main fork will be empty.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value, which is different to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"forks"},{"kind":"text","text":": ["},{"text":"Fork","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","text":"AtomicRepository","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":">, ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://Forked/documentation/Forked/ForkedResource":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"url":"\/documentation\/forked\/forkedresource","role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","title":"ForkedResource","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}]},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forks:)":{"kind":"symbol","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)","type":"topic","role":"symbol","title":"init(initialValue:forks:)","abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"type":"text","text":" "},{"type":"text","text":"Create an in-memory ForkedResource with the given forks, and initial value."},{"text":" ","type":"text"},{"text":"The initial value is optional. If not provided, the main fork will be empty.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value, which is different to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"forks","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)"},"doc://Forked/documentation/Forked":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked","title":"Forked","role":"collection","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]},"doc://Forked/documentation/Forked/Fork":{"title":"Fork","type":"topic","url":"\/documentation\/forked\/fork","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fork"}],"navigatorTitle":[{"kind":"identifier","text":"Fork"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","abstract":[{"type":"text","text":"A  type representing a named fork."}],"role":"symbol"},"doc://Forked/documentation/Forked/AtomicRepository":{"title":"AtomicRepository","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"code":"Resource","type":"codeVoice"},{"type":"text","text":" it contains conforms to "},{"code":"Codable","type":"codeVoice"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"AtomicRepository"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"also ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":", and can be converted to a serialized form and saved as a file.","type":"text"},{"type":"text","text":" "},{"text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole","type":"text"},{"text":" ","type":"text"},{"text":"file is written to disk.","type":"text"}],"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","kind":"symbol","url":"\/documentation\/forked\/atomicrepository","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepository"}]}}}