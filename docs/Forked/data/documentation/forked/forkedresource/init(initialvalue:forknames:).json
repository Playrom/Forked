{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszs8SendableRd__lufc","title":"init(initialValue:forkNames:)","symbolKind":"init","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"roleHeading":"Initializer","extendedModule":"Forked","modules":[{"name":"Forked"}],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"])","kind":"text"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"kind":"symbol","abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"text":" ","type":"text"},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"? = nil, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"] = []) ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"AtomicRepository","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","kind":"typeIdentifier","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"kind":"text","text":"<"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"]}],"references":{"doc://Forked/documentation/Forked/AtomicRepository":{"url":"\/documentation\/forked\/atomicrepository","title":"AtomicRepository","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepository"}],"navigatorTitle":[{"text":"AtomicRepository","kind":"identifier"}],"abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"type":"text","text":" "},{"type":"text","text":"If the "},{"type":"codeVoice","code":"Resource"},{"type":"text","text":" it contains conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", the "},{"type":"codeVoice","code":"AtomicRepository"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"text":"also ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"type":"text","text":" "},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"text":" ","type":"text"},{"type":"text","text":"file is written to disk."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","kind":"symbol"},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"type":"text","text":" "},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"type":"text","text":" "},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"])","kind":"text"}],"conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(initialValue:forkNames:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"},"doc://Forked/documentation/Forked/ForkedResource":{"type":"topic","title":"ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForkedResource"}],"role":"symbol","url":"\/documentation\/forked\/forkedresource","abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"type":"text","text":" "},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource"},"doc://Forked/documentation/Forked":{"role":"collection","url":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol"}}}