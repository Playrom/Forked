{"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszs8SendableRd__lufc","symbolKind":"init","roleHeading":"Initializer","title":"init(initialValue:forkNames:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"extendedModule":"Forked","modules":[{"name":"Forked"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"role":"symbol"},"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"text":" ","type":"text"},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"] = []) ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","text":"AtomicRepository","kind":"typeIdentifier","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"text":" ","type":"text"},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"text":" ","type":"text"},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"title":"init(initialValue:forkNames:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"forkNames"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"])","kind":"text"}],"url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"},"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","role":"symbol","url":"\/documentation\/forked\/forkedresource","kind":"symbol","abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","type":"topic","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}]},"doc://Forked/documentation/Forked/AtomicRepository":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicRepository","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"An atomic repository is one that gets loaded completely into memory.","type":"text"},{"type":"text","text":" "},{"text":"If the ","type":"text"},{"type":"codeVoice","code":"Resource"},{"type":"text","text":" it contains conforms to "},{"code":"Codable","type":"codeVoice"},{"text":", the ","type":"text"},{"code":"AtomicRepository","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"text":"also ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"text":" ","type":"text"},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"text":" ","type":"text"},{"type":"text","text":"file is written to disk."}],"url":"\/documentation\/forked\/atomicrepository","title":"AtomicRepository","role":"symbol","navigatorTitle":[{"text":"AtomicRepository","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","role":"collection","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","title":"Forked"}}}