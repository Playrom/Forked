{"metadata":{"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"])","kind":"text"}],"extendedModule":"Forked","roleHeading":"Initializer","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszs8SendableRd__lufc","role":"symbol","modules":[{"name":"Forked"}],"title":"init(initialValue:forkNames:)","symbolKind":"init"},"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"type":"text","text":" "},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"] = []) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","kind":"typeIdentifier","preciseIdentifier":"s:6Forked16AtomicRepositoryC","text":"AtomicRepository"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"]}],"sections":[],"references":{"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"type":"text","text":" "},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"url":"\/documentation\/forked\/forkedresource","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource"},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"type":"text","text":" "},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"text":" ","type":"text"},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"kind":"symbol","role":"symbol","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"type":"topic","title":"init(initialValue:forkNames:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","role":"collection","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}],"title":"Forked","type":"topic","kind":"symbol"},"doc://Forked/documentation/Forked/AtomicRepository":{"title":"AtomicRepository","abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"code":"Resource","type":"codeVoice"},{"type":"text","text":" it contains conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", the "},{"type":"codeVoice","code":"AtomicRepository"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"type":"text","text":"also "},{"code":"Codable","type":"codeVoice"},{"text":", and can be converted to a serialized form and saved as a file.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"type":"text","text":" "},{"text":"file is written to disk.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepository"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","kind":"symbol","url":"\/documentation\/forked\/atomicrepository","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}]}}}