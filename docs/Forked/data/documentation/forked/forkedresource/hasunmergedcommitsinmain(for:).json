{"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"metadata":{"extendedModule":"Forked","modules":[{"name":"Forked"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasUnmergedCommitsInMain","kind":"identifier"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"hasUnmergedCommitsInMain(for:)","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:6Forked0A8ResourceC24hasUnmergedCommitsInMain3forSbAA4ForkV_tKF","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)"},"kind":"symbol","abstract":[{"type":"text","text":"Returns whether main has commits that haven’t been merged into the fork yet."},{"type":"text","text":" "},{"type":"text","text":"The common ancestor is always stored in the fork if either the fork or main get updated."},{"text":" ","type":"text"},{"type":"text","text":"By comparing common ancestor to main version, we can see if main has been updated."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasUnmergedCommitsInMain"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Fork","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Forked/documentation/Forked/Fork":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fork"}],"abstract":[{"type":"text","text":"A  type representing a named fork."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","title":"Fork","url":"\/documentation\/forked\/fork","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Fork","kind":"identifier"}]},"doc://Forked/documentation/Forked/ForkedResource":{"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"title":"ForkedResource","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","kind":"symbol","type":"topic","url":"\/documentation\/forked\/forkedresource","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForkedResource","kind":"identifier"}],"navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}]},"doc://Forked/documentation/Forked/ForkedResource/hasUnmergedCommitsInMain(for:)":{"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","title":"hasUnmergedCommitsInMain(for:)","type":"topic","abstract":[{"type":"text","text":"Returns whether main has commits that haven’t been merged into the fork yet."},{"text":" ","type":"text"},{"text":"The common ancestor is always stored in the fork if either the fork or main get updated.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"By comparing common ancestor to main version, we can see if main has been updated."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasUnmergedCommitsInMain","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)"},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"title":"Forked","role":"collection","url":"\/documentation\/forked"}}}