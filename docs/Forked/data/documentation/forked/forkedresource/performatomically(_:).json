{"abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)"},"metadata":{"title":"performAtomically(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Forked"}],"extendedModule":"Forked","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ReturnType"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"performAtomically"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"block","kind":"internalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","kind":"symbol","role":"collection","title":"Forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","abstract":[{"type":"text","text":"A framework for handling forked data structures and merge operations."}]},"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForkedResource"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","url":"\/documentation\/forked\/forkedresource","kind":"symbol","type":"topic","role":"symbol"},"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">(() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"role":"symbol","title":"performAtomically(_:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","type":"topic","abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"type":"text","text":" "},{"text":"use this to group the transaction of calls. Note that reentrance of this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}