{"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"type":"text","text":" "},{"text":"preventing other threads from changing anything between calls,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"text":" ","type":"text"},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"type":"text","text":" "},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"block","kind":"internalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"variants":[{"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","metadata":{"externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","symbolKind":"method","modules":[{"name":"Forked"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"performAtomically(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"extendedModule":"Forked","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","role":"collection","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","title":"Forked"},"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","kind":"symbol","abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"type":"text","text":" "},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"text":"method from the same thread will lead to deadlock. It is best not to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"text":" will block waiting.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"title":"performAtomically(_:)"},"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","role":"symbol","url":"\/documentation\/forked\/forkedresource","kind":"symbol","abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","type":"topic","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}]}}}