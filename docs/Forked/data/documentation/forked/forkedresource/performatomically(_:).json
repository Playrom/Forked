{"sections":[],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"type":"text","text":" "},{"text":"preventing other threads from changing anything between calls,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"text":"method from the same thread will lead to deadlock. It is best not to","type":"text"},{"type":"text","text":" "},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"text":" will block waiting.","type":"text"}],"variants":[{"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"block"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}]}],"kind":"declarations"}],"metadata":{"title":"performAtomically(_:)","conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"roleHeading":"Instance Method","extendedModule":"Forked","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}],"symbolKind":"method","modules":[{"name":"Forked"}],"externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","role":"symbol"},"references":{"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"type":"text","text":" "},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"type":"text","text":" "},{"text":"use this to group the transaction of calls. Note that reentrance of this","type":"text"},{"text":" ","type":"text"},{"text":"method from the same thread will lead to deadlock. It is best not to","type":"text"},{"text":" ","type":"text"},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","title":"performAtomically(_:)","conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"}],"role":"symbol"},"doc://Forked/documentation/Forked/ForkedResource":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"url":"\/documentation\/forked\/forkedresource","role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","title":"ForkedResource","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}]},"doc://Forked/documentation/Forked":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked","title":"Forked","role":"collection","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]}}}