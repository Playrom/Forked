{"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"sections":[],"abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"text":" ","type":"text"},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"type":"text","text":" "},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"type":"text","text":"with the "},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"]}],"metadata":{"symbolKind":"method","extendedModule":"Forked","roleHeading":"Instance Method","title":"performAtomically(_:)","modules":[{"name":"Forked"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"block"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}],"url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"type":"text","text":" "},{"text":"preventing other threads from changing anything between calls,","type":"text"},{"type":"text","text":" "},{"text":"use this to group the transaction of calls. Note that reentrance of this","type":"text"},{"type":"text","text":" "},{"text":"method from the same thread will lead to deadlock. It is best not to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"type":"text","text":"with the "},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}],"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","type":"topic","kind":"symbol","title":"performAtomically(_:)"},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"title":"Forked","role":"collection","url":"\/documentation\/forked"},"doc://Forked/documentation/Forked/ForkedResource":{"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"title":"ForkedResource","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","kind":"symbol","type":"topic","url":"\/documentation\/forked\/forkedresource","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForkedResource","kind":"identifier"}],"navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}]}}}