{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"title":"ForkedMerge","role":"collection","externalID":"ForkedMerge","roleHeading":"Framework","symbolKind":"module","modules":[{"name":"ForkedMerge"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge"},"hierarchy":{"paths":[[]]},"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"ForkedMerge provides the core functionality for merging divergent data structures back into a consistent state."}],"type":"paragraph"}]}],"topicSections":[{"anchor":"Protocols","title":"Protocols","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"]},{"generated":true,"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"]},{"title":"Functions","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(withMergerType:dominant:subordinate:commonAncestor:)-18fwy","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(withMergerType:dominant:subordinate:commonAncestor:)-2t4q4","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(withMergerType:dominant:subordinate:commonAncestor:)-8vogx"],"anchor":"Functions"},{"generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"],"title":"Enumerations"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableDictionary":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableDictionary"}],"url":"\/documentation\/forkedmerge\/mergeabledictionary","navigatorTitle":[{"text":"MergeableDictionary","kind":"identifier"}],"type":"topic","title":"MergeableDictionary","abstract":[{"type":"text","text":"Represents a mergable type for a dictionary of values."},{"type":"text","text":" "},{"type":"text","text":"Uses a CRDT algorithm."}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking":{"kind":"symbol","url":"\/documentation\/forkedmerge\/propertybacking","title":"PropertyBacking","navigatorTitle":[{"text":"PropertyBacking","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyBacking"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","role":"symbol","abstract":[{"text":"The storage used for a property. These storage types have built in","type":"text"},{"text":" ","type":"text"},{"text":"systems for merging. They maintain the information they need (eg history)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to properly merge even if with copies that have conflicting changes."}]},"doc://ForkedMerge/documentation/ForkedMerge/merge(withMergerType:dominant:subordinate:commonAncestor:)-2t4q4":{"type":"topic","role":"symbol","url":"\/documentation\/forkedmerge\/merge(withmergertype:dominant:subordinate:commonancestor:)-2t4q4","title":"merge(withMergerType:dominant:subordinate:commonAncestor:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(withMergerType:dominant:subordinate:commonAncestor:)-2t4q4","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"kind":"text","text":"<"},{"text":"M","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"withMergerType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"dominant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"subordinate","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"text":"?, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?) "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/merge(withMergerType:dominant:subordinate:commonAncestor:)-8vogx":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(withMergerType:dominant:subordinate:commonAncestor:)-8vogx","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"text":"M","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"withMergerType"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"dominant","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"subordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T"},{"kind":"text","text":"?"}],"type":"topic","abstract":[],"title":"merge(withMergerType:dominant:subordinate:commonAncestor:)","kind":"symbol","url":"\/documentation\/forkedmerge\/merge(withmergertype:dominant:subordinate:commonancestor:)-8vogx","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/DictionaryMerger":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DictionaryMerger","kind":"identifier"}],"type":"topic","title":"DictionaryMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","role":"symbol","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DictionaryMerger"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/dictionarymerger"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableValue"}],"type":"topic","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"text":" ","type":"text"},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablevalue","title":"MergeableValue","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"title":"ArrayOfIdentifiableMerger","kind":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","navigatorTitle":[{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"},"doc://ForkedMerge/documentation/ForkedMerge":{"role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"url":"\/documentation\/forkedmerge\/arraymerger","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayMerger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","role":"symbol","title":"ArrayMerger","navigatorTitle":[{"kind":"identifier","text":"ArrayMerger"}],"abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/merge(withMergerType:dominant:subordinate:commonAncestor:)-18fwy":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"externalParam","text":"withMergerType"},{"kind":"text","text":": "},{"text":"M","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"dominant","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"subordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(withMergerType:dominant:subordinate:commonAncestor:)-18fwy","url":"\/documentation\/forkedmerge\/merge(withmergertype:dominant:subordinate:commonancestor:)-18fwy","abstract":[],"title":"merge(withMergerType:dominant:subordinate:commonAncestor:)","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"title":"Merger","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"url":"\/documentation\/forkedmerge\/merger","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Merger"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Merger","kind":"identifier"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/propertymerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","type":"topic","kind":"symbol","title":"PropertyMerge","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}],"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"text":".","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableSet":{"navigatorTitle":[{"kind":"identifier","text":"MergeableSet"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableSet"}],"url":"\/documentation\/forkedmerge\/mergeableset","title":"MergeableSet","type":"topic","abstract":[{"type":"text","text":"Observed-Remove Set. Can add and remove like a normal set."},{"text":" ","type":"text"},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/TextMerger":{"navigatorTitle":[{"text":"TextMerger","kind":"identifier"}],"type":"topic","url":"\/documentation\/forkedmerge\/textmerger","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextMerger"}],"title":"TextMerger","kind":"symbol","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","kind":"symbol","title":"MergeableArray","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"text":"The stress here is on values, because this array does not guarantee that uniqueness of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice ‚Äî the value is"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"text":"This type is typically useful for strings in collaborative environments, and less useful for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableArray","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}]},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"type":"topic","url":"\/documentation\/forkedmerge\/setmerger","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","title":"SetMerger","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetMerger"}]}}}