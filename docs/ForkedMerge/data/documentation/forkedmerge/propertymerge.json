{"abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"title":"PropertyMerge","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"modules":[{"name":"ForkedMerge"}],"navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"symbolKind":"enum","externalID":"s:11ForkedMerge08PropertyB0O","roleHeading":"Enumeration"},"topicSections":[{"anchor":"Enumeration-Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"generated":true,"title":"Enumeration Cases"},{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/propertymerge"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}]}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"references":{"doc://ForkedMerge/SQ":{"identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"abstract":[{"text":"The property must be a ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" type, and will be merged accordingly"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"code":"Mergeable","type":"codeVoice"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is the default algorithm if "},{"type":"codeVoice","code":"@Merged"},{"type":"text","text":" has been applied with no"},{"type":"text","text":" "},{"type":"text","text":"algorithm stated."}],"url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","title":"PropertyMerge.mergeableProtocol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"mergeableProtocol","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","title":"PropertyMerge.arrayOfIdentifiableMerge","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"arrayOfIdentifiableMerge"}],"abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"type":"text","text":" "},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"type":"text","text":" "},{"type":"text","text":"a merge. When there is a conflict, it will"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"type":"text","text":" "},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"type":"text","text":" "},{"type":"text","text":"property."}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setMerge","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","title":"PropertyMerge.setMerge","abstract":[{"text":"Will merge sets of values. When there is a conflict, it will handle","type":"text"},{"text":" ","type":"text"},{"text":"it using a MergeableSet for each set of changes.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/setmerge"},"doc://ForkedMerge/SY":{"identifier":"doc:\/\/ForkedMerge\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"type":"text","text":" "},{"type":"text","text":"When there is a conflict, it will"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"text":" ","type":"text"},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"text":" ","type":"text"},{"type":"text","text":"there can be duplicates created, so it is more suitable to value types"},{"type":"text","text":" "},{"type":"text","text":"like characters in a string. than it is to identifiable types."}],"title":"PropertyMerge.arrayMerge","kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"arrayMerge","kind":"identifier"}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"title":"PropertyMerge","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PropertyMerge","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","role":"symbol","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"type":"text","text":" "},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"kind":"article","type":"topic","abstract":[],"title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"title":"PropertyMerge.textMerge","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","abstract":[{"text":"Applies the ","type":"text"},{"type":"codeVoice","code":"array"},{"type":"text","text":" merge algorithm to the characters in a string."},{"type":"text","text":" "},{"text":"This is suitable for any type of shared text, which may","type":"text"},{"type":"text","text":" "},{"text":"have conflicting edits, like a collaborative editor.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The variable must be a "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"textMerge","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"},"doc://ForkedMerge/SH":{"identifier":"doc:\/\/ForkedMerge\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"init(rawValue:)","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"type":"topic","title":"PropertyMerge.dictionaryMerge","abstract":[{"text":"Merges dictionaries. When there is a conflict, it will merge using","type":"text"},{"type":"text","text":" "},{"text":"a MergeableDictionary for each dictionary. If the value type is","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Mergeable"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}],"url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"dictionaryMerge","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","abstract":[],"type":"topic","title":"RawRepresentable Implementations","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","kind":"article","role":"collectionGroup"}}}