{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}],"symbolKind":"enum","title":"PropertyMerge","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"externalID":"s:11ForkedMerge08PropertyB0O","role":"symbol","modules":[{"name":"ForkedMerge"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"topicSections":[{"generated":true,"anchor":"Enumeration-Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"title":"Enumeration Cases"},{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","abstract":[],"title":"init(rawValue:)","type":"topic","role":"symbol","kind":"symbol"},"doc://ForkedMerge/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/ForkedMerge\/SY"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"type":"topic","kind":"symbol","title":"PropertyMerge.mergeableProtocol","abstract":[{"type":"text","text":"The property must be a "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" type, and will be merged accordingly"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is the default algorithm if "},{"code":"@Merged","type":"codeVoice"},{"text":" has been applied with no","type":"text"},{"type":"text","text":" "},{"text":"algorithm stated.","type":"text"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"mergeableProtocol","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"text":" ","type":"text"},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"type":"text","text":" "},{"text":"a merge. When there is a conflict, it will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"text":" ","type":"text"},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"type":"text","text":" "},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"type":"text","text":" "},{"type":"text","text":"property."}],"title":"PropertyMerge.arrayOfIdentifiableMerge","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arrayOfIdentifiableMerge"}],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","type":"topic"},"doc://ForkedMerge/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"type":"topic","title":"ForkedMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"abstract":[{"type":"text","text":"Applies the "},{"type":"codeVoice","code":"array"},{"type":"text","text":" merge algorithm to the characters in a string."},{"text":" ","type":"text"},{"text":"This is suitable for any type of shared text, which may","type":"text"},{"text":" ","type":"text"},{"text":"have conflicting edits, like a collaborative editor.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The variable must be a "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"type":"topic","title":"PropertyMerge.textMerge","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"textMerge"}],"url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","kind":"symbol"},"doc://ForkedMerge/SH":{"identifier":"doc:\/\/ForkedMerge\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"abstract":[{"text":"Will merge sets of values. When there is a conflict, it will handle","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it using a MergeableSet for each set of changes."}],"type":"topic","title":"PropertyMerge.setMerge","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"setMerge"}],"url":"\/documentation\/forkedmerge\/propertymerge\/setmerge","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"role":"symbol","title":"PropertyMerge.dictionaryMerge","abstract":[{"type":"text","text":"Merges dictionaries. When there is a conflict, it will merge using"},{"type":"text","text":" "},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"type":"text","text":" "},{"type":"codeVoice","code":"Mergeable"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dictionaryMerge"}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"title":"PropertyMerge","url":"\/documentation\/forkedmerge\/propertymerge","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"text":".","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"arrayMerge"}],"kind":"symbol","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"text":" ","type":"text"},{"type":"text","text":"When there is a conflict, it will"},{"type":"text","text":" "},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"type":"text","text":" "},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"type":"text","text":" "},{"text":"there can be duplicates created, so it is more suitable to value types","type":"text"},{"text":" ","type":"text"},{"text":"like characters in a string. than it is to identifiable types.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","type":"topic","role":"symbol","title":"PropertyMerge.arrayMerge","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","abstract":[],"url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","kind":"article"}}}