{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"modules":[{"name":"ForkedMerge"}],"roleHeading":"Enumeration","externalID":"s:11ForkedMerge08PropertyB0O","symbolKind":"enum","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"title":"PropertyMerge"},"abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"type":"text","text":" "},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"title":"Enumeration Cases","generated":true,"anchor":"Enumeration-Cases"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/propertymerge"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}]}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"title":"PropertyMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}],"abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"type":"text","text":" "},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"code":"Merger","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/propertymerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","role":"collection","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"url":"\/documentation\/forkedmerge","title":"ForkedMerge","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","title":"PropertyMerge.setMerge","kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setMerge","kind":"identifier"}],"abstract":[{"text":"Will merge sets of values. When there is a conflict, it will handle","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it using a MergeableSet for each set of changes."}],"url":"\/documentation\/forkedmerge\/propertymerge\/setmerge"},"doc://ForkedMerge/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","title":"RawRepresentable Implementations","abstract":[]},"doc://ForkedMerge/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","title":"PropertyMerge.arrayOfIdentifiableMerge","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"type":"text","text":" "},{"text":"Identifiable. It will ensure that there are no duplicated identifiers following","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a merge. When there is a conflict, it will"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"type":"text","text":" "},{"text":"Guarantees uniqueness of identifiers after merge, but does not","type":"text"},{"type":"text","text":" "},{"text":"enforce uniqueness of identifiers through updates made directly to the","type":"text"},{"type":"text","text":" "},{"text":"property.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","type":"topic","title":"PropertyMerge.mergeableProtocol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"mergeableProtocol","kind":"identifier"}],"abstract":[{"text":"The property must be a ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":" type, and will be merged accordingly","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This is the default algorithm if "},{"type":"codeVoice","code":"@Merged"},{"type":"text","text":" has been applied with no"},{"text":" ","type":"text"},{"text":"algorithm stated.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"dictionaryMerge","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","title":"PropertyMerge.dictionaryMerge","abstract":[{"text":"Merges dictionaries. When there is a conflict, it will merge using","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":", the dictionary will be merged recursing into the values."}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","type":"topic","title":"init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","title":"PropertyMerge.textMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"textMerge","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Applies the ","type":"text"},{"code":"array","type":"codeVoice"},{"type":"text","text":" merge algorithm to the characters in a string."},{"text":" ","type":"text"},{"type":"text","text":"This is suitable for any type of shared text, which may"},{"type":"text","text":" "},{"text":"have conflicting edits, like a collaborative editor.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The variable must be a "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},"doc://ForkedMerge/SY":{"identifier":"doc:\/\/ForkedMerge\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","title":"PropertyMerge.arrayMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"arrayMerge","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Will merge as an array of values. Elements must be Equatable.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When there is a conflict, it will"},{"type":"text","text":" "},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"text":" ","type":"text"},{"text":"there can be duplicates created, so it is more suitable to value types","type":"text"},{"text":" ","type":"text"},{"text":"like characters in a string. than it is to identifiable types.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","type":"topic","title":"Equatable Implementations","abstract":[]}}}