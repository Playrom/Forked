{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"},"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"title":"Enumeration Cases","anchor":"Enumeration-Cases","generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}],"externalID":"s:11ForkedMerge08PropertyB0O","modules":[{"name":"ForkedMerge"}],"title":"PropertyMerge","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"role":"symbol","symbolKind":"enum"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"title":"PropertyMerge","kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"code":"Merger","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","type":"topic","title":"init(rawValue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"mergeableProtocol","kind":"identifier"}],"abstract":[{"text":"The property must be a ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":" type, and will be merged accordingly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This is the default algorithm if "},{"type":"codeVoice","code":"@Merged"},{"type":"text","text":" has been applied with no"},{"text":" ","type":"text"},{"text":"algorithm stated.","type":"text"}],"title":"PropertyMerge.mergeableProtocol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","kind":"symbol"},"doc://ForkedMerge/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arrayOfIdentifiableMerge"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","type":"topic","title":"PropertyMerge.arrayOfIdentifiableMerge","abstract":[{"text":"Will merge as an array of values. Elements must be Equatable and","type":"text"},{"type":"text","text":" "},{"text":"Identifiable. It will ensure that there are no duplicated identifiers following","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a merge. When there is a conflict, it will"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"text":"Guarantees uniqueness of identifiers after merge, but does not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"text":" ","type":"text"},{"text":"property.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"title":"PropertyMerge.dictionaryMerge","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","type":"topic","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dictionaryMerge"}],"kind":"symbol","abstract":[{"text":"Merges dictionaries. When there is a conflict, it will merge using","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"type":"text","text":" "},{"type":"codeVoice","code":"Mergeable"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"kind":"symbol","title":"PropertyMerge.setMerge","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"setMerge","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","role":"symbol","abstract":[{"text":"Will merge sets of values. When there is a conflict, it will handle","type":"text"},{"type":"text","text":" "},{"text":"it using a MergeableSet for each set of changes.","type":"text"}],"type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/setmerge"},"doc://ForkedMerge/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"abstract":[{"text":"Applies the ","type":"text"},{"type":"codeVoice","code":"array"},{"type":"text","text":" merge algorithm to the characters in a string."},{"type":"text","text":" "},{"text":"This is suitable for any type of shared text, which may","type":"text"},{"type":"text","text":" "},{"text":"have conflicting edits, like a collaborative editor.","type":"text"},{"text":" ","type":"text"},{"text":"The variable must be a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"title":"PropertyMerge.textMerge","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"textMerge","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","role":"symbol"},"doc://ForkedMerge/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/ForkedMerge\/SY"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"text":" ","type":"text"},{"text":"When there is a conflict, it will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"text":" ","type":"text"},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"type":"text","text":" "},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"type":"text","text":" "},{"type":"text","text":"there can be duplicates created, so it is more suitable to value types"},{"text":" ","type":"text"},{"text":"like characters in a string. than it is to identifiable types.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"arrayMerge","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","title":"PropertyMerge.arrayMerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","title":"Equatable Implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","role":"collectionGroup","title":"RawRepresentable Implementations","abstract":[],"kind":"article","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"}}}