{"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2"]}],"abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"type":"text","text":" "},{"text":"The result is different to merging where the elements are not mergeable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This call will recurse the merge."}],"metadata":{"modules":[{"name":"ForkedMerge"}],"title":"merge(_:withSubordinate:commonAncestor:)","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":", "},{"code":"Equatable","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}]},"extendedModule":"ForkedMerge","externalID":"s:11ForkedMerge25ArrayOfIdentifiableMergerVAA0A09MergeableRzrlE5merge_15withSubordinate14commonAncestorSayxGAI_A2ItKF","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}]},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","role":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"kind":"symbol","title":"ArrayOfIdentifiableMerger","abstract":[{"text":"Merges an array, ensuring that the result has elements with unqiue identifiers.","type":"text"}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/merge(_:withSubordinate:commonAncestor:)-1pmm2":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"text":" ","type":"text"},{"type":"text","text":"The result is different to merging where the elements are not mergeable."},{"type":"text","text":" "},{"text":"This call will recurse the merge.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Mergeable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", and "},{"code":"Identifiable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2","title":"merge(_:withSubordinate:commonAncestor:)"}}}