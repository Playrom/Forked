{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2"]}],"metadata":{"extendedModule":"ForkedMerge","modules":[{"name":"ForkedMerge"}],"role":"symbol","title":"merge(_:withSubordinate:commonAncestor:)","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Mergeable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":", and ","type":"text"},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:11ForkedMerge25ArrayOfIdentifiableMergerVAA0A09MergeableRzrlE5merge_15withSubordinate14commonAncestorSayxGAI_A2ItKF"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"]]},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"This function merges two arrays of elements that are identifiable and mergeable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The result is different to merging where the elements are not mergeable."},{"type":"text","text":" "},{"text":"This call will recurse the merge.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"], "},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["macOS"]}]}],"kind":"symbol","references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"type":"topic","title":"ForkedMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","kind":"symbol","title":"ArrayOfIdentifiableMerger","abstract":[{"text":"Merges an array, ensuring that the result has elements with unqiue identifiers.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/merge(_:withSubordinate:commonAncestor:)-1pmm2":{"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","title":"merge(_:withSubordinate:commonAncestor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"kind":"text","text":"(["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"role":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2","abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"text":" ","type":"text"},{"text":"The result is different to merging where the elements are not mergeable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This call will recurse the merge."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Mergeable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":", and ","type":"text"},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"}}}