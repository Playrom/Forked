{"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"}],"title":"MergeableValue","externalID":"s:11ForkedMerge14MergeableValueV","roleHeading":"Structure","modules":[{"name":"ForkedMerge"}],"navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"role":"symbol"},"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"type":"text","text":" "},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"generated":true,"title":"Initializers"},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"],"anchor":"Default-Implementations"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH"],"title":"Conforms To","kind":"relationships"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue"]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"type":"topic","title":"ForkedMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","url":"\/documentation\/forkedmerge\/mergeablevalue\/value","kind":"symbol","title":"value","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","type":"topic","kind":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"title":"MergeableValue","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}]},"doc://ForkedMerge/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","title":"init(_:)","abstract":[],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","kind":"article","abstract":[]},"doc://ForkedMerge/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/Se"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","title":"Decodable Implementations"},"doc://ForkedMerge/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/s8CopyableP"},"doc://ForkedMerge/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","abstract":[],"title":"Mergeable Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","type":"topic"},"doc://ForkedMerge/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ForkedMerge\/SE"},"doc://ForkedMerge/6Forked9MergeableP":{"type":"unresolvable","title":"Forked.Mergeable","identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP"}}}