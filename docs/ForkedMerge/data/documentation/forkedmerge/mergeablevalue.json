{"kind":"symbol","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"roleHeading":"Structure","role":"symbol","title":"MergeableValue","externalID":"s:11ForkedMerge14MergeableValueV","modules":[{"name":"ForkedMerge"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH"],"title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">","kind":"text"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue"]}],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"],"anchor":"Default-Implementations"}],"references":{"doc://ForkedMerge/6Forked9MergeableP":{"title":"Forked.Mergeable","identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}]},"doc://ForkedMerge/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","abstract":[],"title":"Equatable Implementations","type":"topic","url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","role":"collectionGroup","kind":"article"},"doc://ForkedMerge/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ForkedMerge\/Se","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableValue"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"title":"MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://ForkedMerge/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ForkedMerge\/SE","type":"unresolvable"},"doc://ForkedMerge/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/ForkedMerge\/s8CopyableP","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","title":"Decodable Implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","abstract":[]},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"role":"symbol","title":"init(_:)","kind":"symbol","abstract":[],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"kind":"article","url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","abstract":[],"title":"Mergeable Implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","type":"topic","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","abstract":[],"title":"value","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/forkedmerge\/mergeablevalue\/value","role":"symbol"}}}