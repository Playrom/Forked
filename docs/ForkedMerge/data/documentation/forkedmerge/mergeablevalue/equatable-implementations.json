{"sections":[],"kind":"article","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"Equatable Implementations","role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"ForkedMerge"}]},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"]]},"topicSections":[{"generated":true,"title":"Operators","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)"],"anchor":"Operators"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/!=(_:_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)","title":"!=(_:_:)","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablevalue\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"type":"text","text":" "},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"text":" ","type":"text"},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"title":"MergeableValue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"url":"\/documentation\/forkedmerge\/mergeablevalue"}}}