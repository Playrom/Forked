{"sections":[],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"init(_:)","role":"symbol","externalID":"s:11ForkedMerge14MergeableValueVyACyxGxcfc","modules":[{"name":"ForkedMerge"}],"symbolKind":"init","roleHeading":"Initializer"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue\/init(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","interfaceLanguage":"swift"},"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"title":"MergeableValue","role":"symbol","abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"text":" ","type":"text"},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/mergeablevalue"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"title":"init(_:)","abstract":[],"url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}]}}}