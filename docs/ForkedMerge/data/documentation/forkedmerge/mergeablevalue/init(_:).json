{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablevalue\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","externalID":"s:11ForkedMerge14MergeableValueVyACyxGxcfc","roleHeading":"Initializer","title":"init(_:)","modules":[{"name":"ForkedMerge"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init"},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableValue"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablevalue","title":"MergeableValue","abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)","url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"type":"topic","url":"\/documentation\/forkedmerge","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge"}}}