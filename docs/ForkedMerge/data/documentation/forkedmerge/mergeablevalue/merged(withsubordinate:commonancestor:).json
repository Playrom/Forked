{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/merged(withSubordinate:commonAncestor:)"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"]]},"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","role":"symbol","title":"merged(withSubordinate:commonAncestor:)","extendedModule":"ForkedMerge","symbolKind":"method","modules":[{"name":"ForkedMerge"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"MergeableValue","preciseIdentifier":"s:11ForkedMerge14MergeableValueV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:11ForkedMerge14MergeableValueV6merged15withSubordinate14commonAncestorACyxGAG_AGtKF"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue","kind":"typeIdentifier","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","preciseIdentifier":"s:11ForkedMerge14MergeableValueV","kind":"typeIdentifier","text":"MergeableValue"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue\/merged(withsubordinate:commonancestor:)"]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"type":"topic","title":"ForkedMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/merged(withSubordinate:commonAncestor:)":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/merged(withsubordinate:commonancestor:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MergeableValue","preciseIdentifier":"s:11ForkedMerge14MergeableValueV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","abstract":[],"kind":"symbol","title":"merged(withSubordinate:commonAncestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/merged(withSubordinate:commonAncestor:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","abstract":[],"title":"Mergeable Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","type":"topic","kind":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"title":"MergeableValue","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}]}}}