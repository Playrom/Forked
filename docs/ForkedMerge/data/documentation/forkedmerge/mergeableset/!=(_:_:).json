{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Equatable-Implementations"]]},"metadata":{"role":"symbol","symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"extendedModule":"Swift","roleHeading":"Operator","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedMerge12MergeableSetV"},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/!=(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeableset\/!=(_:_:)"]}],"sections":[],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableSet":{"navigatorTitle":[{"kind":"identifier","text":"MergeableSet"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableSet"}],"url":"\/documentation\/forkedmerge\/mergeableset","title":"MergeableSet","type":"topic","abstract":[{"type":"text","text":"Observed-Remove Set. Can add and remove like a normal set."},{"text":" ","type":"text"},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N PreguiÃ§a, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableSet/Equatable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeableset\/equatable-implementations","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Equatable-Implementations","abstract":[],"kind":"article","title":"Equatable Implementations","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge":{"role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableSet/!=(_:_:)":{"url":"\/documentation\/forkedmerge\/mergeableset\/!=(_:_:)","title":"!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/!=(_:_:)","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol"}}}