{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"role":"symbol","modules":[{"name":"ForkedMerge"}],"externalID":"s:11ForkedMerge15PropertyBackingO","navigatorTitle":[{"text":"PropertyBacking","kind":"identifier"}],"title":"PropertyBacking","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyBacking"}],"roleHeading":"Enumeration"},"sections":[],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableDictionary","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableSet","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableValue"],"anchor":"Enumeration-Cases","generated":true},{"title":"Initializers","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/init(rawValue:)"],"anchor":"Initializers"},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/RawRepresentable-Implementations"]}],"abstract":[{"type":"text","text":"The storage used for a property. These storage types have built in"},{"type":"text","text":" "},{"type":"text","text":"systems for merging. They maintain the information they need (eg history)"},{"type":"text","text":" "},{"text":"to properly merge even if with copies that have conflicting changes.","type":"text"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"type":"conformsTo","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/forkedmerge\/propertybacking"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PropertyBacking","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking":{"role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertybacking","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","navigatorTitle":[{"text":"PropertyBacking","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"PropertyBacking","kind":"identifier"}],"title":"PropertyBacking","abstract":[{"type":"text","text":"The storage used for a property. These storage types have built in"},{"text":" ","type":"text"},{"type":"text","text":"systems for merging. They maintain the information they need (eg history)"},{"text":" ","type":"text"},{"text":"to properly merge even if with copies that have conflicting changes.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking/RawRepresentable-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/forkedmerge\/propertybacking\/rawrepresentable-implementations","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/RawRepresentable-Implementations","title":"RawRepresentable Implementations","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking/init(rawValue:)":{"abstract":[],"role":"symbol","url":"\/documentation\/forkedmerge\/propertybacking\/init(rawvalue:)","title":"init(rawValue:)","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking/Equatable-Implementations":{"kind":"article","url":"\/documentation\/forkedmerge\/propertybacking\/equatable-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/Equatable-Implementations","type":"topic","title":"Equatable Implementations"},"doc://ForkedMerge/SY":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SY","title":"Swift.RawRepresentable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking/mergeableValue":{"title":"PropertyBacking.mergeableValue","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableValue","type":"topic","abstract":[{"type":"text","text":"This uses a "},{"code":"MergeableValue","type":"codeVoice"},{"text":" type as the backing of the variable.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The mergeableValue stores a timestamp with the value whenever there is an update."},{"text":" ","type":"text"},{"text":"A merge will choose the most recent updated value.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"mergeableValue","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/propertybacking\/mergeablevalue"},"doc://ForkedMerge/SH":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SH","title":"Swift.Hashable"},"doc://ForkedMerge/SQ":{"type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SQ","title":"Swift.Equatable"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking/mergeableArray":{"abstract":[{"type":"text","text":"Uses a "},{"code":"MergeableArray","type":"codeVoice"},{"text":" type as the backing of the variable.","type":"text"}],"role":"symbol","url":"\/documentation\/forkedmerge\/propertybacking\/mergeablearray","title":"PropertyBacking.mergeableArray","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableArray","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"mergeableArray","kind":"identifier"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking/mergeableSet":{"title":"PropertyBacking.mergeableSet","url":"\/documentation\/forkedmerge\/propertybacking\/mergeableset","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableSet","abstract":[{"text":"Uses a ","type":"text"},{"code":"MergeableSet","type":"codeVoice"},{"type":"text","text":" type as the backing of the variable."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mergeableSet","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking/mergeableDictionary":{"kind":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertybacking\/mergeabledictionary","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"mergeableDictionary","kind":"identifier"}],"abstract":[{"type":"text","text":"Uses a "},{"code":"MergeableDictionary","type":"codeVoice"},{"text":" type as the backing of the variable.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableDictionary","title":"PropertyBacking.mergeableDictionary","role":"symbol"}}}