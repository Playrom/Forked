{"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/setmerger"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"sections":[],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()"],"anchor":"Initializers"},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"externalID":"s:11ForkedMerge9SetMergerV","symbolKind":"struct","title":"SetMerger","modules":[{"name":"ForkedMerge"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"}],"navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"roleHeading":"Structure"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/SetMerger/init()":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"url":"\/documentation\/forkedmerge\/setmerger\/init()","title":"init()","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()","type":"topic","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger/merge(_:withSubordinate:commonAncestor:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)","role":"symbol","kind":"symbol","title":"merge(_:withSubordinate:commonAncestor:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"withSubordinate"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"url":"\/documentation\/forkedmerge\/setmerger\/merge(_:withsubordinate:commonancestor:)","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","type":"topic","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"kind":"symbol","role":"symbol","title":"SetMerger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SetMerger","kind":"identifier"}],"navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/setmerger"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"role":"symbol","title":"Merger","navigatorTitle":[{"kind":"identifier","text":"Merger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","url":"\/documentation\/forkedmerge\/merger","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Merger"}],"type":"topic","kind":"symbol","abstract":[{"text":"A merger is a type that applies a merging algorithm to merge two values together.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"type":"text","text":" "},{"type":"text","text":"diffing against a common ancestor."}]},"doc://ForkedMerge/documentation/ForkedMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","role":"collection","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"url":"\/documentation\/forkedmerge","title":"ForkedMerge","kind":"symbol","type":"topic"}}}