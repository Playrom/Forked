{"abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"SetMerger"}],"modules":[{"name":"ForkedMerge"}],"roleHeading":"Structure","externalID":"s:11ForkedMerge9SetMergerV","title":"SetMerger","symbolKind":"struct","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"}]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetMerger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/forkedmerge\/setmerger"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"sections":[],"references":{"doc://ForkedMerge/documentation/ForkedMerge/SetMerger/merge(_:withSubordinate:commonAncestor:)":{"abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"(","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": "},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","title":"merge(_:withSubordinate:commonAncestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)","url":"\/documentation\/forkedmerge\/setmerger\/merge(_:withsubordinate:commonancestor:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","role":"symbol","kind":"symbol","title":"Merger","url":"\/documentation\/forkedmerge\/merger","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Merger","kind":"identifier"}],"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"type":"text","text":" "},{"text":"The values are typically of a simple type. The algorithm could be anything, from a","type":"text"},{"text":" ","type":"text"},{"text":"simple most recent edit wins, to more advanced CRDT based approaches that use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}]},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger/init()":{"kind":"symbol","url":"\/documentation\/forkedmerge\/setmerger\/init()","abstract":[],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()"},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"}],"abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/setmerger","title":"SetMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"}}}