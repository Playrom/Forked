{"metadata":{"title":"SetMerger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetMerger"}],"modules":[{"name":"ForkedMerge"}],"roleHeading":"Structure","navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"symbolKind":"struct","externalID":"s:11ForkedMerge9SetMergerV","role":"symbol"},"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()"],"generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" : "},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"}]}]}],"variants":[{"paths":["\/documentation\/forkedmerge\/setmerger"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","interfaceLanguage":"swift"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"title":"Merger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Merger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/merger","kind":"symbol","role":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}]},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"title":"SetMerger","type":"topic","navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/setmerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger"},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger/merge(_:withSubordinate:commonAncestor:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"type":"topic","title":"merge(_:withSubordinate:commonAncestor:)","role":"symbol","url":"\/documentation\/forkedmerge\/setmerger\/merge(_:withsubordinate:commonancestor:)","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)"},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger/init()":{"kind":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","role":"symbol","title":"init()","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()","url":"\/documentation\/forkedmerge\/setmerger\/init()"}}}