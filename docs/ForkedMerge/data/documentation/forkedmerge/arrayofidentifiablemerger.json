{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/arrayofidentifiablemerger"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"},"metadata":{"role":"symbol","roleHeading":"Structure","title":"ArrayOfIdentifiableMerger","externalID":"s:11ForkedMerge25ArrayOfIdentifiableMergerV","symbolKind":"struct","modules":[{"name":"ForkedMerge"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"navigatorTitle":[{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayOfIdentifiableMerger","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Identifiable","kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP"}],"languages":["swift"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"type":"conformsTo","kind":"relationships"}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/init()"],"generated":true,"anchor":"Initializers"},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2"],"generated":true},{"anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/Merger-Implementations"],"title":"Default Implementations"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","navigatorTitle":[{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"title":"ArrayOfIdentifiableMerger","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/merge(_:withSubordinate:commonAncestor:)-1pmm2":{"kind":"symbol","abstract":[{"text":"This function merges two arrays of elements that are identifiable and mergeable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The result is different to merging where the elements are not mergeable."},{"text":" ","type":"text"},{"text":"This call will recurse the merge.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","title":"merge(_:withSubordinate:commonAncestor:)","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2","type":"topic","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Identifiable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/Merger-Implementations":{"title":"Merger Implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/Merger-Implementations","abstract":[],"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merger-implementations"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Merger"}],"role":"symbol","url":"\/documentation\/forkedmerge\/merger","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Merger","kind":"identifier"}],"kind":"symbol","title":"Merger","abstract":[{"text":"A merger is a type that applies a merging algorithm to merge two values together.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/init()":{"title":"init()","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/init()"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","role":"collection"}}}