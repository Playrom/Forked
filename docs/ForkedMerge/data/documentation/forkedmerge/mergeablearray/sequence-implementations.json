{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations"]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"metadata":{"modules":[{"name":"ForkedMerge"}],"role":"collectionGroup","title":"Sequence Implementations","roleHeading":"API Collection"},"kind":"article","topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lazy","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/publisher"],"generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/allSatisfy(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compactMap(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/enumerated()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-1vis2","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-77qlu","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-6q035","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-7nexl","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/forEach(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-5xpf","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-8i05f","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(_:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(into:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled(using:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-745kq","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/withContiguousStorageIfAvailable(_:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/count(where:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"count"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/count(where:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","title":"count(where:)","abstract":[{"type":"text","text":"Returns the number of elements in the sequence that satisfy the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/enumerated()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/enumerated()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/enumerated()","type":"topic","title":"enumerated()","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" represents a","type":"text"},{"text":" ","type":"text"},{"text":"consecutive integer starting at zero and ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":" represents an element of"},{"text":" ","type":"text"},{"text":"the sequence.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/sorted()","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted()","title":"sorted()","abstract":[{"text":"Returns the elements of the sequence, sorted.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/withContiguousStorageIfAvailable(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/withContiguousStorageIfAvailable(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/withcontiguousstorageifavailable(_:)","type":"topic","title":"withContiguousStorageIfAvailable(_:)","abstract":[],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/filter(_:)-77qlu":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/filter(_:)-77qlu","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-77qlu","title":"filter(_:)","abstract":[{"text":"Returns an array containing, in order, the elements of the sequence","type":"text"},{"type":"text","text":" "},{"text":"that satisfy the given predicate.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s15FlattenSequenceV","kind":"typeIdentifier","text":"FlattenSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/joined()","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"joined()","abstract":[{"text":"Returns the elements of this sequence of sequences, concatenated.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/flatMap(_:)-6q035":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-6q035","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/flatmap(_:)-6q035","abstract":[{"text":"Returns an array containing the concatenated results of calling the","type":"text"},{"type":"text","text":" "},{"text":"given transformation with each element of this sequence.","type":"text"}],"kind":"symbol","role":"symbol","title":"flatMap(_:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/min()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/min()","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min()","title":"min()","abstract":[{"text":"Returns the minimum element in the sequence.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/min(by:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/min(by:)","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min(by:)","type":"topic","abstract":[{"type":"text","text":"Returns the minimum element in the sequence, using the given predicate as"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}],"title":"min(by:)","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted(using:)-4ox5r":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-4ox5r","type":"topic","title":"sorted(using:)","abstract":[{"text":"Returns the elements of the sequence, sorted using the given array of","type":"text"},{"type":"text","text":" "},{"code":"SortComparator","type":"codeVoice"},{"type":"text","text":"s to compare elements."}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/reduce(into:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ()) "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/reduce(into:_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(into:_:)","title":"reduce(into:_:)","abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"type":"text","text":"given closure."}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/max()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/max()","type":"topic","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"max()","abstract":[{"type":"text","text":"Returns the maximum element in the sequence."}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formatted(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11FormatStyleP0B6OutputQa","text":"FormatOutput"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/formatted(_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted(_:)","title":"formatted(_:)","abstract":[],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lexicographicallyPrecedes(_:by:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/lexicographicallyprecedes(_:by:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:by:)","title":"lexicographicallyPrecedes(_:by:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":" ","type":"text"},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the given"},{"type":"text","text":" "},{"type":"text","text":"predicate to compare elements."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"kind":"text","text":", "},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted(using:)-745kq":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-745kq","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"text":"<","kind":"text"},{"text":"Comparator","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Comparator"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-745kq","type":"topic","title":"sorted(using:)","abstract":[{"text":"Returns the elements of the sequence, sorted using the given comparator","type":"text"},{"type":"text","text":" "},{"text":"to compare elements.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/shuffled(using:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shuffled"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/shuffled(using:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled(using:)","title":"shuffled(using:)","abstract":[{"text":"Returns the elements of the sequence, shuffled using the given generator","type":"text"},{"type":"text","text":" "},{"text":"as a source for randomness.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lazy":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lazy","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lazy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12LazySequenceV","kind":"typeIdentifier","text":"LazySequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/lazy","type":"topic","title":"lazy","abstract":[{"text":"A sequence containing the same elements as this sequence,","type":"text"},{"type":"text","text":" "},{"text":"but on which some operations, such as ","type":"text"},{"type":"codeVoice","code":"map"},{"text":" and ","type":"text"},{"code":"filter","type":"codeVoice"},{"type":"text","text":", are"},{"type":"text","text":" "},{"text":"implemented lazily.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"type":"topic","title":"ForkedMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/filter(_:)-1vis2":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"kind":"text","text":"("},{"text":"Predicate","preciseIdentifier":"s:10Foundation9PredicateV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/filter(_:)-1vis2","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-1vis2","title":"filter(_:)","abstract":[],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/elementsEqual(_:by:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elementsEqual"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/elementsequal(_:by:)","type":"topic","title":"elementsEqual(_:by:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this sequence and another"},{"type":"text","text":" "},{"type":"text","text":"sequence contain equivalent elements in the same order, using the given"},{"type":"text","text":" "},{"text":"predicate as the equivalence test.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formatted()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/formatted()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted()","title":"formatted()","abstract":[],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/reduce(_:_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/reduce(_:_:)","type":"topic","title":"reduce(_:_:)","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given closure."}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/compactMap(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/compactmap(_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compactMap(_:)","title":"compactMap(_:)","abstract":[{"type":"text","text":"Returns an array containing the non-"},{"code":"nil","type":"codeVoice"},{"text":" results of calling the given","type":"text"},{"text":" ","type":"text"},{"text":"transformation with each element of this sequence.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/allSatisfy(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/allSatisfy(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"allSatisfy","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/allsatisfy(_:)","type":"topic","title":"allSatisfy(_:)","abstract":[{"text":"Returns a Boolean value indicating whether every element of a sequence","type":"text"},{"text":" ","type":"text"},{"text":"satisfies a given predicate.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/first(where:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/first(where:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first(where:)","title":"first(where:)","abstract":[{"text":"Returns the first element of the sequence that satisfies the given","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"url":"\/documentation\/forkedmerge\/mergeablearray","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"title":"MergeableArray","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableArray"}],"abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"text":" ","type":"text"},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"text":" ","type":"text"},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"you should dedupe after every merge."},{"type":"text","text":" "},{"text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/elementsEqual(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"elementsEqual","kind":"identifier"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/elementsequal(_:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"elementsEqual(_:)","abstract":[{"text":"Returns a Boolean value indicating whether this sequence and another","type":"text"},{"text":" ","type":"text"},{"text":"sequence contain the same elements in the same order.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/map(_:)-8i05f":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> ["},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/map(_:)-8i05f","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-8i05f","title":"map(_:)","abstract":[{"text":"Returns an array containing the results of mapping the given closure","type":"text"},{"text":" ","type":"text"},{"text":"over the sequence’s elements.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined(separator:)-5xpf":{"type":"topic","abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"text":" ","type":"text"},{"text":"adding the given separator between each element.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separator"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"joined(separator:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"StringProtocol","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-5xpf","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-5xpf","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/shuffled()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shuffled"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/shuffled()","type":"topic","title":"shuffled()","abstract":[{"text":"Returns the elements of the sequence, shuffled.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/starts(with:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"starts","kind":"identifier"},{"kind":"text","text":"<"},{"text":"PossiblePrefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/starts(with:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:)","title":"starts(with:)","abstract":[{"text":"Returns a Boolean value indicating whether the initial elements of the","type":"text"},{"type":"text","text":" "},{"text":"sequence are the same as the elements in another sequence.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted(by:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/sorted(by:)","type":"topic","title":"sorted(by:)","abstract":[{"text":"Returns the elements of the sequence, sorted using the given predicate as","type":"text"},{"type":"text","text":" "},{"text":"the comparison between elements.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/contains(where:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/contains(where:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(where:)","title":"contains(where:)","abstract":[{"text":"Returns a Boolean value indicating whether the sequence contains an","type":"text"},{"type":"text","text":" "},{"text":"element that satisfies the given predicate.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined(separator:)-6mvci":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Separator"},{"text":">(","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s14JoinedSequenceV","text":"JoinedSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-6mvci","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"joined(separator:)","abstract":[{"text":"Returns the concatenated elements of this sequence of sequences,","type":"text"},{"type":"text","text":" "},{"text":"inserting the given separator between each element.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/starts(with:by:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"starts","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"starts(with:by:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the initial elements of the"},{"text":" ","type":"text"},{"type":"text","text":"sequence are equivalent to the elements in another sequence, using"},{"text":" ","type":"text"},{"text":"the given predicate as the equivalence test.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:by:)","url":"\/documentation\/forkedmerge\/mergeablearray\/starts(with:by:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/compare(_:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compare","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Comparator"},{"kind":"text","text":">("},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Compared","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"text":"Compared","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ComparisonResult","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSComparisonResult"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","title":"compare(_:_:)","abstract":[{"text":"If ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":" is ordered before ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" in the ordering described by the given"},{"text":" ","type":"text"},{"text":"sequence of ","type":"text"},{"code":"SortComparator","type":"codeVoice"},{"type":"text","text":"s"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/flatMap(_:)-7nexl":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-7nexl","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"]","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/flatmap(_:)-7nexl","type":"topic","title":"flatMap(_:)","abstract":[],"deprecated":true,"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/max(by:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/max(by:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max(by:)","title":"max(by:)","abstract":[{"text":"Returns the maximum element in the sequence, using the given predicate","type":"text"},{"type":"text","text":" "},{"text":"as the comparison between elements.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/publisher":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/publisher","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"publisher","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO8SequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"kind":"text","text":">"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/publisher","type":"topic","title":"publisher","abstract":[],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lexicographicallyPrecedes(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/lexicographicallyprecedes(_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:)","title":"lexicographicallyPrecedes(_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":" ","type":"text"},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the"},{"text":" ","type":"text"},{"type":"text","text":"less-than operator ("},{"type":"codeVoice","code":"<"},{"type":"text","text":") to compare elements."}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/forEach(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/forEach(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/foreach(_:)","type":"topic","title":"forEach(_:)","abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"text":" ","type":"text"},{"type":"text","text":"as a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop."}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/contains(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether the sequence contains the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given element."}],"title":"contains(_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(_:)","url":"\/documentation\/forkedmerge\/mergeablearray\/contains(_:)"}}}