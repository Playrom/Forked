{"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"},"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"Sequence Implementations","modules":[{"name":"ForkedMerge"}]},"kind":"article","sections":[],"topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lazy","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/publisher"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/allSatisfy(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compactMap(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/enumerated()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-1vis2","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-77qlu","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-6q035","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-7nexl","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/forEach(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-5xpf","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-8i05f","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(_:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(into:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled(using:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-745kq","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/withContiguousStorageIfAvailable(_:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations"]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/allSatisfy(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/allSatisfy(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"allSatisfy","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether every element of a sequence"},{"text":" ","type":"text"},{"text":"satisfies a given predicate.","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/allsatisfy(_:)","role":"symbol","title":"allSatisfy(_:)","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/max(by:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"max","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","abstract":[{"text":"Returns the maximum element in the sequence, using the given predicate","type":"text"},{"type":"text","text":" "},{"text":"as the comparison between elements.","type":"text"}],"role":"symbol","title":"max(by:)","url":"\/documentation\/forkedmerge\/mergeablearray\/max(by:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/shuffled()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled()","url":"\/documentation\/forkedmerge\/mergeablearray\/shuffled()","kind":"symbol","title":"shuffled()","type":"topic","abstract":[{"text":"Returns the elements of the sequence, shuffled.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffled"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"]"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/min()":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Returns the minimum element in the sequence.","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/min()","title":"min()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min()","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted()":{"title":"sorted()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted."}],"url":"\/documentation\/forkedmerge\/mergeablearray\/sorted()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted()"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/shuffled(using:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shuffled","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Returns the elements of the sequence, shuffled using the given generator"},{"type":"text","text":" "},{"text":"as a source for randomness.","type":"text"}],"role":"symbol","title":"shuffled(using:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled(using:)","url":"\/documentation\/forkedmerge\/mergeablearray\/shuffled(using:)","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/contains(_:)":{"type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence contains the"},{"type":"text","text":" "},{"text":"given element.","type":"text"}],"title":"contains(_:)","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/contains(_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/filter(_:)-1vis2":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-1vis2","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation9PredicateV","kind":"typeIdentifier","text":"Predicate"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"abstract":[],"url":"\/documentation\/forkedmerge\/mergeablearray\/filter(_:)-1vis2","role":"symbol","title":"filter(_:)","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lexicographicallyPrecedes(_:)":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the"},{"type":"text","text":" "},{"text":"less-than operator (","type":"text"},{"type":"codeVoice","code":"<"},{"type":"text","text":") to compare elements."}],"url":"\/documentation\/forkedmerge\/mergeablearray\/lexicographicallyprecedes(_:)","title":"lexicographicallyPrecedes(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherSequence"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]}},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/count(where:)":{"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"count"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/count(where:)","title":"count(where:)","abstract":[{"type":"text","text":"Returns the number of elements in the sequence that satisfy the given"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"role":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/enumerated()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/enumerated()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}],"url":"\/documentation\/forkedmerge\/mergeablearray\/enumerated()","role":"symbol","title":"enumerated()","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/elementsEqual(_:by:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/elementsequal(_:by:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this sequence and another"},{"text":" ","type":"text"},{"text":"sequence contain equivalent elements in the same order, using the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"predicate as the equivalence test."}],"type":"topic","title":"elementsEqual(_:by:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elementsEqual"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"OtherSequence"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/max()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"max","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max()","abstract":[{"text":"Returns the maximum element in the sequence.","type":"text"}],"type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/max()","role":"symbol","title":"max()"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/elementsEqual(_:)":{"title":"elementsEqual(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"elementsEqual","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherSequence"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:)","url":"\/documentation\/forkedmerge\/mergeablearray\/elementsequal(_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this sequence and another"},{"type":"text","text":" "},{"type":"text","text":"sequence contain the same elements in the same order."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/contains(where:)":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence contains an"},{"type":"text","text":" "},{"type":"text","text":"element that satisfies the given predicate."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(where:)","kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/contains(where:)","type":"topic","title":"contains(where:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted(using:)-745kq":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"<"},{"text":"Comparator","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given comparator"},{"type":"text","text":" "},{"type":"text","text":"to compare elements."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-745kq","title":"sorted(using:)","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-745kq"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formatted(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted(_:)","url":"\/documentation\/forkedmerge\/mergeablearray\/formatted(_:)","role":"symbol","title":"formatted(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11FormatStyleP0B6OutputQa","kind":"typeIdentifier","text":"FormatOutput"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/first(where:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/first(where:)","abstract":[{"type":"text","text":"Returns the first element of the sequence that satisfies the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"first","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","title":"first(where:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first(where:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined()","title":"joined()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s15FlattenSequenceV","kind":"typeIdentifier","text":"FlattenSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns the elements of this sequence of sequences, concatenated."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/joined()","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted(using:)-4ox5r":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given array of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SortComparator"},{"type":"text","text":"s to compare elements."}],"role":"symbol","title":"sorted(using:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":", "},{"text":"Comparator","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-4ox5r","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/compare(_:_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compare"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Comparator"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Comparator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ComparisonResult","preciseIdentifier":"c:@E@NSComparisonResult"}],"title":"compare(_:_:)","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is ordered before "},{"type":"codeVoice","code":"rhs"},{"text":" in the ordering described by the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence of "},{"type":"codeVoice","code":"SortComparator"},{"type":"text","text":"s"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/publisher":{"title":"publisher","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/publisher","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/publisher","role":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO8SequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/flatMap(_:)-7nexl":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-7nexl","title":"flatMap(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ElementOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"]"}],"abstract":[],"deprecated":true,"type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/flatmap(_:)-7nexl","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/withContiguousStorageIfAvailable(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withContiguousStorageIfAvailable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:SR","text":"UnsafeBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"title":"withContiguousStorageIfAvailable(_:)","abstract":[],"url":"\/documentation\/forkedmerge\/mergeablearray\/withcontiguousstorageifavailable(_:)","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/withContiguousStorageIfAvailable(_:)","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/forEach(_:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/foreach(_:)","kind":"symbol","abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"type":"codeVoice","code":"for"},{"text":"-","type":"text"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop."}],"type":"topic","title":"forEach(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/forEach(_:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formatted()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"formatted()","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/formatted()","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/map(_:)-8i05f":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"map(_:)","abstract":[{"type":"text","text":"Returns an array containing the results of mapping the given closure"},{"text":" ","type":"text"},{"text":"over the sequence’s elements.","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/map(_:)-8i05f","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-8i05f","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/min(by:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min(by:)","title":"min(by:)","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/min(by:)","kind":"symbol","role":"symbol","abstract":[{"text":"Returns the minimum element in the sequence, using the given predicate as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lexicographicallyPrecedes(_:by:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/lexicographicallyprecedes(_:by:)","title":"lexicographicallyPrecedes(_:by:)","abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"text":" ","type":"text"},{"text":"sequence in a lexicographical (dictionary) ordering, using the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate to compare elements."}],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:by:)","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined(separator:)-6mvci":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Separator","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"separator"},{"text":": ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s14JoinedSequenceV","text":"JoinedSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the concatenated elements of this sequence of sequences,"},{"type":"text","text":" "},{"type":"text","text":"inserting the given separator between each element."}],"title":"joined(separator:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}]},"role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-6mvci","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/sorted(by:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"sorted(by:)","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/sorted(by:)","type":"topic","abstract":[{"text":"Returns the elements of the sequence, sorted using the given predicate as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/filter(_:)-77qlu":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"title":"filter(_:)","abstract":[{"type":"text","text":"Returns an array containing, in order, the elements of the sequence"},{"text":" ","type":"text"},{"text":"that satisfy the given predicate.","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/filter(_:)-77qlu","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-77qlu","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/reduce(into:_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(into:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ()) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"title":"reduce(into:_:)","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/reduce(into:_:)","type":"topic","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given closure."}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/starts(with:)":{"kind":"symbol","title":"starts(with:)","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"starts"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Returns a Boolean value indicating whether the initial elements of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence are the same as the elements in another sequence."}],"type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/starts(with:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/starts(with:by:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"starts"},{"kind":"text","text":"<"},{"text":"PossiblePrefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"starts(with:by:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the initial elements of the"},{"text":" ","type":"text"},{"text":"sequence are equivalent to the elements in another sequence, using","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the given predicate as the equivalence test."}],"url":"\/documentation\/forkedmerge\/mergeablearray\/starts(with:by:)","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:by:)","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"title":"MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice — the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"text":" ","type":"text"},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/flatMap(_:)-6q035":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"title":"flatMap(_:)","abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"text":" ","type":"text"},{"type":"text","text":"given transformation with each element of this sequence."}],"url":"\/documentation\/forkedmerge\/mergeablearray\/flatmap(_:)-6q035","kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-6q035"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/compactMap(_:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/compactmap(_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compactMap(_:)","title":"compactMap(_:)","abstract":[{"type":"text","text":"Returns an array containing the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of calling the given"},{"type":"text","text":" "},{"type":"text","text":"transformation with each element of this sequence."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lazy":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lazy","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lazy","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12LazySequenceV","text":"LazySequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"lazy","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/lazy","type":"topic","abstract":[{"text":"A sequence containing the same elements as this sequence,","type":"text"},{"text":" ","type":"text"},{"text":"but on which some operations, such as ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":" and "},{"code":"filter","type":"codeVoice"},{"text":", are","type":"text"},{"type":"text","text":" "},{"text":"implemented lazily.","type":"text"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined(separator:)-5xpf":{"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"joined(separator:)","abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"text":"adding the given separator between each element.","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-5xpf","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-5xpf","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/reduce(_:_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"title":"reduce(_:_:)","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/reduce(_:_:)","type":"topic","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"text":"given closure.","type":"text"}],"kind":"symbol"}}}