{"metadata":{"extendedModule":"Swift","role":"symbol","symbolKind":"method","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Separator"},{"text":">(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s14JoinedSequenceV","kind":"typeIdentifier","text":"JoinedSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:STsST7ElementRpzrlE6joined9separators14JoinedSequenceVyxGqd___tSTRd__AA_AAQZAARtd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"joined(separator:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci"},"abstract":[{"text":"Returns the concatenated elements of this sequence of sequences,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"inserting the given separator between each element."}],"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-6mvci"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Separator"},{"text":">(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Separator"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"JoinedSequence","preciseIdentifier":"s:s14JoinedSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"separator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence to insert between each of this"},{"text":" ","type":"text"},{"text":"sequence’s elements.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The joined sequence of elements."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This example shows how an array of "},{"type":"codeVoice","code":"[Int]"},{"type":"text","text":" instances can be joined, using"},{"text":" ","type":"text"},{"type":"text","text":"another "},{"type":"codeVoice","code":"[Int]"},{"text":" instance as the separator:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let nestedNumbers = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","let joined = nestedNumbers.joined(separator: [-1, -2])","print(Array(joined))","\/\/ Prints \"[1, 2, 3, -1, -2, 4, 5, 6, -1, -2, 7, 8, 9]\""],"type":"codeListing"}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined(separator:)-6mvci":{"abstract":[{"type":"text","text":"Returns the concatenated elements of this sequence of sequences,"},{"text":" ","type":"text"},{"text":"inserting the given separator between each element.","type":"text"}],"title":"joined(separator:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"text":"<","kind":"text"},{"text":"Separator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Separator"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s14JoinedSequenceV","kind":"typeIdentifier","text":"JoinedSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-6mvci","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Sequence-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations","type":"topic","abstract":[],"url":"\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations","role":"collectionGroup","kind":"article","title":"Sequence Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"text":" ","type":"text"},{"text":"devices at the same time, after the merge, you will have the same word twice — the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"type":"text","text":"you should dedupe after every merge."},{"text":" ","type":"text"},{"text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"title":"MergeableArray","type":"topic","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"kind":"symbol","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}]}}}