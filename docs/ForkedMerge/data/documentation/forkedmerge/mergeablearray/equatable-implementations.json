{"kind":"article","metadata":{"role":"collectionGroup","roleHeading":"API Collection","title":"Equatable Implementations","modules":[{"name":"ForkedMerge"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/!=(_:_:)"],"title":"Operators","anchor":"Operators"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/equatable-implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Equatable-Implementations"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"role":"symbol","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"text":"The stress here is on values, because this array does not guarantee that uniqueness of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice â€” the value is","type":"text"},{"type":"text","text":" "},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"text":"This type is typically useful for strings in collaborative environments, and less useful for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"type":"text","text":" "},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"text":" ","type":"text"},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableArray","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"title":"MergeableArray","url":"\/documentation\/forkedmerge\/mergeablearray"},"doc://ForkedMerge/documentation/ForkedMerge":{"role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/!=(_:_:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/!=(_:_:)","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"title":"!=(_:_:)"}}}