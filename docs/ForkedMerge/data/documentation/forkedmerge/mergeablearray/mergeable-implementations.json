{"sections":[],"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-6fkpk"],"generated":true,"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/mergeable-implementations"]}],"metadata":{"roleHeading":"API Collection","title":"Mergeable Implementations","role":"collectionGroup","modules":[{"name":"ForkedMerge"}]},"kind":"article","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Mergeable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"text":" ","type":"text"},{"text":"devices at the same time, after the merge, you will have the same word twice â€” the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"type":"text","text":"you should dedupe after every merge."},{"text":" ","type":"text"},{"text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"title":"MergeableArray","type":"topic","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"kind":"symbol","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/merged(withSubordinate:commonAncestor:)-6fkpk":{"role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"merged(withSubordinate:commonAncestor:)","abstract":[{"text":"Default merge, when elements are not mergeable. Eg chars in a string","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","text":"MergeableArray"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","kind":"typeIdentifier","text":"MergeableArray"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","text":"MergeableArray","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/merged(withsubordinate:commonancestor:)-6fkpk","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-6fkpk"}}}