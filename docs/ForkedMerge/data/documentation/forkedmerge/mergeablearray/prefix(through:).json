{"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations"]]},"sections":[],"metadata":{"role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"text":"through","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"title":"prefix(through:)","roleHeading":"Instance Method","externalID":"s:SlsE6prefix7through11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/prefix(through:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"through","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"position","content":[{"type":"paragraph","inlineContent":[{"text":"The index of the last element to include in the","type":"text"},{"text":" ","type":"text"},{"text":"resulting subsequence. ","type":"text"},{"type":"codeVoice","code":"position"},{"type":"text","text":" must be a valid index of the collection"},{"type":"text","text":" "},{"type":"text","text":"that is not equal to the "},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":" property."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A subsequence up to, and including, the given position.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The resulting subsequence ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"includes"}]},{"text":" the element at the position","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified by the "},{"code":"through","type":"codeVoice"},{"text":" parameter.","type":"text"},{"type":"text","text":" "},{"text":"The following example searches for the index of the number ","type":"text"},{"type":"codeVoice","code":"40"},{"type":"text","text":" in an"},{"type":"text","text":" "},{"text":"array of integers, and then prints the prefix of the array up to, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including, that index:"}]},{"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(through: i))","}","\/\/ Prints \"[10, 20, 30, 40]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Using the ","type":"text"},{"type":"codeVoice","code":"prefix(through:)"},{"text":" method is equivalent to using a partial","type":"text"},{"type":"text","text":" "},{"text":"closed range as the collection’s subscript. The subscript notation is","type":"text"},{"text":" ","type":"text"},{"text":"preferred over ","type":"text"},{"type":"codeVoice","code":"prefix(through:)"},{"type":"text","text":"."}]},{"syntax":null,"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[...i])","}","\/\/ Prints \"[10, 20, 30, 40]\""],"type":"codeListing"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"name":"Complexity","style":"note"}],"kind":"content"}],"abstract":[{"text":"Returns a subsequence from the start of the collection through the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified position."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(through:)"},"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Collection-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","type":"topic","abstract":[],"kind":"article","title":"Collection Implementations","url":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"title":"MergeableArray","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"text":"This type is typically useful for strings in collaborative environments, and less useful for","type":"text"},{"type":"text","text":" "},{"text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you should dedupe after every merge."},{"type":"text","text":" "},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"type":"text","text":" "},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"text":"If you need a more compact representation, consider using a merger instead.","type":"text"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableArray"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/prefix(through:)":{"title":"prefix(through:)","url":"\/documentation\/forkedmerge\/mergeablearray\/prefix(through:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"through","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection through the"},{"type":"text","text":" "},{"text":"specified position.","type":"text"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(through:)"}}}