{"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","platforms":[{"introducedAt":"18.0","deprecated":false,"name":"iOS","beta":false,"unavailable":false},{"name":"macOS","unavailable":false,"beta":false,"introducedAt":"15.0","deprecated":false},{"introducedAt":"18.0","unavailable":false,"name":"tvOS","deprecated":false,"beta":false},{"beta":false,"name":"visionOS","deprecated":false,"introducedAt":"2.0","unavailable":false},{"name":"watchOS","introducedAt":"11.0","beta":false,"deprecated":false,"unavailable":false}],"title":"removingSubranges(_:)","externalID":"s:SlsE17removingSubrangesys18DiscontiguousSliceVyxGs8RangeSetVy5IndexQzGF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removingSubranges"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s8RangeSetV","kind":"typeIdentifier","text":"RangeSet"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"DiscontiguousSlice","kind":"typeIdentifier","preciseIdentifier":"s:s18DiscontiguousSliceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removingSubranges","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"subranges"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV","text":"RangeSet"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s18DiscontiguousSliceV","kind":"typeIdentifier","text":"DiscontiguousSlice"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"subranges","content":[{"inlineContent":[{"text":"A range set representing the indices of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements to remove."}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A collection of the elements that are not in ","type":"text"},{"type":"codeVoice","code":"subranges"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"For example, this code sample finds the indices of all the vowel","type":"text"},{"type":"text","text":" "},{"text":"characters in the string, and then retrieves a collection that omits","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"those characters."}]},{"syntax":null,"type":"codeListing","code":["let str = \"The rain in Spain stays mainly in the plain.\"","let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]","let vowelIndices = str.subranges(where: { vowels.contains($0) })","","let disemvoweled = str.removingSubranges(vowelIndices)","print(String(disemvoweled))","\/\/ Prints \"Th rn n Spn stys mnly n th pln.\""]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}],"name":"Complexity"}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations"]]},"abstract":[{"type":"text","text":"Returns a collection of the elements in this collection that are not"},{"type":"text","text":" "},{"type":"text","text":"represented by the given range set."}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/removingSubranges(_:)":{"type":"topic","title":"removingSubranges(_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)","abstract":[{"type":"text","text":"Returns a collection of the elements in this collection that are not"},{"type":"text","text":" "},{"type":"text","text":"represented by the given range set."}],"url":"\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removingSubranges","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s8RangeSetV","text":"RangeSet","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s18DiscontiguousSliceV","kind":"typeIdentifier","text":"DiscontiguousSlice"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Collection-Implementations":{"title":"Collection Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","url":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"text":" ","type":"text"},{"text":"devices at the same time, after the merge, you will have the same word twice â€” the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"type":"text","text":"you should dedupe after every merge."},{"text":" ","type":"text"},{"text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"title":"MergeableArray","type":"topic","role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"kind":"symbol","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}]}}}