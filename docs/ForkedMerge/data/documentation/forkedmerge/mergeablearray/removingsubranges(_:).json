{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removingSubranges","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"subranges","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"RangeSet","kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"DiscontiguousSlice","kind":"typeIdentifier","preciseIdentifier":"s:s18DiscontiguousSliceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"subranges","content":[{"type":"paragraph","inlineContent":[{"text":"A range set representing the indices of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements to remove."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A collection of the elements that are not in "},{"code":"subranges","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, this code sample finds the indices of all the vowel"},{"type":"text","text":" "},{"type":"text","text":"characters in the string, and then retrieves a collection that omits"},{"type":"text","text":" "},{"type":"text","text":"those characters."}]},{"type":"codeListing","syntax":null,"code":["let str = \"The rain in Spain stays mainly in the plain.\"","let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]","let vowelIndices = str.subranges(where: { vowels.contains($0) })","","let disemvoweled = str.removingSubranges(vowelIndices)","print(String(disemvoweled))","\/\/ Prints \"Th rn n Spn stys mnly n th pln.\""]},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","platforms":[{"introducedAt":"18.0","beta":false,"deprecated":false,"name":"iOS","unavailable":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"15.0","deprecated":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"18.0"},{"name":"visionOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"2.0"},{"name":"watchOS","deprecated":false,"introducedAt":"11.0","unavailable":false,"beta":false}],"title":"removingSubranges(_:)","externalID":"s:SlsE17removingSubrangesys18DiscontiguousSliceVyxGs8RangeSetVy5IndexQzGF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removingSubranges"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s8RangeSetV","kind":"typeIdentifier","text":"RangeSet"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s18DiscontiguousSliceV","text":"DiscontiguousSlice","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","extendedModule":"Swift","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}]},"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a collection of the elements in this collection that are not","type":"text"},{"type":"text","text":" "},{"text":"represented by the given range set.","type":"text"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Collection-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","type":"topic","kind":"article","title":"Collection Implementations","abstract":[],"role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"title":"MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice â€” the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"text":" ","type":"text"},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/removingSubranges(_:)":{"kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removingSubranges"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV","text":"RangeSet"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s18DiscontiguousSliceV","text":"DiscontiguousSlice"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)","abstract":[{"type":"text","text":"Returns a collection of the elements in this collection that are not"},{"text":" ","type":"text"},{"text":"represented by the given range set.","type":"text"}],"type":"topic","title":"removingSubranges(_:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","role":"collection"}}}