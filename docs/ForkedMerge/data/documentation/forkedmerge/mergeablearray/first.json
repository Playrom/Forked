{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"If the collection is empty, the value of this property is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50]","if let firstNumber = numbers.first {","    print(firstNumber)","}","\/\/ Prints \"10\""]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first"},"metadata":{"externalID":"s:SlsE5first7ElementQzSgvp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","title":"first","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}],"extendedModule":"Swift","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"first"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/first"]}],"kind":"symbol","abstract":[{"type":"text","text":"The first element of the collection."}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Collection-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","type":"topic","kind":"article","title":"Collection Implementations","abstract":[],"role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"title":"MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice â€” the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"text":" ","type":"text"},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/first":{"url":"\/documentation\/forkedmerge\/mergeablearray\/first","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"type":"text","text":"The first element of the collection."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first","title":"first","role":"symbol"}}}