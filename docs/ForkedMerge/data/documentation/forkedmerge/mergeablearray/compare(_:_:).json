{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"compare","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Comparator"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@E@NSComparisonResult","text":"ComparisonResult","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10Foundation14SortComparatorP","text":"SortComparator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element of the sequence of comparators specifies the primary"},{"type":"text","text":" "},{"type":"text","text":"comparator to be used in sorting the sequence’s elements. Any subsequent"},{"type":"text","text":" "},{"type":"text","text":"comparators are used to further refine the order of elements with equal"},{"type":"text","text":" "},{"text":"values.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"compare(_:_:)","externalID":"s:ST10FoundationE7compareySo18NSComparisonResultV8ComparedQyd___AFtAA14SortComparatorRd__7ElementQzRsd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"compare","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"},{"text":", ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Compared","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@E@NSComparisonResult","kind":"typeIdentifier","text":"ComparisonResult"}],"symbolKind":"method","platforms":[{"beta":false,"unavailable":false,"deprecated":false,"name":"iOS","introducedAt":"15.0"},{"introducedAt":"12.0","name":"macOS","deprecated":false,"unavailable":false,"beta":false},{"beta":false,"deprecated":false,"introducedAt":"15.0","name":"tvOS","unavailable":false},{"deprecated":false,"unavailable":false,"name":"watchOS","beta":false,"introducedAt":"8.0"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}],"extendedModule":"Swift"},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)"},"abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is ordered before "},{"code":"rhs","type":"codeVoice"},{"text":" in the ordering described by the given","type":"text"},{"type":"text","text":" "},{"text":"sequence of ","type":"text"},{"code":"SortComparator","type":"codeVoice"},{"text":"s","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","url":"\/documentation\/forkedmerge\/mergeablearray","title":"MergeableArray","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"text":" ","type":"text"},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"text":" ","type":"text"},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableArray","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/compare(_:_:)":{"title":"compare(_:_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"lhs"},{"text":" is ordered before ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" in the ordering described by the given"},{"type":"text","text":" "},{"type":"text","text":"sequence of "},{"type":"codeVoice","code":"SortComparator"},{"type":"text","text":"s"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compare"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Comparator"},{"kind":"text","text":">("},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Compared","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"kind":"text","text":") -> "},{"text":"ComparisonResult","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSComparisonResult"}],"role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Sequence-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations","title":"Sequence Implementations"},"doc://ForkedMerge/documentation/ForkedMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","role":"collection","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"url":"\/documentation\/forkedmerge","title":"ForkedMerge","kind":"symbol","type":"topic"}}}