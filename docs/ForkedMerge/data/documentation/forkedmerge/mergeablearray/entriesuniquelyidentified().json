{"metadata":{"externalID":"s:11ForkedMerge14MergeableArrayVAAs12IdentifiableRzrlE25entriesUniquelyIdentifiedACyxGyF","role":"symbol","roleHeading":"Instance Method","title":"entriesUniquelyIdentified()","extendedModule":"ForkedMerge","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Identifiable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"name":"ForkedMerge"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"entriesUniquelyIdentified"},{"kind":"text","text":"() -> "},{"text":"MergeableArray","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"kind":"symbol","abstract":[{"text":"Returns a new array with entries uniquely identified, keeping only the most recently modified instance of each uniquely identified element.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The relative order of the remaining elements is preserved."}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/entriesuniquelyidentified()"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"entriesUniquelyIdentified","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"MergeableArray","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/entriesUniquelyIdentified()","interfaceLanguage":"swift"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","kind":"symbol","title":"MergeableArray","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"text":"The stress here is on values, because this array does not guarantee that uniqueness of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice â€” the value is"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"text":"This type is typically useful for strings in collaborative environments, and less useful for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableArray","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/entriesUniquelyIdentified()":{"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Returns a new array with entries uniquely identified, keeping only the most recently modified instance of each uniquely identified element."},{"type":"text","text":" "},{"text":"The relative order of the remaining elements is preserved.","type":"text"}],"title":"entriesUniquelyIdentified()","url":"\/documentation\/forkedmerge\/mergeablearray\/entriesuniquelyidentified()","type":"topic","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/entriesUniquelyIdentified()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"entriesUniquelyIdentified"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","kind":"typeIdentifier","text":"MergeableArray"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}]}}}