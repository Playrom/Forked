{"kind":"symbol","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"count"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"where","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"inlineContent":[{"text":"A closure that takes each element of the sequence","type":"text"},{"text":" ","type":"text"},{"text":"as its argument and returns a Boolean value indicating whether","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the element should be included in the count."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The number of elements in the sequence that satisfy the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this method to count the number of elements that pass a test."},{"text":" ","type":"text"},{"type":"text","text":"The following example finds the number of names that are fewer than"},{"type":"text","text":" "},{"type":"text","text":"five characters long:"}]},{"code":["let names = [\"Jacqueline\", \"Ian\", \"Amy\", \"Juan\", \"Soroush\", \"Tiffany\"]","let shortNameCount = names.count(where: { $0.count < 5 })","\/\/ shortNameCount == 3"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"To find the number of times a specific element appears in the sequence,","type":"text"},{"type":"text","text":" "},{"text":"use the equal to operator (","type":"text"},{"type":"codeVoice","code":"=="},{"type":"text","text":") in the closure to test for a match."}]},{"code":["let birds = [\"duck\", \"duck\", \"duck\", \"duck\", \"goose\"]","let duckCount = birds.count(where: { $0 == \"duck\" })","\/\/ duckCount == 4"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The sequence must be finite."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/count(where:)"]}],"abstract":[{"type":"text","text":"Returns the number of elements in the sequence that satisfy the given"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"count","kind":"identifier"},{"kind":"text","text":"<"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"where","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","symbolKind":"method","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}],"externalID":"s:STsE5count5whereSiSb7ElementQzqd__YKXE_tqd__YKs5ErrorRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"count(where:)","roleHeading":"Instance Method"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/count(where:)":{"role":"symbol","title":"count(where:)","url":"\/documentation\/forkedmerge\/mergeablearray\/count(where:)","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","abstract":[{"text":"Returns the number of elements in the sequence that satisfy the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"predicate."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"count"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"type":"topic","url":"\/documentation\/forkedmerge","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Sequence-Implementations":{"title":"Sequence Implementations","url":"\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"type":"topic","title":"MergeableArray","url":"\/documentation\/forkedmerge\/mergeablearray","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"text":" ","type":"text"},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice â€” the value is"},{"type":"text","text":" "},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"text":"This type is typically useful for strings in collaborative environments, and less useful for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"type":"text","text":"you should dedupe after every merge."},{"type":"text","text":" "},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"text":" ","type":"text"},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableArray","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}]}}}