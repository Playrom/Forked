{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropLast(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-6sfhc","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(before:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-75cc1","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reversed()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(_:)"],"anchor":"Instance-Methods"}],"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/bidirectionalcollection-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/BidirectionalCollection-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"metadata":{"roleHeading":"API Collection","modules":[{"name":"ForkedMerge"}],"title":"BidirectionalCollection Implementations","role":"collectionGroup"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lastIndex(of:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/lastindex(of:)","title":"lastIndex(of:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastIndex"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(of:)","abstract":[{"type":"text","text":"Returns the last index where the specified value appears in the"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/joined(separator:)-75cc1":{"title":"joined(separator:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"joined","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"adding the given separator between each element."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-75cc1","url":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-75cc1","type":"topic","role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/difference(from:by:)":{"title":"difference(from:by:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"difference","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns the difference needed to produce this collection’s ordered","type":"text"},{"text":" ","type":"text"},{"text":"elements from the given collection, using the given predicate as an","type":"text"},{"type":"text","text":" "},{"text":"equivalence test.","type":"text"}],"role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/difference(from:by:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:by:)","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/formIndex(before:)":{"type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/formindex(before:)","abstract":[],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"before","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(before:)","title":"formIndex(before:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","kind":"symbol","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"title":"MergeableArray","abstract":[{"text":"Represents a CRDT for an array of values, such as characters in a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"text":"This type is typically useful for strings in collaborative environments, and less useful for","type":"text"},{"type":"text","text":" "},{"text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you should dedupe after every merge."},{"type":"text","text":" "},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"type":"text","text":" "},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"text":"If you need a more compact representation, consider using a merger instead.","type":"text"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableArray"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"kind":"identifier","text":"MergeableArray"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/suffix(_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(_:)","kind":"symbol","type":"topic","title":"suffix(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/suffix(_:)","abstract":[{"type":"text","text":"Returns a subsequence, up to the given maximum length, containing the"},{"type":"text","text":" "},{"type":"text","text":"final elements of the collection."}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/reversed()":{"title":"reversed()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reversed","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s18ReversedCollectionV","text":"ReversedCollection","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a view presenting the elements of the collection in reverse"},{"type":"text","text":" "},{"text":"order.","type":"text"}],"role":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray\/reversed()","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reversed()","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lastIndex(where:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(where:)","url":"\/documentation\/forkedmerge\/mergeablearray\/lastindex(where:)","abstract":[{"type":"text","text":"Returns the index of the last element in the collection that matches the"},{"type":"text","text":" "},{"text":"given predicate.","type":"text"}],"title":"lastIndex(where:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":"?","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/difference(from:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/difference(from:)","title":"difference(from:)","abstract":[{"text":"Returns the difference needed to produce this collection’s ordered","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements from the given collection."}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:)","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/firstRange(of:)-6sfhc":{"url":"\/documentation\/forkedmerge\/mergeablearray\/firstrange(of:)-6sfhc","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstRange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":">?","kind":"text"}],"title":"firstRange(of:)","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-6sfhc","abstract":[{"text":"Finds and returns the range of the first occurrence of a given collection","type":"text"},{"type":"text","text":" "},{"type":"text","text":"within this collection."}],"kind":"symbol","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/last(where:)":{"abstract":[{"text":"Returns the last element of the sequence that satisfies the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"last"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}],"role":"symbol","title":"last(where:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last(where:)","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/last(where:)","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/dropLast(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dropLast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/droplast(_:)","title":"dropLast(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropLast(_:)","abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"text":" ","type":"text"},{"type":"text","text":"elements."}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/last":{"url":"\/documentation\/forkedmerge\/mergeablearray\/last","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"last"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The last element of the collection."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last","role":"symbol","kind":"symbol","title":"last","type":"topic"}}}