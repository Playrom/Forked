{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"]]},"metadata":{"externalID":"s:11ForkedMerge08PropertyB0O019arrayOfIdentifiableB0yA2CmF","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}],"title":"PropertyMerge.arrayOfIdentifiableMerge","role":"symbol","roleHeading":"Case","modules":[{"name":"ForkedMerge"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge"]}],"abstract":[{"text":"Will merge as an array of values. Elements must be Equatable and","type":"text"},{"type":"text","text":" "},{"text":"Identifiable. It will ensure that there are no duplicated identifiers following","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a merge. When there is a conflict, it will"},{"text":" ","type":"text"},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"type":"text","text":" "},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"type":"text","text":" "},{"text":"Guarantees uniqueness of identifiers after merge, but does not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"type":"text","text":" "},{"text":"property.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}]}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","url":"\/documentation\/forkedmerge","type":"topic","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"url":"\/documentation\/forkedmerge\/propertymerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","kind":"symbol","abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}],"title":"PropertyMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"kind":"symbol","title":"PropertyMerge.arrayOfIdentifiableMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","abstract":[{"text":"Will merge as an array of values. Elements must be Equatable and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"text":" ","type":"text"},{"type":"text","text":"a merge. When there is a conflict, it will"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"text":" ","type":"text"},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"text":" ","type":"text"},{"text":"property.","type":"text"}]}}}