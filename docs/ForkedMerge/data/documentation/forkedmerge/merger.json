{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Merger","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/merger"]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"modules":[{"name":"ForkedMerge"}],"title":"Merger","symbolKind":"protocol","role":"symbol","externalID":"s:11ForkedMerge6MergerP","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Merger"}],"navigatorTitle":[{"text":"Merger","kind":"identifier"}]},"kind":"symbol","abstract":[{"text":"A merger is a type that applies a merging algorithm to merge two values together.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"text":"simple most recent edit wins, to more advanced CRDT based approaches that use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"relationshipsSections":[{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"]}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T"],"generated":true,"anchor":"Associated-Types","title":"Associated Types"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)"],"generated":true,"title":"Instance Methods"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"}],"abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/setmerger","title":"SetMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger"},"doc://ForkedMerge/documentation/ForkedMerge/Merger/merge(_:withSubordinate:commonAncestor:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withSubordinate"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"}],"type":"topic","required":true,"url":"\/documentation\/forkedmerge\/merger\/merge(_:withsubordinate:commonancestor:)","title":"merge(_:withSubordinate:commonAncestor:)","role":"symbol","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","type":"topic","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"url":"\/documentation\/forkedmerge\/arraymerger","navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayMerger"}],"kind":"symbol","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"title":"ArrayMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","type":"topic","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"title":"ArrayOfIdentifiableMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","type":"topic","navigatorTitle":[{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/Merger/T":{"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T","kind":"symbol","required":true,"title":"T","url":"\/documentation\/forkedmerge\/merger\/t","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"T","kind":"identifier"}],"abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/DictionaryMerger":{"abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"kind":"symbol","title":"DictionaryMerger","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DictionaryMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/dictionarymerger","type":"topic","navigatorTitle":[{"text":"DictionaryMerger","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","role":"symbol","kind":"symbol","title":"Merger","url":"\/documentation\/forkedmerge\/merger","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Merger","kind":"identifier"}],"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"type":"text","text":" "},{"text":"The values are typically of a simple type. The algorithm could be anything, from a","type":"text"},{"text":" ","type":"text"},{"text":"simple most recent edit wins, to more advanced CRDT based approaches that use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}]},"doc://ForkedMerge/documentation/ForkedMerge/TextMerger":{"navigatorTitle":[{"text":"TextMerger","kind":"identifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/forkedmerge\/textmerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextMerger"}],"title":"TextMerger"}}}