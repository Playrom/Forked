{"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Merger","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/forkedmerge\/merger"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T"],"title":"Associated Types","anchor":"Associated-Types"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/init()"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)"],"title":"Instance Methods","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"ForkedMerge"}],"externalID":"s:11ForkedMerge6MergerP","symbolKind":"protocol","title":"Merger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Merger","kind":"identifier"}],"roleHeading":"Protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Merger"}]},"relationshipsSections":[{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"],"kind":"relationships"}],"abstract":[{"text":"A merger is a type that applies a merging algorithm to merge two values together.","type":"text"},{"type":"text","text":" "},{"text":"The values are typically of a simple type. The algorithm could be anything, from a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"sections":[],"kind":"symbol","references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","role":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"kind":"symbol","title":"ArrayOfIdentifiableMerger","abstract":[{"text":"Merges an array, ensuring that the result has elements with unqiue identifiers.","type":"text"}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/Merger/init()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/merger\/init()","required":true,"title":"init()"},"doc://ForkedMerge/documentation/ForkedMerge/DictionaryMerger":{"kind":"symbol","url":"\/documentation\/forkedmerge\/dictionarymerger","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DictionaryMerger","kind":"identifier"}],"type":"topic","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"navigatorTitle":[{"text":"DictionaryMerger","kind":"identifier"}],"title":"DictionaryMerger"},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"title":"SetMerger","type":"topic","navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/setmerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"title":"Merger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Merger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/merger","kind":"symbol","role":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","title":"ArrayMerger","type":"topic","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"role":"symbol","navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/arraymerger","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArrayMerger","kind":"identifier"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}]},"doc://ForkedMerge/documentation/ForkedMerge/TextMerger":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger","title":"TextMerger","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"text":"TextMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/textmerger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextMerger"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/Merger/T":{"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"T"}],"required":true,"title":"T","url":"\/documentation\/forkedmerge\/merger\/t"},"doc://ForkedMerge/documentation/ForkedMerge/Merger/merge(_:withSubordinate:commonAncestor:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"kind":"text","text":", "},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"}],"type":"topic","title":"merge(_:withSubordinate:commonAncestor:)","required":true,"role":"symbol","url":"\/documentation\/forkedmerge\/merger\/merge(_:withsubordinate:commonancestor:)","abstract":[],"kind":"symbol"}}}