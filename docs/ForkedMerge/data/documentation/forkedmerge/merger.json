{"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"type":"text","text":" "},{"type":"text","text":"diffing against a common ancestor."}],"topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T"],"title":"Associated Types","generated":true,"anchor":"Associated-Types"},{"anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/init()"],"title":"Initializers","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)"],"anchor":"Instance-Methods","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"],"type":"conformingTypes","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Merger","kind":"identifier"}]}]}],"variants":[{"paths":["\/documentation\/forkedmerge\/merger"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","interfaceLanguage":"swift"},"metadata":{"title":"Merger","externalID":"s:11ForkedMerge6MergerP","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Merger"}],"modules":[{"name":"ForkedMerge"}],"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Merger"}],"roleHeading":"Protocol"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/DictionaryMerger":{"title":"DictionaryMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","url":"\/documentation\/forkedmerge\/dictionarymerger","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DictionaryMerger","kind":"identifier"}],"navigatorTitle":[{"text":"DictionaryMerger","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"kind":"symbol","title":"SetMerger","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SetMerger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","type":"topic","url":"\/documentation\/forkedmerge\/setmerger","navigatorTitle":[{"kind":"identifier","text":"SetMerger"}]},"doc://ForkedMerge/documentation/ForkedMerge/Merger/T":{"abstract":[],"url":"\/documentation\/forkedmerge\/merger\/t","required":true,"title":"T","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/Merger/init()":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/init()","url":"\/documentation\/forkedmerge\/merger\/init()","title":"init()","type":"topic","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"required":true},"doc://ForkedMerge/documentation/ForkedMerge/Merger/merge(_:withSubordinate:commonAncestor:)":{"abstract":[],"url":"\/documentation\/forkedmerge\/merger\/merge(_:withsubordinate:commonancestor:)","required":true,"title":"merge(_:withSubordinate:commonAncestor:)","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"kind":"text","text":", "},{"text":"withSubordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"}],"kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayMerger"}],"title":"ArrayMerger","kind":"symbol","url":"\/documentation\/forkedmerge\/arraymerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayMerger"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/TextMerger":{"url":"\/documentation\/forkedmerge\/textmerger","type":"topic","abstract":[],"title":"TextMerger","role":"symbol","navigatorTitle":[{"text":"TextMerger","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TextMerger","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"kind":"symbol","url":"\/documentation\/forkedmerge\/merger","title":"Merger","abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"type":"text","text":" "},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"text":"simple most recent edit wins, to more advanced CRDT based approaches that use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"diffing against a common ancestor."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Merger","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","kind":"symbol","abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"title":"ArrayOfIdentifiableMerger","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}]}}}