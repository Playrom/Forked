{"abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"metadata":{"navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayMerger","kind":"identifier"}],"role":"symbol","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"ForkedMerge"}],"title":"ArrayMerger","externalID":"s:11ForkedMerge11ArrayMergerV"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()"],"anchor":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"kind":"relationships","title":"Conforms To"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"variants":[{"paths":["\/documentation\/forkedmerge\/arraymerger"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayMerger"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}]},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger/merge(_:withSubordinate:commonAncestor:)":{"type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"], "},{"text":"withSubordinate","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"merge(_:withSubordinate:commonAncestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)","kind":"symbol","url":"\/documentation\/forkedmerge\/arraymerger\/merge(_:withsubordinate:commonancestor:)","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","title":"ArrayMerger","type":"topic","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"role":"symbol","navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/arraymerger","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArrayMerger","kind":"identifier"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"title":"Merger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Merger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/merger","kind":"symbol","role":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger/init()":{"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"abstract":[],"url":"\/documentation\/forkedmerge\/arraymerger\/init()","kind":"symbol","title":"init()","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()","type":"topic","role":"symbol"}}}