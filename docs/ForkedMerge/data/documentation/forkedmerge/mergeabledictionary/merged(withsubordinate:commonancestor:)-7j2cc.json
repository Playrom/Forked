{"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"If the values are themselves Mergeable, but not conflict-free, we can only use 3-way merge with common ancestor."},{"type":"text","text":" "},{"type":"text","text":"You get a recursive merge, as the dictionary merges, but also the values in the dictionary"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeabledictionary\/merged(withsubordinate:commonancestor:)-7j2cc"]}],"metadata":{"title":"merged(withSubordinate:commonAncestor:)","extendedModule":"ForkedMerge","role":"symbol","externalID":"s:11ForkedMerge19MergeableDictionaryVAA0A00C0R_rlE6merged15withSubordinate14commonAncestorACyxq_GAI_AItKF","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merged"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MergeableDictionary","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","text":"MergeableDictionary"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","text":"MergeableDictionary","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"modules":[{"name":"ForkedMerge"}],"roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/merged(withSubordinate:commonAncestor:)-7j2cc","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"MergeableDictionary","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MergeableDictionary","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","text":"MergeableDictionary","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableDictionary":{"url":"\/documentation\/forkedmerge\/mergeabledictionary","type":"topic","abstract":[{"type":"text","text":"Represents a mergable type for a dictionary of values."},{"type":"text","text":" "},{"type":"text","text":"Uses a CRDT algorithm."}],"title":"MergeableDictionary","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableDictionary"}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableDictionary","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"title":"ForkedMerge","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","role":"collection"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableDictionary/merged(withSubordinate:commonAncestor:)-7j2cc":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/merged(withSubordinate:commonAncestor:)-7j2cc","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeabledictionary\/merged(withsubordinate:commonancestor:)-7j2cc","title":"merged(withSubordinate:commonAncestor:)","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MergeableDictionary","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","kind":"typeIdentifier","text":"MergeableDictionary"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","text":"MergeableDictionary"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"If the values are themselves Mergeable, but not conflict-free, we can only use 3-way merge with common ancestor."},{"text":" ","type":"text"},{"text":"You get a recursive merge, as the dictionary merges, but also the values in the dictionary","type":"text"}]}}}