[{"kind":"org.swift.docc.kind.initializer","taskGroups":[],"usr":"s:11ForkedMerge15PropertyBackingO8rawValueACSgSS_tcfc","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/init(rawValue:)","availableLanguages":["swift"],"fragments":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"path":"\/documentation\/forkedmerge\/propertybacking\/init(rawvalue:)","title":"init(rawValue:)"},{"usr":"s:11ForkedMerge14MergeableArrayV10startIndexSivp","path":"\/documentation\/forkedmerge\/mergeablearray\/startindex","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startIndex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"language":"swift","kind":"org.swift.docc.kind.instanceProperty","availableLanguages":["swift"],"title":"startIndex","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/startIndex","taskGroups":[]},{"taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmingPrefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/trimmingprefix(while:)","language":"swift","availableLanguages":["swift"],"platforms":[{"beta":false,"deprecated":false,"name":"iOS","unavailable":false,"introducedAt":"16.0"},{"unavailable":false,"name":"macOS","introducedAt":"13.0","deprecated":false,"beta":false},{"name":"tvOS","beta":false,"introducedAt":"16.0","deprecated":false,"unavailable":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"9.0"}],"kind":"org.swift.docc.kind.instanceMethod","title":"trimmingPrefix(while:)","usr":"s:Sl17_StringProcessingE14trimmingPrefix5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"taskGroups":[],"path":"\/documentation\/forkedmerge\/mergeablearray\/indices(where:)","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","title":"indices(where:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(where:)","abstract":[{"type":"text","text":"Returns the indices of all the elements that match the given predicate."}],"platforms":[{"introducedAt":"18.0","beta":false,"unavailable":false,"name":"iOS","deprecated":false},{"introducedAt":"15.0","beta":false,"deprecated":false,"unavailable":false,"name":"macOS"},{"name":"tvOS","introducedAt":"18.0","deprecated":false,"unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"2.0","name":"visionOS","unavailable":false,"beta":false},{"introducedAt":"11.0","unavailable":false,"beta":false,"deprecated":false,"name":"watchOS"}],"usr":"s:SlsE7indices5wheres8RangeSetVy5IndexQzGSb7ElementQzKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"indices"},{"kind":"text","text":"("},{"text":"where","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"RangeSet","kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":">","kind":"text"}],"language":"swift"},{"abstract":[{"type":"text","text":"Returns a new array with entries uniquely identified, keeping only the most recently modified instance of each uniquely identified element."},{"text":" ","type":"text"},{"type":"text","text":"The relative order of the remaining elements is preserved."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"entriesUniquelyIdentified"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","text":"MergeableArray","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/entriesUniquelyIdentified()","title":"entriesUniquelyIdentified()","language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/entriesuniquelyidentified()","availableLanguages":["swift"],"usr":"s:11ForkedMerge14MergeableArrayVAAs12IdentifiableRzrlE25entriesUniquelyIdentifiedACyxGyF","kind":"org.swift.docc.kind.instanceMethod"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/min(by:)","taskGroups":[],"language":"swift","abstract":[{"type":"text","text":"Returns the minimum element in the sequence, using the given predicate as"},{"text":" ","type":"text"},{"text":"the comparison between elements.","type":"text"}],"fragments":[{"text":"@warn_unqualified_access","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"min"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"text":"areInIncreasingOrder","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min(by:)","usr":"s:STsE3min2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"min(by:)"},{"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init(dictionaryLiteral:)"],"title":"Initializers"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/ExpressibleByDictionaryLiteral-Implementations","language":"swift","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeabledictionary\/expressiblebydictionaryliteral-implementations","kind":"org.swift.docc.kind.collectionGroup","title":"ExpressibleByDictionaryLiteral Implementations"},{"usr":"s:11ForkedMerge14MergeableArrayV6merged15withSubordinate14commonAncestorACyxGAG_AGtKF","abstract":[{"type":"text","text":"Default merge, when elements are not mergeable. Eg chars in a string"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/merged(withsubordinate:commonancestor:)-6fkpk","taskGroups":[],"title":"merged(withSubordinate:commonAncestor:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"kind":"text","text":"("},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MergeableArray","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MergeableArray","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"MergeableArray","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-6fkpk","availableLanguages":["swift"]},{"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedMerge12MergeableSetV","availableLanguages":["swift"],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/!=(_:_:)","title":"!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"language":"swift","kind":"org.swift.docc.kind.operator","taskGroups":[],"path":"\/documentation\/forkedmerge\/mergeableset\/!=(_:_:)"},{"abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"text":" ","type":"text"},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"code":"Merger","type":"codeVoice"},{"type":"text","text":"."}],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","availableLanguages":["swift"],"kind":"org.swift.docc.kind.enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"title":"PropertyMerge","usr":"s:11ForkedMerge08PropertyB0O","taskGroups":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"]},{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"title":"Default Implementations"}],"path":"\/documentation\/forkedmerge\/propertymerge"},{"title":"last","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"last","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"? { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceProperty","path":"\/documentation\/forkedmerge\/mergeablearray\/last","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last","language":"swift","abstract":[{"type":"text","text":"The last element of the collection."}],"usr":"s:SKsE4last7ElementQzSgvp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"title":"suffix(_:)","availableLanguages":["swift"],"taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(_:)","abstract":[{"text":"Returns a subsequence, up to the given maximum length, containing the","type":"text"},{"text":" ","type":"text"},{"text":"final elements of the collection.","type":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/suffix(_:)","language":"swift","usr":"s:SKsE6suffixy11SubSequenceQzSiF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"maxLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"kind":"org.swift.docc.kind.instanceMethod"},{"path":"\/documentation\/forkedmerge\/mergeableset\/merged(withsubordinate:commonancestor:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/merged(withSubordinate:commonAncestor:)","availableLanguages":["swift"],"taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"kind":"text","text":"("},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge12MergeableSetV","kind":"typeIdentifier","text":"MergeableSet"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge12MergeableSetV","kind":"typeIdentifier","text":"MergeableSet"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"MergeableSet","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge12MergeableSetV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"merged(withSubordinate:commonAncestor:)","language":"swift","kind":"org.swift.docc.kind.instanceMethod","usr":"s:11ForkedMerge12MergeableSetV6merged15withSubordinate14commonAncestorACyxGAG_AGtKF"},{"kind":"org.swift.docc.kind.collectionGroup","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","path":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","language":"swift","taskGroups":[{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/endIndex","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/isEmpty","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/startIndex","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/underestimatedCount"]},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/drop(while:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropFirst(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-8xuqu","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:limitedBy:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(after:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(after:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/makeIterator()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-4ccaf","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(through:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(upTo:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(while:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement(using:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/ranges(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(separator:maxSplits:omittingEmptySubsequences:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(from:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(while:)"]},{"title":"Subscripts","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/subscript(_:)"]}],"availableLanguages":["swift"],"title":"Collection Implementations"},{"path":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","availableLanguages":["swift"],"usr":"s:11ForkedMerge08PropertyB0O8rawValueACSgSS_tcfc","fragments":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"org.swift.docc.kind.initializer","taskGroups":[],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","title":"init(rawValue:)"},{"title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/propertybacking\/!=(_:_:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/!=(_:_:)","taskGroups":[],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedMerge15PropertyBackingO","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"language":"swift","kind":"org.swift.docc.kind.operator"},{"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/!=(_:_:)","language":"swift","title":"!=(_:_:)","kind":"org.swift.docc.kind.operator","availableLanguages":["swift"],"taskGroups":[]},{"fragments":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Dictionary","preciseIdentifier":"s:SD"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"availableLanguages":["swift"],"title":"init(_:)","taskGroups":[],"usr":"s:11ForkedMerge19MergeableDictionaryVyACyxq_GSDyxq_Gcfc","language":"swift","path":"\/documentation\/forkedmerge\/mergeabledictionary\/init(_:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init(_:)","kind":"org.swift.docc.kind.initializer"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci","usr":"s:STsST7ElementRpzrlE6joined9separators14JoinedSequenceVyxGqd___tSTRd__AA_AAQZAARtd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"joined(separator:)","abstract":[{"type":"text","text":"Returns the concatenated elements of this sequence of sequences,"},{"type":"text","text":" "},{"text":"inserting the given separator between each element.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"language":"swift","taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Separator"},{"kind":"text","text":">("},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"text":"Separator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"JoinedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s14JoinedSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-6mvci"},{"availableLanguages":["swift"],"title":"endIndex","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/endIndex","kind":"org.swift.docc.kind.instanceProperty","usr":"s:11ForkedMerge14MergeableArrayV8endIndexSivp","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endIndex","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/endindex","taskGroups":[]},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(while:)","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"usr":"s:SlsE6prefix5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"title":"prefix(while:)","taskGroups":[],"path":"\/documentation\/forkedmerge\/mergeablearray\/prefix(while:)","abstract":[{"type":"text","text":"Returns a subsequence containing the initial elements until "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"code":"false","type":"codeVoice"},{"text":" and skipping the remaining elements.","type":"text"}],"language":"swift"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/contains(_:)","title":"contains(_:)","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"path":"\/documentation\/forkedmerge\/mergeableset\/contains(_:)","taskGroups":[],"language":"swift","usr":"s:11ForkedMerge12MergeableSetV8containsySbxF"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/starts(with:)","usr":"s:STsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"starts"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"possiblePrefix"},{"text":": ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":" == ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"}],"title":"starts(with:)","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the initial elements of the"},{"type":"text","text":" "},{"text":"sequence are the same as the elements in another sequence.","type":"text"}],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:)","availableLanguages":["swift"],"taskGroups":[]},{"title":"init()","kind":"org.swift.docc.kind.initializer","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"init"},{"text":"()","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init()","taskGroups":[],"usr":"s:11ForkedMerge14MergeableArrayVACyxGycfc","path":"\/documentation\/forkedmerge\/mergeablearray\/init()","language":"swift"},{"path":"\/documentation\/forkedmerge\/mergeabledictionary\/mergeable-implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/Mergeable-Implementations","language":"swift","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/merged(withSubordinate:commonAncestor:)-2fr3y"],"title":"Instance Methods"}],"title":"Mergeable Implementations","kind":"org.swift.docc.kind.collectionGroup","availableLanguages":["swift"]},{"title":"difference(from:)","availableLanguages":["swift"],"platforms":[{"introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false,"name":"iOS"},{"unavailable":false,"deprecated":false,"introducedAt":"10.15","name":"macOS","beta":false},{"deprecated":false,"name":"tvOS","unavailable":false,"introducedAt":"13.0","beta":false},{"name":"watchOS","beta":false,"deprecated":false,"introducedAt":"6.0","unavailable":false}],"taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"text":"CollectionDifference","kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BidirectionalCollection","kind":"typeIdentifier","preciseIdentifier":"s:SK"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"}],"usr":"s:SKsSQ7ElementRpzrlE10difference4froms20CollectionDifferenceVyABGqd___tSKRd__AAQyd__ABRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"text":" ","type":"text"},{"text":"elements from the given collection.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/difference(from:)","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:)"},{"title":"flatMap(_:)","usr":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-6q035","kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/flatmap(_:)-6q035","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","kind":"typeIdentifier","text":"Sequence"}],"availableLanguages":["swift"],"abstract":[{"text":"Returns an array containing the concatenated results of calling the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given transformation with each element of this sequence."}],"language":"swift","taskGroups":[]},{"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"after","kind":"externalParam"},{"kind":"text","text":" "},{"text":"i","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":")"}],"language":"swift","abstract":[{"text":"Replaces the given index with its successor.","type":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/formindex(after:)","usr":"s:SlsE9formIndex5aftery0B0Qzz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"formIndex(after:)","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(after:)"},{"abstract":[{"text":"Returns a random element of the collection.","type":"text"}],"usr":"s:SlsE13randomElement0B0QzSgyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"randomElement","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"title":"randomElement()","path":"\/documentation\/forkedmerge\/mergeablearray\/randomelement()","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement()","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","availableLanguages":["swift"]},{"usr":"s:SlsE6prefixy11SubSequenceQzSiF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","path":"\/documentation\/forkedmerge\/mergeablearray\/prefix(_:)","language":"swift","abstract":[{"text":"Returns a subsequence, up to the specified maximum length, containing","type":"text"},{"text":" ","type":"text"},{"text":"the initial elements of the collection.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(_:)","taskGroups":[],"title":"prefix(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"maxLength","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"availableLanguages":["swift"]},{"kind":"org.swift.docc.kind.instanceMethod","usr":"s:Sl17_StringProcessingSQ7ElementRpzrlE14trimmingPrefixy11SubSequenceQzqd__STRd__ABQyd__ACRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","platforms":[{"introducedAt":"16.0","unavailable":false,"beta":false,"name":"iOS","deprecated":false},{"name":"macOS","beta":false,"unavailable":false,"introducedAt":"13.0","deprecated":false},{"introducedAt":"16.0","beta":false,"deprecated":false,"name":"tvOS","unavailable":false},{"deprecated":false,"name":"watchOS","introducedAt":"9.0","unavailable":false,"beta":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmingPrefix","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Prefix","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"prefix","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Prefix"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Prefix"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Prefix"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/trimmingPrefix(_:)","path":"\/documentation\/forkedmerge\/mergeablearray\/trimmingprefix(_:)","abstract":[{"text":"Returns a new collection of the same type by removing ","type":"text"},{"type":"codeVoice","code":"prefix"},{"text":" from the start","type":"text"},{"text":" ","type":"text"},{"text":"of the collection.","type":"text"}],"taskGroups":[],"language":"swift","title":"trimmingPrefix(_:)","availableLanguages":["swift"]},{"kind":"org.swift.docc.kind.instanceSubscript","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/subscript(_:)","language":"swift","path":"\/documentation\/forkedmerge\/mergeabledictionary\/subscript(_:)","title":"subscript(_:)","taskGroups":[],"usr":"s:11ForkedMerge19MergeableDictionaryVyq_Sgxcip","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"("},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"text":"Key","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}]},{"path":"\/documentation\/forkedmerge\/mergeablearray\/allsatisfy(_:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/allSatisfy(_:)","title":"allSatisfy(_:)","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSatisfy"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"availableLanguages":["swift"],"language":"swift","abstract":[{"text":"Returns a Boolean value indicating whether every element of a sequence","type":"text"},{"text":" ","type":"text"},{"text":"satisfies a given predicate.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","usr":"s:STsE10allSatisfyyS2b7ElementQzKXEKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"usr":"s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableArray","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"}],"title":"MergeableArray","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may be present. Think about merging changes to text: If the user types the same word on two"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice — the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represesnts the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"type":"text","text":"Note that it contains a complete history of changes, including deletions, so it grows over time."},{"text":" ","type":"text"},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"availableLanguages":["swift"],"language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray","kind":"org.swift.docc.kind.structure","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/values"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/append(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/entriesUniquelyIdentified()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/insert(_:at:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-4xgxi","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-8913f","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/remove(at:)"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/BidirectionalCollection-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/ExpressibleByArrayLiteral-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Mergeable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/RandomAccessCollection-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"],"title":"Default Implementations"}]},{"title":"drop(while:)","taskGroups":[],"language":"swift","abstract":[{"type":"text","text":"Returns a subsequence by skipping elements while "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"text":" and returning the remaining elements.","type":"text"}],"usr":"s:SlsE4drop5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","path":"\/documentation\/forkedmerge\/mergeablearray\/drop(while:)","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"drop"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/drop(while:)","kind":"org.swift.docc.kind.instanceMethod"},{"kind":"org.swift.docc.kind.enumerationCase","abstract":[{"text":"The property must be a ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":" type, and will be merged accordingly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"type":"text","text":"This is the default algorithm if "},{"code":"@Merged","type":"codeVoice"},{"type":"text","text":" has been applied with no"},{"type":"text","text":" "},{"type":"text","text":"algorithm stated."}],"language":"swift","title":"PropertyMerge.mergeableProtocol","path":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","taskGroups":[],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mergeableProtocol"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","availableLanguages":["swift"],"usr":"s:11ForkedMerge08PropertyB0O17mergeableProtocolyA2CmF"},{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","availableLanguages":["swift"],"usr":"ForkedMerge","kind":"org.swift.docc.kind.module","language":"swift","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"title":"Protocols"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"],"title":"Structures"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"],"title":"Enumerations"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","path":"\/documentation\/forkedmerge"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/removingSubranges(_:)","availableLanguages":["swift"],"title":"removingSubranges(_:)","taskGroups":[],"usr":"s:SlsE17removingSubrangesys18DiscontiguousSliceVyxGs8RangeSetVy5IndexQzGF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removingSubranges"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"subranges","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s8RangeSetV","text":"RangeSet","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"DiscontiguousSlice","preciseIdentifier":"s:s18DiscontiguousSliceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Returns a collection of the elements in this collection that are not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represented by the given range set."}],"platforms":[{"deprecated":false,"beta":false,"name":"iOS","unavailable":false,"introducedAt":"18.0"},{"name":"macOS","unavailable":false,"introducedAt":"15.0","deprecated":false,"beta":false},{"deprecated":false,"name":"tvOS","introducedAt":"18.0","unavailable":false,"beta":false},{"deprecated":false,"name":"visionOS","unavailable":false,"introducedAt":"2.0","beta":false},{"unavailable":false,"beta":false,"name":"watchOS","deprecated":false,"introducedAt":"11.0"}],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/removingsubranges(_:)"},{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedMerge08PropertyB0O","title":"!=(_:_:)","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/!=(_:_:)","language":"swift","path":"\/documentation\/forkedmerge\/propertymerge\/!=(_:_:)","kind":"org.swift.docc.kind.operator","availableLanguages":["swift"],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}]},{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","text":"MergeableDictionary"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","text":"MergeableDictionary","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"MergeableDictionary","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This is a non-recursive version used when the values are not mergeable."}],"usr":"s:11ForkedMerge19MergeableDictionaryV6merged15withSubordinate14commonAncestorACyxq_GAG_AGtKF","taskGroups":[],"title":"merged(withSubordinate:commonAncestor:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/merged(withSubordinate:commonAncestor:)-2fr3y","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","path":"\/documentation\/forkedmerge\/mergeabledictionary\/merged(withsubordinate:commonancestor:)-2fr3y"},{"availableLanguages":["swift"],"usr":"s:11ForkedMerge10TextMergerV5merge_15withSubordinate14commonAncestorS2S_S2StKF","kind":"org.swift.docc.kind.instanceMethod","title":"merge(_:withSubordinate:commonAncestor:)","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"path":"\/documentation\/forkedmerge\/textmerger\/merge(_:withsubordinate:commonancestor:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger\/merge(_:withSubordinate:commonAncestor:)","language":"swift"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reversed()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reversed"},{"kind":"text","text":"() -> "},{"text":"ReversedCollection","kind":"typeIdentifier","preciseIdentifier":"s:s18ReversedCollectionV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"usr":"s:SKsE8reverseds18ReversedCollectionVyxGyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"reversed()","abstract":[{"type":"text","text":"Returns a view presenting the elements of the collection in reverse"},{"type":"text","text":" "},{"text":"order.","type":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/reversed()","kind":"org.swift.docc.kind.instanceMethod","language":"swift","availableLanguages":["swift"],"taskGroups":[]},{"path":"\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)","language":"swift","availableLanguages":["swift"],"platforms":[{"introducedAt":"15.0","name":"iOS","beta":false,"deprecated":false,"unavailable":false},{"unavailable":false,"introducedAt":"12.0","deprecated":false,"beta":false,"name":"macOS"},{"beta":false,"deprecated":false,"introducedAt":"15.0","name":"tvOS","unavailable":false},{"beta":false,"name":"watchOS","introducedAt":"8.0","deprecated":false,"unavailable":false}],"taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compare","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Comparator","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Compared","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ComparisonResult","preciseIdentifier":"c:@E@NSComparisonResult"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP","text":"SortComparator"},{"text":", ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","usr":"s:ST10FoundationE7compareySo18NSComparisonResultV8ComparedQyd___AFtAA14SortComparatorRd__7ElementQzRsd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is ordered before "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" in the ordering described by the given"},{"type":"text","text":" "},{"type":"text","text":"sequence of "},{"type":"codeVoice","code":"SortComparator"},{"type":"text","text":"s"}],"title":"compare(_:_:)","kind":"org.swift.docc.kind.instanceMethod"},{"path":"\/documentation\/forkedmerge\/propertybacking\/hash(into:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/hash(into:)","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"usr":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:11ForkedMerge15PropertyBackingO","title":"hash(into:)","language":"swift"},{"language":"swift","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-6fkpk"],"title":"Instance Methods"}],"title":"Mergeable Implementations","kind":"org.swift.docc.kind.collectionGroup","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Mergeable-Implementations","path":"\/documentation\/forkedmerge\/mergeablearray\/mergeable-implementations"},{"title":"init()","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()","fragments":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"taskGroups":[],"usr":"s:11ForkedMerge11ArrayMergerVACyxGycfc","language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.initializer","path":"\/documentation\/forkedmerge\/arraymerger\/init()"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/reduce(_:_:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(_:_:)","kind":"org.swift.docc.kind.instanceMethod","language":"swift","title":"reduce(_:_:)","taskGroups":[],"usr":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","availableLanguages":["swift"],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"initialResult"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"nextPartialResult"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}]},{"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-7nexl","platforms":[],"usr":"s:STsE7flatMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"]"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/flatmap(_:)-7nexl","language":"swift","title":"flatMap(_:)"},{"taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"OtherSequence"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":" == ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"}],"kind":"org.swift.docc.kind.instanceMethod","abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the"},{"type":"text","text":" "},{"text":"less-than operator (","type":"text"},{"code":"<","type":"codeVoice"},{"text":") to compare elements.","type":"text"}],"language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/lexicographicallyprecedes(_:)","title":"lexicographicallyPrecedes(_:)","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:)","usr":"s:STsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"availableLanguages":["swift"],"usr":"s:11ForkedMerge19MergeableDictionaryV5countSivp","title":"count","taskGroups":[],"language":"swift","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"count","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"path":"\/documentation\/forkedmerge\/mergeabledictionary\/count","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/count","kind":"org.swift.docc.kind.instanceProperty"},{"availableLanguages":["swift"],"title":"merged(withSubordinate:commonAncestor:)","usr":"s:11ForkedMerge19MergeableDictionaryVAA0A00C0R_rlE6merged15withSubordinate14commonAncestorACyxq_GAI_AItKF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"text":"MergeableDictionary","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MergeableDictionary","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"MergeableDictionary","preciseIdentifier":"s:11ForkedMerge19MergeableDictionaryV"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"taskGroups":[],"language":"swift","abstract":[{"text":"If the values are themselves Mergeable, but not conflict-free, we can only use 3-way merge with common ancestor.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"You get a recursive merge, as the dictionary merges, but also the values in the dictionary"}],"path":"\/documentation\/forkedmerge\/mergeabledictionary\/merged(withsubordinate:commonancestor:)-7j2cc","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/merged(withSubordinate:commonAncestor:)-7j2cc","kind":"org.swift.docc.kind.instanceMethod"},{"kind":"org.swift.docc.kind.operator","usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedMerge19MergeableDictionaryV","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"path":"\/documentation\/forkedmerge\/mergeabledictionary\/!=(_:_:)","taskGroups":[],"title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/!=(_:_:)","language":"swift"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/bidirectionalcollection-implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/BidirectionalCollection-Implementations","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropLast(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-6sfhc","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(before:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-75cc1","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(of:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reversed()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(_:)"]}],"title":"BidirectionalCollection Implementations","language":"swift","kind":"org.swift.docc.kind.collectionGroup"},{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"indices","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"element","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"RangeSet","kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":">","kind":"text"}],"platforms":[{"introducedAt":"18.0","deprecated":false,"unavailable":false,"beta":false,"name":"iOS"},{"beta":false,"name":"macOS","unavailable":false,"introducedAt":"15.0","deprecated":false},{"introducedAt":"18.0","unavailable":false,"deprecated":false,"name":"tvOS","beta":false},{"unavailable":false,"introducedAt":"2.0","deprecated":false,"name":"visionOS","beta":false},{"unavailable":false,"introducedAt":"11.0","name":"watchOS","beta":false,"deprecated":false}],"kind":"org.swift.docc.kind.instanceMethod","abstract":[{"type":"text","text":"Returns the indices of all the elements that are equal to the given"},{"type":"text","text":" "},{"text":"element.","type":"text"}],"usr":"s:SlsSQ7ElementRpzrlE7indices2ofs8RangeSetVy5IndexQzGAB_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","availableLanguages":["swift"],"language":"swift","title":"indices(of:)","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(of:)","path":"\/documentation\/forkedmerge\/mergeablearray\/indices(of:)"},{"language":"swift","title":"merge(_:withSubordinate:commonAncestor:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)","path":"\/documentation\/forkedmerge\/arraymerger\/merge(_:withsubordinate:commonancestor:)","kind":"org.swift.docc.kind.instanceMethod","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"taskGroups":[],"usr":"s:11ForkedMerge11ArrayMergerV5merge_15withSubordinate14commonAncestorSayxGAG_A2GtKF","availableLanguages":["swift"]},{"usr":"s:ST10FoundationE6sorted5usingSay7ElementQzGqd___tAA14SortComparatorRd__8ComparedQyd__AERSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","availableLanguages":["swift"],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"kind":"text","text":" "},{"kind":"internalParam","text":"comparator"},{"kind":"text","text":": "},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Comparator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10Foundation14SortComparatorP","text":"SortComparator","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"}],"language":"swift","platforms":[{"unavailable":false,"deprecated":false,"name":"iOS","introducedAt":"15.0","beta":false},{"introducedAt":"12.0","beta":false,"deprecated":false,"name":"macOS","unavailable":false},{"name":"tvOS","introducedAt":"15.0","unavailable":false,"beta":false,"deprecated":false},{"unavailable":false,"introducedAt":"8.0","name":"watchOS","beta":false,"deprecated":false}],"title":"sorted(using:)","abstract":[{"text":"Returns the elements of the sequence, sorted using the given comparator","type":"text"},{"type":"text","text":" "},{"text":"to compare elements.","type":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-745kq","kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-745kq","taskGroups":[]},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropFirst(_:)","title":"dropFirst(_:)","availableLanguages":["swift"],"taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropFirst"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"k","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":" = 1) -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/dropfirst(_:)","usr":"s:SlsE9dropFirsty11SubSequenceQzSiF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"text":"Returns a subsequence containing all but the given number of initial","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements."}],"language":"swift"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/ExpressibleByArrayLiteral-Implementations","path":"\/documentation\/forkedmerge\/mergeableset\/expressiblebyarrayliteral-implementations","language":"swift","availableLanguages":["swift"],"title":"ExpressibleByArrayLiteral Implementations","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(arrayLiteral:)"]}],"kind":"org.swift.docc.kind.collectionGroup"},{"fragments":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"path":"\/documentation\/forkedmerge\/textmerger\/init()","title":"init()","language":"swift","usr":"s:11ForkedMerge10TextMergerVACycfc","taskGroups":[],"kind":"org.swift.docc.kind.initializer","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger\/init()"},{"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger\/init()"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger\/merge(_:withSubordinate:commonAncestor:)"]}],"kind":"org.swift.docc.kind.structure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TextMerger","kind":"identifier"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger","availableLanguages":["swift"],"language":"swift","path":"\/documentation\/forkedmerge\/textmerger","title":"TextMerger","usr":"s:11ForkedMerge10TextMergerV"},{"taskGroups":[],"usr":"s:11ForkedMerge14MergeableValueVAASeRzSERzlE4fromACyxGs7Decoder_p_tKcfc","path":"\/documentation\/forkedmerge\/mergeablevalue\/init(from:)","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(from:)","kind":"org.swift.docc.kind.initializer","fragments":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"init(from:)","availableLanguages":["swift"]},{"path":"\/documentation\/forkedmerge\/mergeablearray\/withcontiguousstorageifavailable(_:)","usr":"s:STsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/withContiguousStorageIfAvailable(_:)","taskGroups":[],"language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousStorageIfAvailable"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}],"title":"withContiguousStorageIfAvailable(_:)"},{"taskGroups":[],"title":"index(_:offsetBy:limitedBy:)","path":"\/documentation\/forkedmerge\/mergeablearray\/index(_:offsetby:limitedby:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(_:offsetBy:limitedBy:)","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"text":" ","type":"text"},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"language":"swift","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"distance","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"usr":"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","kind":"org.swift.docc.kind.instanceMethod"},{"language":"swift","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/suffix(from:)","usr":"s:SlsE6suffix4from11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(from:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"suffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"start","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"taskGroups":[],"abstract":[{"type":"text","text":"Returns a subsequence from the specified position to the end of the"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"kind":"org.swift.docc.kind.instanceMethod","title":"suffix(from:)"},{"path":"\/documentation\/forkedmerge\/propertymerge\/hash(into:)","title":"hash(into:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/hash(into:)","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"language":"swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"usr":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:11ForkedMerge08PropertyB0O"},{"title":"ExpressibleByArrayLiteral Implementations","availableLanguages":["swift"],"kind":"org.swift.docc.kind.collectionGroup","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/ExpressibleByArrayLiteral-Implementations","path":"\/documentation\/forkedmerge\/mergeablearray\/expressiblebyarrayliteral-implementations","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init(arrayLiteral:)"]}],"language":"swift"},{"language":"swift","kind":"org.swift.docc.kind.enumerationCase","path":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","usr":"s:11ForkedMerge08PropertyB0O05arrayB0yA2CmF","abstract":[{"text":"Will merge as an array of values. Elements must be Equatable.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When there is a conflict, it will"},{"text":" ","type":"text"},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"type":"text","text":" "},{"text":"there can be duplicates created, so it is more suitable to value types","type":"text"},{"type":"text","text":" "},{"text":"like characters in a string. than it is to identifiable types.","type":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","availableLanguages":["swift"],"taskGroups":[],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"arrayMerge","kind":"identifier"}],"title":"PropertyMerge.arrayMerge"},{"abstract":[{"text":"Finds and returns the range of the first occurrence of a given collection","type":"text"},{"type":"text","text":" "},{"type":"text","text":"within this collection."}],"taskGroups":[],"title":"firstRange(of:)","language":"swift","platforms":[{"beta":false,"unavailable":false,"introducedAt":"16.0","deprecated":false,"name":"iOS"},{"unavailable":false,"deprecated":false,"name":"macOS","beta":false,"introducedAt":"13.0"},{"introducedAt":"16.0","deprecated":false,"name":"tvOS","unavailable":false,"beta":false},{"introducedAt":"9.0","beta":false,"deprecated":false,"name":"watchOS","unavailable":false}],"kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/firstrange(of:)-6sfhc","usr":"s:SK17_StringProcessingSL7ElementRpzrlE10firstRange2ofSny5IndexQzGSgqd___tSlRd__ABQyd__ACRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstRange","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":">? ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":" == "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-6sfhc"},{"language":"swift","usr":"s:SlsE6prefix7through11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(through:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"through"},{"text":" ","kind":"text"},{"text":"position","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"availableLanguages":["swift"],"title":"prefix(through:)","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"text":"Returns a subsequence from the start of the collection through the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified position."}],"taskGroups":[],"path":"\/documentation\/forkedmerge\/mergeablearray\/prefix(through:)"},{"availableLanguages":["swift"],"title":"map(_:)","usr":"s:STsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-8i05f","path":"\/documentation\/forkedmerge\/mergeablearray\/map(_:)-8i05f","language":"swift","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"type":"text","text":"Returns an array containing the results of mapping the given closure"},{"text":" ","type":"text"},{"text":"over the sequence’s elements.","type":"text"}],"taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"}]},{"path":"\/documentation\/forkedmerge\/mergeablearray\/equatable-implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Equatable-Implementations","language":"swift","availableLanguages":["swift"],"title":"Equatable Implementations","taskGroups":[{"title":"Operators","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/!=(_:_:)"]}],"kind":"org.swift.docc.kind.collectionGroup"},{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"}],"availableLanguages":["swift"],"usr":"s:11ForkedMerge6MergerP5merge_15withSubordinate14commonAncestor1TQzAH_A2HtKF","path":"\/documentation\/forkedmerge\/merger\/merge(_:withsubordinate:commonancestor:)","title":"merge(_:withSubordinate:commonAncestor:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)","language":"swift","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[]},{"title":"filter(_:)","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Predicate","preciseIdentifier":"s:10Foundation9PredicateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"availableLanguages":["swift"],"platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"17.0","beta":false},{"deprecated":false,"unavailable":false,"beta":false,"name":"macOS","introducedAt":"14.0"},{"unavailable":false,"beta":false,"name":"tvOS","introducedAt":"17.0","deprecated":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"10.0"}],"language":"swift","usr":"s:ST10FoundationE6filterySay7ElementQzGAA9PredicateVyAD_QPGKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-1vis2","path":"\/documentation\/forkedmerge\/mergeablearray\/filter(_:)-1vis2"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init(dictionaryLiteral:)","title":"init(dictionaryLiteral:)","usr":"s:11ForkedMerge19MergeableDictionaryV17dictionaryLiteralACyxq_Gx_q_td_tcfc","language":"swift","kind":"org.swift.docc.kind.initializer","fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"dictionaryLiteral"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")...)"}],"availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeabledictionary\/init(dictionaryliteral:)","taskGroups":[]},{"taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/sorted(by:)","availableLanguages":["swift"],"abstract":[{"text":"Returns the elements of the sequence, sorted using the given predicate as","type":"text"},{"type":"text","text":" "},{"text":"the comparison between elements.","type":"text"}],"usr":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"sorted(by:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"text":"areInIncreasingOrder","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(by:)","language":"swift"},{"usr":"s:11ForkedMerge9SetMergerV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetMerger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/setmerger","title":"SetMerger","kind":"org.swift.docc.kind.structure","language":"swift","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)"],"title":"Instance Methods"}]},{"language":"swift","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init(from:)"],"title":"Initializers"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/Decodable-Implementations","kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forkedmerge\/mergeabledictionary\/decodable-implementations","title":"Decodable Implementations"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:)","title":"formIndex(_:offsetBy:)","abstract":[{"text":"Offsets the given index by the specified distance.","type":"text"}],"availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formIndex","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"i","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"distance","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/formindex(_:offsetby:)","kind":"org.swift.docc.kind.instanceMethod","usr":"s:SlsE9formIndex_8offsetByy0B0Qzz_SitF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","taskGroups":[]},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:by:)","kind":"org.swift.docc.kind.instanceMethod","usr":"s:STsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"areInIncreasingOrder"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":" : ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"type":"text","text":" "},{"text":"sequence in a lexicographical (dictionary) ordering, using the given","type":"text"},{"type":"text","text":" "},{"text":"predicate to compare elements.","type":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/lexicographicallyprecedes(_:by:)","taskGroups":[],"language":"swift","title":"lexicographicallyPrecedes(_:by:)","availableLanguages":["swift"]},{"language":"swift","abstract":[{"text":"Uses a ","type":"text"},{"code":"MergeableArray","type":"codeVoice"},{"type":"text","text":" type as the backing of the variable."}],"taskGroups":[],"usr":"s:11ForkedMerge15PropertyBackingO14mergeableArrayyA2CmF","title":"PropertyBacking.mergeableArray","kind":"org.swift.docc.kind.enumerationCase","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mergeableArray"}],"availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableArray","path":"\/documentation\/forkedmerge\/propertybacking\/mergeablearray"},{"path":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","title":"Equatable Implementations","kind":"org.swift.docc.kind.collectionGroup","availableLanguages":["swift"],"taskGroups":[{"title":"Operators","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/!=(_:_:)"]}],"language":"swift"},{"language":"swift","title":"keys","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/keys","kind":"org.swift.docc.kind.instanceProperty","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keys"},{"kind":"text","text":": ["},{"text":"Key","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"path":"\/documentation\/forkedmerge\/mergeabledictionary\/keys","usr":"s:11ForkedMerge19MergeableDictionaryV4keysSayxGvp","taskGroups":[]},{"usr":"s:SlsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSay11SubSequenceQzGAB_SiSbtF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(separator:maxSplits:omittingEmptySubsequences:)","kind":"org.swift.docc.kind.instanceMethod","title":"split(separator:maxSplits:omittingEmptySubsequences:)","taskGroups":[],"abstract":[{"text":"Returns the longest possible subsequences of the collection, in order,","type":"text"},{"type":"text","text":" "},{"text":"around elements equal to the given element.","type":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/split(separator:maxsplits:omittingemptysubsequences:)","availableLanguages":["swift"],"language":"swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"maxSplits","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":" = Int.max, ","kind":"text"},{"kind":"externalParam","text":"omittingEmptySubsequences"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = true) -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"},{"kind":"text","text":"]"}]},{"availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","taskGroups":[{"title":"Operators","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)"]}],"path":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","title":"Equatable Implementations","kind":"org.swift.docc.kind.collectionGroup"},{"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"last"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/last(where:)","path":"\/documentation\/forkedmerge\/mergeablearray\/last(where:)","language":"swift","availableLanguages":["swift"],"usr":"s:SKsE4last5where7ElementQzSgSbADKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"last(where:)","abstract":[{"type":"text","text":"Returns the last element of the sequence that satisfies the given"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}]},{"taskGroups":[],"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"type":"text","text":" "},{"text":"given closure.","type":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/reduce(into:_:)","usr":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"initialResult"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"updateAccumulatingResult","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ()) "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(into:_:)","title":"reduce(into:_:)","availableLanguages":["swift"],"language":"swift","kind":"org.swift.docc.kind.instanceMethod"},{"path":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2","usr":"s:11ForkedMerge25ArrayOfIdentifiableMergerVAA0A09MergeableRzrlE5merge_15withSubordinate14commonAncestorSayxGAI_A2ItKF","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"title":"merge(_:withSubordinate:commonAncestor:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","language":"swift","taskGroups":[],"abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"type":"text","text":" "},{"type":"text","text":"The result is different to merging where the elements are not mergeable."},{"type":"text","text":" "},{"type":"text","text":"This call will recurse the merge."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}]},{"title":"Mergeable Implementations","language":"swift","taskGroups":[{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/merged(withSubordinate:commonAncestor:)"]}],"path":"\/documentation\/forkedmerge\/mergeableset\/mergeable-implementations","availableLanguages":["swift"],"kind":"org.swift.docc.kind.collectionGroup","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Mergeable-Implementations"},{"abstract":[{"text":"Returns a Boolean value indicating whether the sequence contains the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given element."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"element","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"usr":"s:STsSQ7ElementRpzrlE8containsySbABF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"contains(_:)","taskGroups":[],"language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/contains(_:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(_:)"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/contains(where:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(where:)","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"text":"Returns a Boolean value indicating whether the sequence contains an","type":"text"},{"type":"text","text":" "},{"text":"element that satisfies the given predicate.","type":"text"}],"availableLanguages":["swift"],"title":"contains(where:)","language":"swift","taskGroups":[],"usr":"s:STsE8contains5whereS2b7ElementQzKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},{"availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/lastindex(of:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lastIndex"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"element","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"language":"swift","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"type":"text","text":"Returns the last index where the specified value appears in the"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"usr":"s:SKsSQ7ElementRpzrlE9lastIndex2of0C0QzSgAB_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(of:)","title":"lastIndex(of:)"},{"abstract":[{"text":"Returns the first element of the sequence that satisfies the given","type":"text"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"title":"first(where:)","usr":"s:STsE5first5where7ElementQzSgSbADKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first(where:)","path":"\/documentation\/forkedmerge\/mergeablearray\/first(where:)","availableLanguages":["swift"],"language":"swift"},{"language":"swift","usr":"s:11ForkedMerge19MergeableDictionaryV","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init(_:)"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/count","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/dictionary","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/keys","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/values"],"title":"Instance Properties"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/merged(withSubordinate:commonAncestor:)-7j2cc"],"title":"Instance Methods"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/subscript(_:)"],"title":"Subscripts"},{"title":"Default Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/ExpressibleByDictionaryLiteral-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/Mergeable-Implementations"]}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableDictionary"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}],"path":"\/documentation\/forkedmerge\/mergeabledictionary","title":"MergeableDictionary","abstract":[{"type":"text","text":"Represents a mergable type for a dictionary of values."},{"text":" ","type":"text"},{"type":"text","text":"Uses a CRDT algorithm."}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","kind":"org.swift.docc.kind.structure","availableLanguages":["swift"]},{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableValue"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"title":"MergeableValue","path":"\/documentation\/forkedmerge\/mergeablevalue","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","kind":"org.swift.docc.kind.structure","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"],"title":"Default Implementations"}],"language":"swift","usr":"s:11ForkedMerge14MergeableValueV"},{"availableLanguages":["swift"],"usr":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including, the specified position."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"kind":"text","text":" "},{"text":"end","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/prefix(upto:)","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/prefix(upTo:)","title":"prefix(upTo:)","language":"swift"},{"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceProperty","title":"values","taskGroups":[],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/values","path":"\/documentation\/forkedmerge\/mergeablearray\/values","usr":"s:11ForkedMerge14MergeableArrayV6valuesSayxGvp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"values","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]},{"usr":"s:SlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","taskGroups":[],"title":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxSplits"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":" = Int.max, ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" = true, "},{"text":"whereSeparator","kind":"externalParam"},{"kind":"text","text":" "},{"text":"isSeparator","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"abstract":[{"type":"text","text":"Returns the longest possible subsequences of the collection, in order,"},{"type":"text","text":" "},{"text":"that don’t contain elements satisfying the given predicate.","type":"text"}]},{"abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"adding the given separator between each element."}],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-75cc1","title":"joined(separator:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-75cc1","taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" = \"\") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"availableLanguages":["swift"],"language":"swift","usr":"s:SKsSS7ElementRtzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","taskGroups":[],"usr":"s:ST10FoundationE6sorted5usingSay7ElementQzGqd___tSTRd__AA14SortComparatorRd_0_ADQyd__Rsd_0_8ComparedQyd_0_AERSr0_lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Comparator"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":" ","kind":"text"},{"text":"comparators","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":" : ","kind":"text"},{"text":"SortComparator","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP"},{"text":", ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Compared","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"}],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","platforms":[{"introducedAt":"15.0","name":"iOS","deprecated":false,"beta":false,"unavailable":false},{"introducedAt":"12.0","name":"macOS","unavailable":false,"deprecated":false,"beta":false},{"deprecated":false,"name":"tvOS","introducedAt":"15.0","unavailable":false,"beta":false},{"beta":false,"unavailable":false,"name":"watchOS","deprecated":false,"introducedAt":"8.0"}],"title":"sorted(using:)","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given array of"},{"type":"text","text":" "},{"code":"SortComparator","type":"codeVoice"},{"type":"text","text":"s to compare elements."}],"path":"\/documentation\/forkedmerge\/mergeablearray\/sorted(using:)-4ox5r"},{"taskGroups":[],"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/subscript(_:)","usr":"s:11ForkedMerge14MergeableArrayVyxSicip","kind":"org.swift.docc.kind.instanceSubscript","path":"\/documentation\/forkedmerge\/mergeablearray\/subscript(_:)","language":"swift","availableLanguages":["swift"],"title":"subscript(_:)"},{"availableLanguages":["swift"],"usr":"s:11ForkedMerge15PropertyBackingO19mergeableDictionaryyA2CmF","abstract":[{"type":"text","text":"Uses a "},{"code":"MergeableDictionary","type":"codeVoice"},{"type":"text","text":" type as the backing of the variable."}],"path":"\/documentation\/forkedmerge\/propertybacking\/mergeabledictionary","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableDictionary","kind":"org.swift.docc.kind.enumerationCase","taskGroups":[],"title":"PropertyBacking.mergeableDictionary","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeableDictionary"}],"language":"swift"},{"title":"MergeableSet","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(array:)"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/count","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/values"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/contains(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/insert(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/remove(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/ExpressibleByArrayLiteral-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Mergeable-Implementations"]}],"path":"\/documentation\/forkedmerge\/mergeableset","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableSet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"}],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.structure","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","usr":"s:11ForkedMerge12MergeableSetV","abstract":[{"type":"text","text":"Observed-Remove Set. Can add and remove like a normal set."},{"type":"text","text":" "},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"language":"swift"},{"usr":"s:11ForkedMerge14MergeableValueV6merged15withSubordinate14commonAncestorACyxGAG_AGtKF","language":"swift","path":"\/documentation\/forkedmerge\/mergeablevalue\/merged(withsubordinate:commonancestor:)","availableLanguages":["swift"],"taskGroups":[],"title":"merged(withSubordinate:commonAncestor:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"kind":"text","text":"("},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableValueV","text":"MergeableValue"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"MergeableValue","preciseIdentifier":"s:11ForkedMerge14MergeableValueV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/merged(withSubordinate:commonAncestor:)"},{"title":"init(from:)","kind":"org.swift.docc.kind.initializer","language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/init(from:)","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init(from:)","usr":"s:11ForkedMerge14MergeableArrayVAASeRzSERzrlE4fromACyxGs7Decoder_p_tKcfc","fragments":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"kind":"text","text":": any "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"taskGroups":[]},{"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(_:offsetBy:limitedBy:)","usr":"s:SlsE9formIndex_8offsetBy07limitedD0Sb0B0Qzz_SiAEtF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/formindex(_:offsetby:limitedby:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formIndex"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"i","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"distance"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"limit","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"formIndex(_:offsetBy:limitedBy:)","abstract":[{"text":"Offsets the given index by the specified distance, or so that it equals","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the given limiting index."}],"language":"swift"},{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"count","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"where","kind":"externalParam"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"}],"availableLanguages":["swift"],"abstract":[{"text":"Returns the number of elements in the sequence that satisfy the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"title":"count(where:)","language":"swift","usr":"s:STsE5count5whereSiSb7ElementQzqd__YKXE_tqd__YKs5ErrorRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","path":"\/documentation\/forkedmerge\/mergeablearray\/count(where:)","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod"},{"availableLanguages":["swift"],"kind":"org.swift.docc.kind.enumerationCase","language":"swift","title":"PropertyMerge.textMerge","abstract":[{"text":"Applies the ","type":"text"},{"type":"codeVoice","code":"array"},{"type":"text","text":" merge algorithm to the characters in a string."},{"type":"text","text":" "},{"type":"text","text":"This is suitable for any type of shared text, which may"},{"type":"text","text":" "},{"type":"text","text":"have conflicting edits, like a collaborative editor."},{"text":" ","type":"text"},{"type":"text","text":"The variable must be a "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","path":"\/documentation\/forkedmerge\/propertymerge\/textmerge","taskGroups":[],"usr":"s:11ForkedMerge08PropertyB0O04textB0yA2CmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"textMerge"}]},{"language":"swift","usr":"s:11ForkedMerge14MergeableArrayV5index5afterS2i_tF","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","title":"index(after:)","path":"\/documentation\/forkedmerge\/mergeablearray\/index(after:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"after","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"i"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(after:)","taskGroups":[]},{"language":"swift","usr":"s:11ForkedMerge19MergeableDictionaryV10dictionarySDyxq_Gvp","availableLanguages":["swift"],"title":"dictionary","taskGroups":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dictionary"},{"text":": [","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"] { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/dictionary","kind":"org.swift.docc.kind.instanceProperty","path":"\/documentation\/forkedmerge\/mergeabledictionary\/dictionary"},{"title":"insert(_:)","taskGroups":[],"usr":"s:11ForkedMerge12MergeableSetV6insertySbxF","fragments":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/insert(_:)","language":"swift","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeableset\/insert(_:)"},{"availableLanguages":["swift"],"title":"Merger Implementations","kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merger-implementations","language":"swift","taskGroups":[{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-98zh8"]}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/Merger-Implementations"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-8913f","abstract":[{"type":"text","text":"For non-mergeables that are identifiable and equatable. Here we can at least see"},{"type":"text","text":" "},{"text":"which branch has changed, and choose that branch, even if we can’t “fuse” the elements.","type":"text"}],"language":"swift","title":"merged(withSubordinate:commonAncestor:)","path":"\/documentation\/forkedmerge\/mergeablearray\/merged(withsubordinate:commonancestor:)-8913f","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"usr":"s:11ForkedMerge14MergeableArrayVAAs12IdentifiableRzrlE6merged15withSubordinate14commonAncestorACyxGAH_AHtKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withSubordinate"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MergeableArray","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","kind":"typeIdentifier","text":"MergeableArray"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"MergeableArray","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}]},{"path":"\/documentation\/forkedmerge\/mergeablearray\/shuffled()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shuffled","kind":"identifier"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"usr":"s:STsE8shuffledSay7ElementQzGyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"type":"text","text":"Returns the elements of the sequence, shuffled."}],"title":"shuffled()","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled()","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"taskGroups":[],"language":"swift"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","taskGroups":[],"fragments":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"availableLanguages":["swift"],"title":"init(_:)","language":"swift","kind":"org.swift.docc.kind.initializer","path":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","usr":"s:11ForkedMerge14MergeableValueVyACyxGxcfc"},{"title":"insert(_:at:)","kind":"org.swift.docc.kind.instanceMethod","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/insert(_:at:)","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/insert(_:at:)","taskGroups":[],"usr":"s:11ForkedMerge14MergeableArrayV6insert_2atyx_SitF","fragments":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"index"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]},{"path":"\/documentation\/forkedmerge\/propertybacking\/equatable-implementations","taskGroups":[{"title":"Operators","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/!=(_:_:)"]}],"title":"Equatable Implementations","availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/Equatable-Implementations","kind":"org.swift.docc.kind.collectionGroup"},{"availableLanguages":["swift"],"title":"Decodable Implementations","language":"swift","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(from:)"]}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Decodable-Implementations","path":"\/documentation\/forkedmerge\/mergeableset\/decodable-implementations","kind":"org.swift.docc.kind.collectionGroup"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","title":"PropertyBacking","abstract":[{"text":"The storage used for a property. These storage types have built in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"systems for merging. They maintain the information they need (eg history)"},{"text":" ","type":"text"},{"type":"text","text":"to properly merge even if with copies that have conflicting changes."}],"kind":"org.swift.docc.kind.enumeration","availableLanguages":["swift"],"usr":"s:11ForkedMerge15PropertyBackingO","language":"swift","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableDictionary","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableSet","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableValue"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/init(rawValue:)"],"title":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/RawRepresentable-Implementations"]}],"path":"\/documentation\/forkedmerge\/propertybacking","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyBacking"}]},{"availableLanguages":["swift"],"language":"swift","title":"init(_:)","path":"\/documentation\/forkedmerge\/mergeablearray\/init(_:)","usr":"s:11ForkedMerge14MergeableArrayVyACyxGSayxGcfc","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init(_:)","fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"array"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"taskGroups":[],"kind":"org.swift.docc.kind.initializer"},{"usr":"s:Sl17_StringProcessingSQ7ElementRpzrlE6ranges2ofSaySny5IndexQzGGqd___tSlRd__ABQyd__ACRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"type":"text","text":"Finds and returns the ranges of the all occurrences of a given sequence"},{"type":"text","text":" "},{"text":"within the collection.","type":"text"}],"platforms":[{"name":"iOS","introducedAt":"16.0","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"13.0","name":"macOS","deprecated":false,"unavailable":false,"beta":false},{"unavailable":false,"name":"tvOS","beta":false,"deprecated":false,"introducedAt":"16.0"},{"unavailable":false,"beta":false,"name":"watchOS","introducedAt":"9.0","deprecated":false}],"language":"swift","kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/ranges(of:)","title":"ranges(of:)","path":"\/documentation\/forkedmerge\/mergeablearray\/ranges(of:)","availableLanguages":["swift"],"taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"ranges","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":">] "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"}]},{"title":"remove(at:)","taskGroups":[],"usr":"s:11ForkedMerge14MergeableArrayV6remove2atxSi_tF","fragments":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"remove","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/remove(at:)","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/remove(at:)"},{"language":"swift","title":"makeIterator()","usr":"s:Slss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s16IndexingIteratorV","kind":"typeIdentifier","text":"IndexingIterator"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/makeIterator()","abstract":[{"text":"Returns an iterator over the elements of the collection.","type":"text"}],"availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/makeiterator()","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod"},{"path":"\/documentation\/forkedmerge\/mergeablevalue\/!=(_:_:)","language":"swift","title":"!=(_:_:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)","availableLanguages":["swift"],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:11ForkedMerge14MergeableValueV","kind":"org.swift.docc.kind.operator","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"taskGroups":[]},{"language":"swift","title":"sorted()","taskGroups":[],"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted."}],"path":"\/documentation\/forkedmerge\/mergeablearray\/sorted()","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted()","kind":"org.swift.docc.kind.instanceMethod","usr":"s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}]},{"taskGroups":[],"path":"\/documentation\/forkedmerge\/mergeablearray\/lazy","usr":"s:STsE4lazys12LazySequenceVyxGvp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lazy","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"LazySequence","preciseIdentifier":"s:s12LazySequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lazy","language":"swift","abstract":[{"type":"text","text":"A sequence containing the same elements as this sequence,"},{"type":"text","text":" "},{"type":"text","text":"but on which some operations, such as "},{"type":"codeVoice","code":"map"},{"type":"text","text":" and "},{"code":"filter","type":"codeVoice"},{"text":", are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemented lazily."}],"title":"lazy","kind":"org.swift.docc.kind.instanceProperty","availableLanguages":["swift"]},{"language":"swift","title":"difference(from:by:)","availableLanguages":["swift"],"abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"text":" ","type":"text"},{"text":"elements from the given collection, using the given predicate as an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equivalence test."}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/difference(from:by:)","usr":"s:SKsE10difference4from2bys20CollectionDifferenceVy7ElementQzGqd___SbAG_AGtXEtSKRd__AFQyd__AGRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"difference","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"CollectionDifference","kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BidirectionalCollection","kind":"typeIdentifier","preciseIdentifier":"s:SK"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"}],"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"iOS"},{"deprecated":false,"name":"macOS","beta":false,"introducedAt":"10.15","unavailable":false},{"unavailable":false,"introducedAt":"13.0","name":"tvOS","deprecated":false,"beta":false},{"deprecated":false,"name":"watchOS","beta":false,"unavailable":false,"introducedAt":"6.0"}],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/difference(from:by:)","taskGroups":[]},{"kind":"org.swift.docc.kind.instanceProperty","title":"isEmpty","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isEmpty","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"taskGroups":[],"usr":"s:SlsE7isEmptySbvp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","language":"swift","abstract":[{"type":"text","text":"A Boolean value indicating whether the collection is empty."}],"path":"\/documentation\/forkedmerge\/mergeablearray\/isempty","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/isEmpty"},{"availableLanguages":["swift"],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"text":") -> [","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns an array containing the results of mapping the given closure"},{"text":" ","type":"text"},{"type":"text","text":"over the sequence’s elements."}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-4ccaf","language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/map(_:)-4ccaf","kind":"org.swift.docc.kind.instanceMethod","title":"map(_:)","taskGroups":[],"usr":"s:SlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"fragments":[{"kind":"keyword","text":"init"},{"text":"()","kind":"text"}],"language":"swift","path":"\/documentation\/forkedmerge\/mergeabledictionary\/init()","kind":"org.swift.docc.kind.initializer","title":"init()","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init()","availableLanguages":["swift"],"usr":"s:11ForkedMerge19MergeableDictionaryVACyxq_Gycfc","taskGroups":[]},{"path":"\/documentation\/forkedmerge\/dictionarymerger\/init()","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger\/init()","title":"init()","language":"swift","taskGroups":[],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.initializer","fragments":[{"kind":"keyword","text":"init"},{"text":"()","kind":"text"}],"usr":"s:11ForkedMerge16DictionaryMergerVACyxq_Gycfc"},{"availableLanguages":["swift"],"taskGroups":[],"language":"swift","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"count","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"usr":"s:11ForkedMerge12MergeableSetV5countSivp","title":"count","kind":"org.swift.docc.kind.instanceProperty","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/count","path":"\/documentation\/forkedmerge\/mergeableset\/count"},{"availableLanguages":["swift"],"language":"swift","kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-98zh8","taskGroups":[],"usr":"s:11ForkedMerge25ArrayOfIdentifiableMergerV5merge_15withSubordinate14commonAncestorSayxGAG_A2GtKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"title":"merge(_:withSubordinate:commonAncestor:)","abstract":[{"text":"This is the default for when the elements are note mergeable.","type":"text"}],"path":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-98zh8"},{"taskGroups":[],"title":"formatted()","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted()","kind":"org.swift.docc.kind.instanceMethod","usr":"s:ST10FoundationSS7ElementRtzrlE9formattedSSyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","platforms":[{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"15.0","name":"iOS"},{"deprecated":false,"unavailable":false,"introducedAt":"12.0","name":"macOS","beta":false},{"unavailable":false,"beta":false,"introducedAt":"15.0","name":"tvOS","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"8.0","deprecated":false}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"language":"swift","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/formatted()"},{"language":"swift","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/!=(_:_:)"],"title":"Operators"}],"path":"\/documentation\/forkedmerge\/mergeableset\/equatable-implementations","kind":"org.swift.docc.kind.collectionGroup","title":"Equatable Implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/Equatable-Implementations"},{"language":"swift","title":"min()","path":"\/documentation\/forkedmerge\/mergeablearray\/min()","taskGroups":[],"usr":"s:STsSL7ElementRpzrlE3minABSgyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min()","abstract":[{"text":"Returns the minimum element in the sequence.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"fragments":[{"kind":"attribute","text":"@warn_unqualified_access"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}]},{"path":"\/documentation\/forkedmerge\/mergeablearray\/enumerated()","taskGroups":[],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","usr":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/enumerated()","title":"enumerated()","abstract":[{"type":"text","text":"Returns a sequence of pairs ("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"text":"consecutive integer starting at zero and ","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"type":"text","text":" represents an element of"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}],"language":"swift"},{"title":"merge(_:withSubordinate:commonAncestor:)","language":"swift","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/merge(_:withSubordinate:commonAncestor:)","usr":"s:11ForkedMerge9SetMergerV5merge_15withSubordinate14commonAncestorShyxGAG_A2GtKF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"path":"\/documentation\/forkedmerge\/setmerger\/merge(_:withsubordinate:commonancestor:)","availableLanguages":["swift"]},{"title":"shuffled(using:)","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"shuffled","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"generator"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","text":"RandomNumberGenerator"}],"abstract":[{"type":"text","text":"Returns the elements of the sequence, shuffled using the given generator"},{"type":"text","text":" "},{"type":"text","text":"as a source for randomness."}],"path":"\/documentation\/forkedmerge\/mergeablearray\/shuffled(using:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled(using:)","usr":"s:STsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","language":"swift","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod"},{"usr":"s:STsE6filterySay7ElementQzGSbACKXEKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"isIncluded","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"language":"swift","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-77qlu","title":"filter(_:)","availableLanguages":["swift"],"abstract":[{"type":"text","text":"Returns an array containing, in order, the elements of the sequence"},{"text":" ","type":"text"},{"type":"text","text":"that satisfy the given predicate."}],"path":"\/documentation\/forkedmerge\/mergeablearray\/filter(_:)-77qlu","kind":"org.swift.docc.kind.instanceMethod"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","abstract":[{"type":"text","text":"Merges dictionaries. When there is a conflict, it will merge using"},{"text":" ","type":"text"},{"text":"a MergeableDictionary for each dictionary. If the value type is","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":", the dictionary will be merged recursing into the values."}],"language":"swift","path":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","availableLanguages":["swift"],"taskGroups":[],"usr":"s:11ForkedMerge08PropertyB0O010dictionaryB0yA2CmF","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"dictionaryMerge","kind":"identifier"}],"kind":"org.swift.docc.kind.enumerationCase","title":"PropertyMerge.dictionaryMerge"},{"path":"\/documentation\/forkedmerge\/dictionarymerger","language":"swift","availableLanguages":["swift"],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DictionaryMerger"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Key"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","text":"Equatable","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"title":"DictionaryMerger","usr":"s:11ForkedMerge16DictionaryMergerV","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger\/merge(_:withSubordinate:commonAncestor:)-5llcd","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger\/merge(_:withSubordinate:commonAncestor:)-7u4jn"],"title":"Instance Methods"}],"kind":"org.swift.docc.kind.structure"},{"title":"Merger","kind":"org.swift.docc.kind.protocol","abstract":[{"text":"A merger is a type that applies a merging algorithm to merge two values together.","type":"text"},{"text":" ","type":"text"},{"text":"The values are typically of a simple type. The algorithm could be anything, from a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"type":"text","text":"diffing against a common ancestor."}],"path":"\/documentation\/forkedmerge\/merger","taskGroups":[{"title":"Associated Types","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/merge(_:withSubordinate:commonAncestor:)"],"title":"Instance Methods"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Merger","kind":"identifier"}],"availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","usr":"s:11ForkedMerge6MergerP"},{"fragments":[{"text":"init","kind":"keyword"},{"kind":"text","text":"()"}],"kind":"org.swift.docc.kind.initializer","availableLanguages":["swift"],"title":"init()","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger\/init()","language":"swift","path":"\/documentation\/forkedmerge\/setmerger\/init()","taskGroups":[],"usr":"s:11ForkedMerge9SetMergerVACyxGycfc"},{"usr":"s:SKsE9formIndex6beforey0B0Qzz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"formIndex(before:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formIndex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"before"},{"text":" ","kind":"text"},{"text":"i","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":")","kind":"text"}],"taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formIndex(before:)","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/formindex(before:)","language":"swift"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","kind":"org.swift.docc.kind.instanceProperty","usr":"s:11ForkedMerge14MergeableValueV5valuexvp","taskGroups":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"language":"swift","title":"value","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablevalue\/value"},{"usr":"s:11ForkedMerge25ArrayOfIdentifiableMergerVACyxGycfc","fragments":[{"kind":"keyword","text":"init"},{"text":"()","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/init()","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/init()","kind":"org.swift.docc.kind.initializer","language":"swift","title":"init()","taskGroups":[]},{"language":"swift","kind":"org.swift.docc.kind.initializer","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(array:)","path":"\/documentation\/forkedmerge\/mergeableset\/init(array:)","availableLanguages":["swift"],"taskGroups":[],"usr":"s:11ForkedMerge12MergeableSetV5arrayACyxGSayxG_tcfc","fragments":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"array"},{"kind":"text","text":" "},{"text":"elements","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"T","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"title":"init(array:)"},{"title":"elementsEqual(_:)","availableLanguages":["swift"],"taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"elementsEqual","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"OtherSequence"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OtherSequence"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this sequence and another"},{"type":"text","text":" "},{"text":"sequence contain the same elements in the same order.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","usr":"s:STsSQ7ElementRpzrlE13elementsEqualySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:)","path":"\/documentation\/forkedmerge\/mergeablearray\/elementsequal(_:)"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init(arrayLiteral:)","taskGroups":[],"path":"\/documentation\/forkedmerge\/mergeablearray\/init(arrayliteral:)","title":"init(arrayLiteral:)","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"kind":"org.swift.docc.kind.initializer","language":"swift","usr":"s:11ForkedMerge14MergeableArrayV12arrayLiteralACyxGxd_tcfc"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/first","usr":"s:SlsE5first7ElementQzSgvp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"first","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"taskGroups":[],"language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceProperty","abstract":[{"type":"text","text":"The first element of the collection."}]},{"abstract":[{"text":"This overload is used when the value of the dictionary is ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":", and ensures that the contained values get merged properly."},{"type":"text","text":" "},{"text":"Without this, the contained values would be merged atomically.","type":"text"}],"path":"\/documentation\/forkedmerge\/dictionarymerger\/merge(_:withsubordinate:commonancestor:)-5llcd","kind":"org.swift.docc.kind.instanceMethod","title":"merge(_:withSubordinate:commonAncestor:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger\/merge(_:withSubordinate:commonAncestor:)-5llcd","availableLanguages":["swift"],"taskGroups":[],"usr":"s:11ForkedMerge16DictionaryMergerVAA0A09MergeableR_rlE5merge_15withSubordinate14commonAncestorSDyxq_GAI_A2ItKF","language":"swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Dictionary","preciseIdentifier":"s:SD"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}]},{"language":"swift","availableLanguages":["swift"],"taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/append(_:)","title":"append(_:)","path":"\/documentation\/forkedmerge\/mergeablearray\/append(_:)","usr":"s:11ForkedMerge14MergeableArrayV6appendyyxF","kind":"org.swift.docc.kind.instanceMethod","fragments":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"text":")","kind":"text"}]},{"kind":"org.swift.docc.kind.collectionGroup","language":"swift","title":"Sequence Implementations","availableLanguages":["swift"],"taskGroups":[{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lazy","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/publisher"]},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/allSatisfy(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compactMap(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/contains(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/enumerated()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-1vis2","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/filter(_:)-77qlu","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/first(where:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-6q035","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/flatMap(_:)-7nexl","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/forEach(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-5xpf","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-6mvci","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lexicographicallyPrecedes(_:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/map(_:)-8i05f","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/min(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(_:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/reduce(into:_:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/shuffled(using:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted()","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-4ox5r","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/sorted(using:)-745kq","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:by:)","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/withContiguousStorageIfAvailable(_:)"]}],"path":"\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"},{"language":"swift","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"text":"Returns a random element of the collection, using the given generator as","type":"text"},{"type":"text","text":" "},{"text":"a source for randomness.","type":"text"}],"availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/randomelement(using:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/randomElement(using:)","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomElement"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"text":" ","kind":"text"},{"text":"generator","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"? ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"RandomNumberGenerator","preciseIdentifier":"s:SG","kind":"typeIdentifier"}],"title":"randomElement(using:)","usr":"s:SlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"availableLanguages":["swift"],"title":"elementsEqual(_:by:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/elementsEqual(_:by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"elementsEqual"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"}],"language":"swift","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/elementsequal(_:by:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this sequence and another"},{"text":" ","type":"text"},{"type":"text","text":"sequence contain equivalent elements in the same order, using the given"},{"type":"text","text":" "},{"type":"text","text":"predicate as the equivalence test."}],"usr":"s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"taskGroups":[],"usr":"s:11ForkedMerge14MergeableArrayVAA0A00C0Rzs12IdentifiableRzrlE6merged15withSubordinate14commonAncestorACyxGAJ_AJtKF","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/merged(withSubordinate:commonAncestor:)-4xgxi","abstract":[{"type":"text","text":"Merge when elements are mergeable and identifiable. More object-like."},{"text":" ","type":"text"},{"text":"Will ensure uniqueness of identifiers, and merge together elements with the same identifier.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"kind":"text","text":"("},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","text":"MergeableArray"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","text":"MergeableArray"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"MergeableArray","preciseIdentifier":"s:11ForkedMerge14MergeableArrayV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/merged(withsubordinate:commonancestor:)-4xgxi","title":"merged(withSubordinate:commonAncestor:)","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","language":"swift"},{"title":"PropertyMerge.setMerge","kind":"org.swift.docc.kind.enumerationCase","language":"swift","usr":"s:11ForkedMerge08PropertyB0O03setB0yA2CmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setMerge"}],"availableLanguages":["swift"],"taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","path":"\/documentation\/forkedmerge\/propertymerge\/setmerge","abstract":[{"type":"text","text":"Will merge sets of values. When there is a conflict, it will handle"},{"text":" ","type":"text"},{"text":"it using a MergeableSet for each set of changes.","type":"text"}]},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","path":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","availableLanguages":["swift"],"kind":"org.swift.docc.kind.collectionGroup","language":"swift","title":"RawRepresentable Implementations","taskGroups":[{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/hashValue"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/hash(into:)"],"title":"Instance Methods"}]},{"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"name":"iOS","introducedAt":"15.0"},{"unavailable":false,"introducedAt":"12.0","deprecated":false,"name":"macOS","beta":false},{"beta":false,"introducedAt":"15.0","unavailable":false,"deprecated":false,"name":"tvOS"},{"name":"watchOS","introducedAt":"8.0","unavailable":false,"beta":false,"deprecated":false}],"language":"swift","taskGroups":[],"title":"formatted(_:)","kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/formatted(_:)","availableLanguages":["swift"],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/formatted(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formatted"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"style","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FormatOutput","preciseIdentifier":"s:10Foundation11FormatStyleP0B6OutputQa","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"text":"FormatInput","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11FormatStyleP0B5InputQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"text":"FormatStyle","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11FormatStyleP"}],"usr":"s:ST10FoundationE9formattedy12FormatOutputQyd__qd__0C5InputQyd__RszAA0C5StyleRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"taskGroups":[],"fragments":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remove","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"remove(_:)","usr":"s:11ForkedMerge12MergeableSetV6removeyxSgxF","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/remove(_:)","kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeableset\/remove(_:)","availableLanguages":["swift"]},{"path":"\/documentation\/forkedmerge\/mergeableset\/init()","usr":"s:11ForkedMerge12MergeableSetVACyxGycfc","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init()","kind":"org.swift.docc.kind.initializer","fragments":[{"text":"init","kind":"keyword"},{"kind":"text","text":"()"}],"availableLanguages":["swift"],"language":"swift","title":"init()"},{"usr":"s:STsSy7ElementRpzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" = \"\") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined(separator:)-5xpf","abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"adding the given separator between each element."}],"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"path":"\/documentation\/forkedmerge\/mergeablearray\/joined(separator:)-5xpf","availableLanguages":["swift"],"title":"joined(separator:)","language":"swift"},{"title":"values","kind":"org.swift.docc.kind.instanceProperty","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"values","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Value"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"usr":"s:11ForkedMerge19MergeableDictionaryV6valuesSayq_Gvp","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/values","language":"swift","path":"\/documentation\/forkedmerge\/mergeabledictionary\/values","taskGroups":[],"availableLanguages":["swift"]},{"language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/firstrange(of:)-8xuqu","platforms":[{"deprecated":false,"name":"iOS","beta":false,"unavailable":false,"introducedAt":"16.0"},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"macOS","beta":false},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"16.0"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0","name":"watchOS"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstRange"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":">? ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"}],"usr":"s:Sl17_StringProcessingSQ7ElementRpzrlE10firstRange2ofSny5IndexQzGSgqd___tSlRd__ABQyd__ACRSlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstRange(of:)-8xuqu","abstract":[{"type":"text","text":"Finds and returns the range of the first occurrence of a given collection"},{"type":"text","text":" "},{"type":"text","text":"within this collection."}],"taskGroups":[],"title":"firstRange(of:)"},{"fragments":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"areInIncreasingOrder"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/max(by:)","abstract":[{"text":"Returns the maximum element in the sequence, using the given predicate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as the comparison between elements."}],"title":"max(by:)","language":"swift","availableLanguages":["swift"],"usr":"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max(by:)"},{"availableLanguages":["swift"],"usr":"s:11ForkedMerge25ArrayOfIdentifiableMergerV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Identifiable","kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP"}],"kind":"org.swift.docc.kind.structure","title":"ArrayOfIdentifiableMerger","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/init()"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/Merger-Implementations"],"title":"Default Implementations"}],"language":"swift","path":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","abstract":[{"text":"Merges an array, ensuring that the result has elements with unqiue identifiers.","type":"text"}]},{"title":"starts(with:by:)","abstract":[{"text":"Returns a Boolean value indicating whether the initial elements of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence are equivalent to the elements in another sequence, using"},{"text":" ","type":"text"},{"text":"the given predicate as the equivalence test.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/starts(with:by:)","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"starts"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"text":"possiblePrefix","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"}],"language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/starts(with:by:)","availableLanguages":["swift"],"usr":"s:STsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","kind":"org.swift.docc.kind.structure","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/arraymerger","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)"]}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayMerger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"}],"title":"ArrayMerger","usr":"s:11ForkedMerge11ArrayMergerV","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"language":"swift"},{"platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"element"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the first index where the specified value appears in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"path":"\/documentation\/forkedmerge\/mergeablearray\/index(of:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(of:)","language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"title":"index(of:)","usr":"s:SlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV"},{"language":"swift","fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"taskGroups":[],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.initializer","path":"\/documentation\/forkedmerge\/mergeableset\/init(from:)","usr":"s:11ForkedMerge12MergeableSetVAASeRzSERzrlE4fromACyxGs7Decoder_p_tKcfc","title":"init(from:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(from:)"},{"kind":"org.swift.docc.kind.instanceProperty","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/underestimatedCount","title":"underestimatedCount","language":"swift","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"underestimatedCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"taskGroups":[],"usr":"s:SlsE19underestimatedCountSivp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/underestimatedcount","abstract":[{"type":"text","text":"A value less than or equal to the number of elements in the collection."}]},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(of:)","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstIndex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"text":"element","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"usr":"s:SlsSQ7ElementRpzrlE10firstIndex2of0C0QzSgAB_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","abstract":[{"type":"text","text":"Returns the first index where the specified value appears in the"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/firstindex(of:)","language":"swift","taskGroups":[],"title":"firstIndex(of:)"},{"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/publisher","platforms":[{"beta":false,"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"13.0"},{"deprecated":false,"name":"macOS","unavailable":false,"beta":false,"introducedAt":"10.15"},{"name":"tvOS","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"introducedAt":"6.0","deprecated":false,"name":"watchOS","beta":false,"unavailable":false}],"title":"publisher","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceProperty","usr":"s:ST7CombineE9publisherAA10PublishersO8SequenceVy_xs5NeverOGvp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:7Combine10PublishersO8SequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/publisher","taskGroups":[]},{"availableLanguages":["swift"],"usr":"s:STsSL7ElementRpzrlE3maxABSgyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/max()","title":"max()","abstract":[{"text":"Returns the maximum element in the sequence.","type":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/max()","fragments":[{"text":"@warn_unqualified_access","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"max","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"?"}]},{"usr":"s:STsST7ElementRpzrlE6joineds15FlattenSequenceVyxGyF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/joined()","taskGroups":[],"abstract":[{"type":"text","text":"Returns the elements of this sequence of sequences, concatenated."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"joined","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s15FlattenSequenceV","kind":"typeIdentifier","text":"FlattenSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"path":"\/documentation\/forkedmerge\/mergeablearray\/joined()","title":"joined()","kind":"org.swift.docc.kind.instanceMethod","language":"swift","availableLanguages":["swift"]},{"title":"Decodable Implementations","path":"\/documentation\/forkedmerge\/mergeablearray\/decodable-implementations","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Decodable-Implementations","availableLanguages":["swift"],"kind":"org.swift.docc.kind.collectionGroup","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/init(from:)"],"title":"Initializers"}]},{"abstract":[{"type":"text","text":"Uses a "},{"code":"MergeableSet","type":"codeVoice"},{"text":" type as the backing of the variable.","type":"text"}],"taskGroups":[],"usr":"s:11ForkedMerge15PropertyBackingO12mergeableSetyA2CmF","path":"\/documentation\/forkedmerge\/propertybacking\/mergeableset","title":"PropertyBacking.mergeableSet","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"mergeableSet","kind":"identifier"}],"availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableSet","kind":"org.swift.docc.kind.enumerationCase"},{"kind":"org.swift.docc.kind.collectionGroup","title":"Decodable Implementations","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(from:)"],"title":"Initializers"}],"path":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","availableLanguages":["swift"],"language":"swift"},{"kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forkedmerge\/mergeablearray\/randomaccesscollection-implementations","availableLanguages":["swift"],"taskGroups":[{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(_:offsetBy:limitedBy:)"]}],"title":"RandomAccessCollection Implementations","language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/RandomAccessCollection-Implementations"},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","title":"Mergeable Implementations","path":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","kind":"org.swift.docc.kind.collectionGroup","taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/merged(withSubordinate:commonAncestor:)"],"title":"Instance Methods"}],"availableLanguages":["swift"],"language":"swift"},{"path":"\/documentation\/forkedmerge\/mergeabledictionary\/init(from:)","availableLanguages":["swift"],"usr":"s:11ForkedMerge19MergeableDictionaryVAASeRzSERzSeR_SER_rlE4fromACyxq_Gs7Decoder_p_tKcfc","language":"swift","title":"init(from:)","kind":"org.swift.docc.kind.initializer","fragments":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/init(from:)"},{"title":"T","kind":"org.swift.docc.kind.associatedType","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"T"}],"taskGroups":[],"usr":"s:11ForkedMerge6MergerP1TQa","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/T","availableLanguages":["swift"],"language":"swift","path":"\/documentation\/forkedmerge\/merger\/t"},{"title":"count","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/count","language":"swift","kind":"org.swift.docc.kind.instanceProperty","usr":"s:11ForkedMerge14MergeableArrayV5counts6UInt64Vvp","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/mergeablearray\/count","taskGroups":[]},{"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compactMap(_:)","title":"compactMap(_:)","language":"swift","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forkedmerge\/mergeablearray\/compactmap(_:)","abstract":[{"type":"text","text":"Returns an array containing the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given"},{"text":" ","type":"text"},{"type":"text","text":"transformation with each element of this sequence."}],"usr":"s:STsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","taskGroups":[]},{"path":"\/documentation\/forkedmerge\/mergeablearray\/firstindex(where:)","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstIndex","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/firstIndex(where:)","usr":"s:SlsE10firstIndex5where0B0QzSgSb7ElementQzKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"firstIndex(where:)","abstract":[{"type":"text","text":"Returns the first index in which an element of the collection satisfies"},{"type":"text","text":" "},{"text":"the given predicate.","type":"text"}],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod"},{"taskGroups":[],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"arrayOfIdentifiableMerge"}],"path":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","usr":"s:11ForkedMerge08PropertyB0O019arrayOfIdentifiableB0yA2CmF","language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.enumerationCase","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"type":"text","text":" "},{"text":"Identifiable. It will ensure that there are no duplicated identifiers following","type":"text"},{"text":" ","type":"text"},{"text":"a merge. When there is a conflict, it will","type":"text"},{"text":" ","type":"text"},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"text":"Guarantees uniqueness of identifiers after merge, but does not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"type":"text","text":" "},{"type":"text","text":"property."}],"title":"PropertyMerge.arrayOfIdentifiableMerge"},{"title":"lastIndex(where:)","abstract":[{"type":"text","text":"Returns the index of the last element in the collection that matches the"},{"text":" ","type":"text"},{"type":"text","text":"given predicate."}],"language":"swift","path":"\/documentation\/forkedmerge\/mergeablearray\/lastindex(where:)","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(where:)","availableLanguages":["swift"],"usr":"s:SKsE9lastIndex5where0B0QzSgSb7ElementQzKXE_tKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastIndex","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},{"fragments":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"elements"},{"text":": ","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(_:)","title":"init(_:)","path":"\/documentation\/forkedmerge\/mergeableset\/init(_:)","kind":"org.swift.docc.kind.initializer","usr":"s:11ForkedMerge12MergeableSetVyACyxGShyxGcfc","language":"swift","availableLanguages":["swift"],"taskGroups":[]},{"path":"\/documentation\/forkedmerge\/propertybacking\/rawrepresentable-implementations","title":"RawRepresentable Implementations","availableLanguages":["swift"],"kind":"org.swift.docc.kind.collectionGroup","taskGroups":[{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/hashValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/hash(into:)"]}],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/RawRepresentable-Implementations"},{"kind":"org.swift.docc.kind.initializer","path":"\/documentation\/forkedmerge\/mergeableset\/init(arrayliteral:)","usr":"s:11ForkedMerge12MergeableSetV12arrayLiteralACyxGxd_tcfc","title":"init(arrayLiteral:)","taskGroups":[],"availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":"...)","kind":"text"}],"language":"swift","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/init(arrayLiteral:)"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/droplast(_:)","usr":"s:SKsE8dropLasty11SubSequenceQzSiF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","kind":"org.swift.docc.kind.instanceMethod","title":"dropLast(_:)","availableLanguages":["swift"],"language":"swift","taskGroups":[],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/dropLast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropLast"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"text":" ","type":"text"},{"type":"text","text":"elements."}]},{"taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SD","kind":"typeIdentifier","text":"Dictionary"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"withSubordinate"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Dictionary","preciseIdentifier":"s:SD"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Dictionary","preciseIdentifier":"s:SD"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"path":"\/documentation\/forkedmerge\/dictionarymerger\/merge(_:withsubordinate:commonancestor:)-7u4jn","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger\/merge(_:withSubordinate:commonAncestor:)-7u4jn","title":"merge(_:withSubordinate:commonAncestor:)","language":"swift","availableLanguages":["swift"],"usr":"s:11ForkedMerge16DictionaryMergerV5merge_15withSubordinate14commonAncestorSDyxq_GAG_A2GtKF"},{"language":"swift","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/!=(_:_:)"],"title":"Operators"}],"title":"Equatable Implementations","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary\/Equatable-Implementations","kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forkedmerge\/mergeabledictionary\/equatable-implementations"},{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"taskGroups":[],"availableLanguages":["swift"],"path":"\/documentation\/forkedmerge\/propertymerge\/hashvalue","language":"swift","title":"hashValue","usr":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:11ForkedMerge08PropertyB0O","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/hashValue","kind":"org.swift.docc.kind.instanceProperty"},{"path":"\/documentation\/forkedmerge\/mergeablearray\/foreach(_:)","availableLanguages":["swift"],"abstract":[{"text":"Calls the given closure on each element in the sequence in the same order","type":"text"},{"type":"text","text":" "},{"text":"as a ","type":"text"},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop."}],"title":"forEach(_:)","language":"swift","usr":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/forEach(_:)","taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}]},{"usr":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:11ForkedMerge15PropertyBackingO","path":"\/documentation\/forkedmerge\/propertybacking\/hashvalue","title":"hashValue","kind":"org.swift.docc.kind.instanceProperty","availableLanguages":["swift"],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/hashValue","taskGroups":[],"language":"swift"},{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeableValue"}],"path":"\/documentation\/forkedmerge\/propertybacking\/mergeablevalue","availableLanguages":["swift"],"language":"swift","kind":"org.swift.docc.kind.enumerationCase","usr":"s:11ForkedMerge15PropertyBackingO14mergeableValueyA2CmF","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking\/mergeableValue","title":"PropertyBacking.mergeableValue","taskGroups":[],"abstract":[{"text":"This uses a ","type":"text"},{"type":"codeVoice","code":"MergeableValue"},{"type":"text","text":" type as the backing of the variable."},{"type":"text","text":" "},{"type":"text","text":"The mergeableValue stores a timestamp with the value whenever there is an update."},{"text":" ","type":"text"},{"text":"A merge will choose the most recent updated value.","type":"text"}]},{"kind":"org.swift.docc.kind.instanceProperty","referenceURL":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet\/values","availableLanguages":["swift"],"taskGroups":[],"usr":"s:11ForkedMerge12MergeableSetV6valuesShyxGvp","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"values"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"title":"values","language":"swift","path":"\/documentation\/forkedmerge\/mergeableset\/values"}]