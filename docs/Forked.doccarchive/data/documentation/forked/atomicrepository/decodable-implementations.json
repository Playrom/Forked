{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/atomicrepository\/decodable-implementations"]}],"metadata":{"title":"Decodable Implementations","modules":[{"name":"Forked"}],"role":"collectionGroup","roleHeading":"API Collection"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/Decodable-Implementations"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"]]},"sections":[],"kind":"article","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(from:)"],"generated":true,"anchor":"Initializers"}],"references":{"doc://Forked/documentation/Forked/AtomicRepository":{"navigatorTitle":[{"text":"AtomicRepository","kind":"identifier"}],"type":"topic","kind":"symbol","title":"AtomicRepository","url":"\/documentation\/forked\/atomicrepository","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepository"}],"role":"symbol","abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"type":"codeVoice","code":"Resource"},{"text":" it contains conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", the "},{"code":"AtomicRepository","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"text":"also ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"text":" ","type":"text"},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"type":"text","text":" "},{"type":"text","text":"file is written to disk."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"},"doc://Forked/documentation/Forked":{"abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"type":"topic","title":"Forked","kind":"symbol","url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","role":"collection"},"doc://Forked/documentation/Forked/AtomicRepository/init(from:)":{"abstract":[],"title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","role":"symbol","url":"\/documentation\/forked\/atomicrepository\/init(from:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(from:)","kind":"symbol"}}}