{"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(from:)"],"anchor":"Initializers","generated":true}],"metadata":{"modules":[{"name":"Forked"}],"role":"collectionGroup","roleHeading":"API Collection","title":"Decodable Implementations"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/atomicrepository\/decodable-implementations"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/Decodable-Implementations"},"kind":"article","references":{"doc://Forked/documentation/Forked/AtomicRepository":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepository"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"type":"codeVoice","code":"Resource"},{"text":" it contains conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", the "},{"type":"codeVoice","code":"AtomicRepository"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"text":", and can be converted to a serialized form and saved as a file.","type":"text"},{"text":" ","type":"text"},{"text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole","type":"text"},{"type":"text","text":" "},{"text":"file is written to disk.","type":"text"}],"title":"AtomicRepository","type":"topic","role":"symbol","url":"\/documentation\/forked\/atomicrepository","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"},"doc://Forked/documentation/Forked":{"role":"collection","url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","title":"Forked","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}]},"doc://Forked/documentation/Forked/AtomicRepository/init(from:)":{"url":"\/documentation\/forked\/atomicrepository\/init(from:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"."}]},"title":"init(from:)","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(from:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}