{"metadata":{"symbolKind":"method","extendedModule":"Forked","externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}],"modules":[{"name":"Forked"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"performAtomically(_:)","role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"type":"text","text":" "},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"text":" ","type":"text"},{"text":"method from the same thread will lead to deadlock. It is best not to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"performAtomically"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReturnType"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"block","kind":"internalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"]}],"references":{"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","type":"topic","abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"type":"text","text":" "},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}],"url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"performAtomically"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","title":"performAtomically(_:)"},"doc://Forked/documentation/Forked":{"role":"collection","url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","title":"Forked","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}]},"doc://Forked/documentation/Forked/ForkedResource":{"url":"\/documentation\/forked\/forkedresource","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"kind":"symbol","title":"ForkedResource","type":"topic","abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}]}}}