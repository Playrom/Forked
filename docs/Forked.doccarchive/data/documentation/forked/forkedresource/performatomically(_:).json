{"variants":[{"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","interfaceLanguage":"swift"},"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"performAtomically"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"extendedModule":"Forked","role":"symbol","roleHeading":"Instance Method","title":"performAtomically(_:)","externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","modules":[{"name":"Forked"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReturnType"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"block"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"type":"text","text":" "},{"text":"use this to group the transaction of calls. Note that reentrance of this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"type":"text","text":"with the "},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}],"references":{"doc://Forked/documentation/Forked/ForkedResource":{"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","url":"\/documentation\/forked\/forkedresource","title":"ForkedResource","kind":"symbol","role":"symbol","abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}]},"doc://Forked/documentation/Forked":{"role":"collection","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","url":"\/documentation\/forked","title":"Forked","type":"topic"},"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"title":"performAtomically(_:)","url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"text":" ","type":"text"},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}]}}}