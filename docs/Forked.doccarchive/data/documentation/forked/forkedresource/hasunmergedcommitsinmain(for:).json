{"sections":[],"variants":[{"paths":["\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns whether main has commits that haven’t been merged into the fork yet.","type":"text"},{"text":" ","type":"text"},{"text":"The common ancestor is always stored in the fork if either the fork or main get updated.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By comparing common ancestor to main version, we can see if main has been updated."}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"kind":"symbol","metadata":{"modules":[{"name":"Forked"}],"roleHeading":"Instance Method","externalID":"s:6Forked0A8ResourceC24hasUnmergedCommitsInMain3forSbAA4ForkV_tKF","symbolKind":"method","role":"symbol","title":"hasUnmergedCommitsInMain(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasUnmergedCommitsInMain"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"extendedModule":"Forked","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasUnmergedCommitsInMain","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","interfaceLanguage":"swift"},"references":{"doc://Forked/documentation/Forked/ForkedResource/hasUnmergedCommitsInMain(for:)":{"abstract":[{"type":"text","text":"Returns whether main has commits that haven’t been merged into the fork yet."},{"text":" ","type":"text"},{"type":"text","text":"The common ancestor is always stored in the fork if either the fork or main get updated."},{"type":"text","text":" "},{"type":"text","text":"By comparing common ancestor to main version, we can see if main has been updated."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasUnmergedCommitsInMain"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasUnmergedCommitsInMain(for:)","url":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)"},"doc://Forked/documentation/Forked":{"role":"collection","url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","title":"Forked","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}]},"doc://Forked/documentation/Forked/Fork":{"type":"topic","navigatorTitle":[{"text":"Fork","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","role":"symbol","kind":"symbol","url":"\/documentation\/forked\/fork","title":"Fork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fork"}],"abstract":[{"type":"text","text":"A  type representing a named fork."}]},"doc://Forked/documentation/Forked/ForkedResource":{"url":"\/documentation\/forked\/forkedresource","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"kind":"symbol","title":"ForkedResource","type":"topic","abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}]}}}