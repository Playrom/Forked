{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasUnmergedCommitsInMain","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"text":"Returns whether main has commits that haven’t been merged into the fork yet.","type":"text"},{"text":" ","type":"text"},{"text":"The common ancestor is always stored in the fork if either the fork or main get updated.","type":"text"},{"text":" ","type":"text"},{"text":"By comparing common ancestor to main version, we can see if main has been updated.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasUnmergedCommitsInMain"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Forked"}],"role":"symbol","title":"hasUnmergedCommitsInMain(for:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"externalID":"s:6Forked0A8ResourceC24hasUnmergedCommitsInMain3forSbAA4ForkV_tKF","extendedModule":"Forked"},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"references":{"doc://Forked/documentation/Forked/Fork":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Fork","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fork"}],"title":"Fork","url":"\/documentation\/forked\/fork","abstract":[{"type":"text","text":"A  type representing a named fork."}],"type":"topic"},"doc://Forked/documentation/Forked/ForkedResource/hasUnmergedCommitsInMain(for:)":{"type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"hasUnmergedCommitsInMain(for:)","abstract":[{"type":"text","text":"Returns whether main has commits that haven’t been merged into the fork yet."},{"text":" ","type":"text"},{"text":"The common ancestor is always stored in the fork if either the fork or main get updated.","type":"text"},{"type":"text","text":" "},{"text":"By comparing common ancestor to main version, we can see if main has been updated.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","url":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasUnmergedCommitsInMain"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://Forked/documentation/Forked":{"role":"collection","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","url":"\/documentation\/forked","title":"Forked","type":"topic"},"doc://Forked/documentation/Forked/ForkedResource":{"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","url":"\/documentation\/forked\/forkedresource","title":"ForkedResource","kind":"symbol","role":"symbol","abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}]}}}