{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"sections":[],"variants":[{"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"] = []) ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"AtomicRepository","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","preciseIdentifier":"s:6Forked16AtomicRepositoryC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]}],"kind":"symbol","abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"type":"text","text":" "},{"type":"text","text":"Create an in-memory ForkedResource with the given fork names, and initial value."},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"text":" ","type":"text"},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"metadata":{"modules":[{"name":"Forked"}],"roleHeading":"Initializer","symbolKind":"init","title":"init(initialValue:forkNames:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"forkNames"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"role":"symbol","externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszs8SendableRd__lufc","extendedModule":"Forked","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","interfaceLanguage":"swift"},"references":{"doc://Forked/documentation/Forked/AtomicRepository":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepository"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"type":"codeVoice","code":"Resource"},{"text":" it contains conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", the "},{"type":"codeVoice","code":"AtomicRepository"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"text":", and can be converted to a serialized form and saved as a file.","type":"text"},{"text":" ","type":"text"},{"text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole","type":"text"},{"type":"text","text":" "},{"text":"file is written to disk.","type":"text"}],"title":"AtomicRepository","type":"topic","role":"symbol","url":"\/documentation\/forked\/atomicrepository","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"},"doc://Forked/documentation/Forked/ForkedResource":{"url":"\/documentation\/forked\/forkedresource","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"kind":"symbol","title":"ForkedResource","type":"topic","abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}]},"doc://Forked/documentation/Forked":{"role":"collection","url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","title":"Forked","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}]},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"type":"text","text":" "},{"type":"text","text":"Create an in-memory ForkedResource with the given fork names, and initial value."},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"type":"text","text":" "},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"role":"symbol","kind":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"])","kind":"text"}],"title":"init(initialValue:forkNames:)","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)"}}}