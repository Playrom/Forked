{"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"type":"text","text":" "},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"text":" ","type":"text"},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"]}],"kind":"symbol","metadata":{"externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszs8SendableRd__lufc","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"modules":[{"name":"Forked"}],"role":"symbol","extendedModule":"Forked","roleHeading":"Initializer","title":"init(initialValue:forkNames:)","symbolKind":"init","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]}},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"? = nil, "},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"] = []) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked16AtomicRepositoryC","text":"AtomicRepository","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"sections":[],"references":{"doc://Forked/documentation/Forked/ForkedResource":{"navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"url":"\/documentation\/forked\/forkedresource","title":"ForkedResource"},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"kind":"symbol","type":"topic","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"])","kind":"text"}],"title":"init(initialValue:forkNames:)","role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"text":" ","type":"text"},{"type":"text","text":"Create an in-memory ForkedResource with the given fork names, and initial value."},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"text":" ","type":"text"},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}]},"doc://Forked/documentation/Forked/AtomicRepository":{"url":"\/documentation\/forked\/atomicrepository","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepository"}],"abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"code":"Resource","type":"codeVoice"},{"type":"text","text":" it contains conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", the "},{"code":"AtomicRepository","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"text":" ","type":"text"},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"type":"text","text":" "},{"type":"text","text":"file is written to disk."}],"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"title":"AtomicRepository","kind":"symbol","type":"topic"},"doc://Forked/documentation/Forked":{"abstract":[{"type":"text","text":"A framework for handling forked data structures and merge operations."}],"identifier":"doc:\/\/Forked\/documentation\/Forked","title":"Forked","kind":"symbol","type":"topic","url":"\/documentation\/forked","role":"collection"}}}