{"metadata":{"externalID":"s:6Forked0A8ResourceC12initialValue5forksACyAA16AtomicRepositoryCyqd__GGqd__Sg_SayAA4ForkVGtcAHRszs8SendableRd__lufc","title":"init(initialValue:forks:)","roleHeading":"Initializer","extendedModule":"Forked","modules":[{"name":"Forked"}],"role":"symbol","symbolKind":"init","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forks"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":"])"}]},"kind":"symbol","identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"? = nil, ","kind":"text"},{"text":"forks","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork"},{"kind":"text","text":"]) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:6Forked16AtomicRepositoryC","text":"AtomicRepository","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"sections":[],"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"text":" ","type":"text"},{"type":"text","text":"Create an in-memory ForkedResource with the given forks, and initial value."},{"text":" ","type":"text"},{"text":"The initial value is optional. If not provided, the main fork will be empty.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value, which is different to","type":"text"},{"type":"text","text":" "},{"text":"the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"text":" ","type":"text"},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"variants":[{"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Forked/documentation/Forked/Fork":{"type":"topic","navigatorTitle":[{"text":"Fork","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","role":"symbol","kind":"symbol","url":"\/documentation\/forked\/fork","title":"Fork","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fork"}],"abstract":[{"type":"text","text":"A  type representing a named fork."}]},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forks:)":{"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init(initialValue:forks:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forks"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"kind":"text","text":"])"}],"role":"symbol","abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Create an in-memory ForkedResource with the given forks, and initial value."},{"type":"text","text":" "},{"text":"The initial value is optional. If not provided, the main fork will be empty.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value, which is different to","type":"text"},{"type":"text","text":" "},{"text":"the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}]},"doc://Forked/documentation/Forked":{"role":"collection","url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","type":"topic","kind":"symbol","title":"Forked","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}]},"doc://Forked/documentation/Forked/ForkedResource":{"url":"\/documentation\/forked\/forkedresource","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"kind":"symbol","title":"ForkedResource","type":"topic","abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}]},"doc://Forked/documentation/Forked/AtomicRepository":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepository"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"type":"codeVoice","code":"Resource"},{"text":" it contains conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", the "},{"type":"codeVoice","code":"AtomicRepository"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"text":", and can be converted to a serialized form and saved as a file.","type":"text"},{"text":" ","type":"text"},{"text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole","type":"text"},{"type":"text","text":" "},{"text":"file is written to disk.","type":"text"}],"title":"AtomicRepository","type":"topic","role":"symbol","url":"\/documentation\/forked\/atomicrepository","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"}}}