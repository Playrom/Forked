{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"] = []) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","text":"AtomicRepository","preciseIdentifier":"s:6Forked16AtomicRepositoryC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"R"},{"text":">, ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)"},"metadata":{"roleHeading":"Initializer","role":"symbol","title":"init(initialValue:forkNames:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"])","kind":"text"}],"externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszs8SendableRd__lufc","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"Forked","modules":[{"name":"Forked"}],"symbolKind":"init"},"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"type":"text","text":" "},{"type":"text","text":"Create an in-memory ForkedResource with the given fork names, and initial value."},{"type":"text","text":" "},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"text":" ","type":"text"},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"kind":"symbol","references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","type":"topic","kind":"symbol","role":"collection","title":"Forked","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/AtomicRepository":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepository"}],"role":"symbol","title":"AtomicRepository","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"url":"\/documentation\/forked\/atomicrepository","abstract":[{"text":"An atomic repository is one that gets loaded completely into memory.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"code":"Resource","type":"codeVoice"},{"text":" it contains conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"AtomicRepository"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"also "},{"code":"Codable","type":"codeVoice"},{"text":", and can be converted to a serialized form and saved as a file.","type":"text"},{"type":"text","text":" "},{"text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole","type":"text"},{"type":"text","text":" "},{"text":"file is written to disk.","type":"text"}],"type":"topic","kind":"symbol"},"doc://Forked/documentation/Forked/ForkedResource":{"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","title":"ForkedResource","role":"symbol","url":"\/documentation\/forked\/forkedresource","kind":"symbol","type":"topic"},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"type":"topic","abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Create an in-memory ForkedResource with the given fork names, and initial value."},{"text":" ","type":"text"},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"type":"text","text":" "},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"role":"symbol","conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","kind":"symbol","title":"init(initialValue:forkNames:)"}}}