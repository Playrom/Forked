{"metadata":{"roleHeading":"Instance Method","externalID":"s:6Forked0A8ResourceC24hasUnmergedCommitsInMain3forSbAA4ForkV_tKF","symbolKind":"method","extendedModule":"Forked","title":"hasUnmergedCommitsInMain(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasUnmergedCommitsInMain","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"modules":[{"name":"Forked"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"sections":[],"abstract":[{"type":"text","text":"Returns whether main has commits that haven’t been merged into the fork yet."},{"text":" ","type":"text"},{"text":"The common ancestor is always stored in the fork if either the fork or main get updated.","type":"text"},{"text":" ","type":"text"},{"text":"By comparing common ancestor to main version, we can see if main has been updated.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasUnmergedCommitsInMain"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Fork","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","interfaceLanguage":"swift"},"references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","type":"topic","kind":"symbol","role":"collection","title":"Forked","abstract":[{"text":"A framework for handling forked data structures and merge operations.","type":"text"}],"identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/Fork":{"kind":"symbol","abstract":[{"type":"text","text":"A  type representing a named fork."}],"title":"Fork","identifier":"doc:\/\/Forked\/documentation\/Forked\/Fork","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Fork","kind":"identifier"}],"role":"symbol","url":"\/documentation\/forked\/fork","navigatorTitle":[{"text":"Fork","kind":"identifier"}],"type":"topic"},"doc://Forked/documentation/Forked/ForkedResource/hasUnmergedCommitsInMain(for:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"hasUnmergedCommitsInMain(for:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasUnmergedCommitsInMain","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","kind":"symbol","abstract":[{"text":"Returns whether main has commits that haven’t been merged into the fork yet.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The common ancestor is always stored in the fork if either the fork or main get updated."},{"text":" ","type":"text"},{"text":"By comparing common ancestor to main version, we can see if main has been updated.","type":"text"}],"url":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)"},"doc://Forked/documentation/Forked/ForkedResource":{"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","title":"ForkedResource","role":"symbol","url":"\/documentation\/forked\/forkedresource","kind":"symbol","type":"topic"}}}